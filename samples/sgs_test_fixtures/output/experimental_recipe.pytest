#  Copyright 2022 Google LLC
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.


# This file is automatically generated. Please do not modify it directly.
# Find the relevant recipe file in the samples/recipes or samples/ingredients
# directory and apply your changes there.


from collections import Counter
from collections import defaultdict
from functools import cache
from functools import reduce
import pprint


def some_function(a: int, b: str) -> defaultdict:
    """
    Do something with a and b that will give a defaultdict.
    """
    out = defaultdict(int)
    for letter in b:
        out[letter] += a * ord(letter) + reduce(lambda x, y: x + ord(y), b, 0)
    pprint.pprint(out)
    return out


# I can have some random things between ingredients
def test():
    print("This is a test. The only thing I shouldn't place in recipes is imports.")


@cache
def other_function(word: str, number: int) -> Counter:
    """
    Do something with the arguments. I don't care what.
    """
    new_word = reduce(lambda s1, s2: s1 + s2 + s2, word, "")
    letters = Counter(new_word)
    for letter in word:
        letters.update({letter: number * ord(letter)})
    return letters


if __name__ == "__main__":
    print("Here is an example of two functions:")
    some_function(14, "google")
    other_function("google", 9001)
    print("That's it :)")
