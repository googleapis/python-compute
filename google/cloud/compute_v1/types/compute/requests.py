# -*- coding: utf-8 -*-
# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
import proto  # type: ignore


__manifest__ = (
    "AbandonInstancesInstanceGroupManagerRequest",
    "AbandonInstancesRegionInstanceGroupManagerRequest",
    "AddAccessConfigInstanceRequest",
    "AddAssociationFirewallPolicyRequest",
    "AddAssociationNetworkFirewallPolicyRequest",
    "AddAssociationRegionNetworkFirewallPolicyRequest",
    "AddHealthCheckTargetPoolRequest",
    "AddInstanceTargetPoolRequest",
    "AddInstancesInstanceGroupRequest",
    "AddNodesNodeGroupRequest",
    "AddPeeringNetworkRequest",
    "AddResourcePoliciesDiskRequest",
    "AddResourcePoliciesInstanceRequest",
    "AddResourcePoliciesRegionDiskRequest",
    "AddRuleFirewallPolicyRequest",
    "AddRuleNetworkFirewallPolicyRequest",
    "AddRuleRegionNetworkFirewallPolicyRequest",
    "AddRuleSecurityPolicyRequest",
    "AddSignedUrlKeyBackendBucketRequest",
    "AddSignedUrlKeyBackendServiceRequest",
    "AggregatedListAcceleratorTypesRequest",
    "AggregatedListAddressesRequest",
    "AggregatedListAutoscalersRequest",
    "AggregatedListBackendServicesRequest",
    "AggregatedListDiskTypesRequest",
    "AggregatedListDisksRequest",
    "AggregatedListForwardingRulesRequest",
    "AggregatedListGlobalOperationsRequest",
    "AggregatedListHealthChecksRequest",
    "AggregatedListInstanceGroupManagersRequest",
    "AggregatedListInstanceGroupsRequest",
    "AggregatedListInstancesRequest",
    "AggregatedListInterconnectAttachmentsRequest",
    "AggregatedListMachineTypesRequest",
    "AggregatedListNetworkEdgeSecurityServicesRequest",
    "AggregatedListNetworkEndpointGroupsRequest",
    "AggregatedListNodeGroupsRequest",
    "AggregatedListNodeTemplatesRequest",
    "AggregatedListNodeTypesRequest",
    "AggregatedListPacketMirroringsRequest",
    "AggregatedListPublicDelegatedPrefixesRequest",
    "AggregatedListRegionCommitmentsRequest",
    "AggregatedListReservationsRequest",
    "AggregatedListResourcePoliciesRequest",
    "AggregatedListRoutersRequest",
    "AggregatedListSecurityPoliciesRequest",
    "AggregatedListServiceAttachmentsRequest",
    "AggregatedListSslCertificatesRequest",
    "AggregatedListSubnetworksRequest",
    "AggregatedListTargetHttpProxiesRequest",
    "AggregatedListTargetHttpsProxiesRequest",
    "AggregatedListTargetInstancesRequest",
    "AggregatedListTargetPoolsRequest",
    "AggregatedListTargetVpnGatewaysRequest",
    "AggregatedListUrlMapsRequest",
    "AggregatedListVpnGatewaysRequest",
    "AggregatedListVpnTunnelsRequest",
    "ApplyUpdatesToInstancesInstanceGroupManagerRequest",
    "ApplyUpdatesToInstancesRegionInstanceGroupManagerRequest",
    "AttachDiskInstanceRequest",
    "AttachNetworkEndpointsGlobalNetworkEndpointGroupRequest",
    "AttachNetworkEndpointsNetworkEndpointGroupRequest",
    "BulkInsertInstanceRequest",
    "BulkInsertRegionInstanceRequest",
    "CloneRulesFirewallPolicyRequest",
    "CloneRulesNetworkFirewallPolicyRequest",
    "CloneRulesRegionNetworkFirewallPolicyRequest",
    "CreateInstancesInstanceGroupManagerRequest",
    "CreateInstancesRegionInstanceGroupManagerRequest",
    "CreateSnapshotDiskRequest",
    "CreateSnapshotRegionDiskRequest",
    "DeleteAccessConfigInstanceRequest",
    "DeleteAddressRequest",
    "DeleteAutoscalerRequest",
    "DeleteBackendBucketRequest",
    "DeleteBackendServiceRequest",
    "DeleteDiskRequest",
    "DeleteExternalVpnGatewayRequest",
    "DeleteFirewallPolicyRequest",
    "DeleteFirewallRequest",
    "DeleteForwardingRuleRequest",
    "DeleteGlobalAddressRequest",
    "DeleteGlobalForwardingRuleRequest",
    "DeleteGlobalNetworkEndpointGroupRequest",
    "DeleteGlobalOperationRequest",
    "DeleteGlobalOrganizationOperationRequest",
    "DeleteGlobalPublicDelegatedPrefixeRequest",
    "DeleteHealthCheckRequest",
    "DeleteImageRequest",
    "DeleteInstanceGroupManagerRequest",
    "DeleteInstanceGroupRequest",
    "DeleteInstanceRequest",
    "DeleteInstanceTemplateRequest",
    "DeleteInstancesInstanceGroupManagerRequest",
    "DeleteInstancesRegionInstanceGroupManagerRequest",
    "DeleteInterconnectAttachmentRequest",
    "DeleteInterconnectRequest",
    "DeleteLicenseRequest",
    "DeleteMachineImageRequest",
    "DeleteNetworkEdgeSecurityServiceRequest",
    "DeleteNetworkEndpointGroupRequest",
    "DeleteNetworkFirewallPolicyRequest",
    "DeleteNetworkRequest",
    "DeleteNodeGroupRequest",
    "DeleteNodeTemplateRequest",
    "DeleteNodesNodeGroupRequest",
    "DeletePacketMirroringRequest",
    "DeletePerInstanceConfigsInstanceGroupManagerRequest",
    "DeletePerInstanceConfigsRegionInstanceGroupManagerRequest",
    "DeletePublicAdvertisedPrefixeRequest",
    "DeletePublicDelegatedPrefixeRequest",
    "DeleteRegionAutoscalerRequest",
    "DeleteRegionBackendServiceRequest",
    "DeleteRegionDiskRequest",
    "DeleteRegionHealthCheckRequest",
    "DeleteRegionHealthCheckServiceRequest",
    "DeleteRegionInstanceGroupManagerRequest",
    "DeleteRegionNetworkEndpointGroupRequest",
    "DeleteRegionNetworkFirewallPolicyRequest",
    "DeleteRegionNotificationEndpointRequest",
    "DeleteRegionOperationRequest",
    "DeleteRegionSecurityPolicyRequest",
    "DeleteRegionSslCertificateRequest",
    "DeleteRegionTargetHttpProxyRequest",
    "DeleteRegionTargetHttpsProxyRequest",
    "DeleteRegionUrlMapRequest",
    "DeleteReservationRequest",
    "DeleteResourcePolicyRequest",
    "DeleteRouteRequest",
    "DeleteRouterRequest",
    "DeleteSecurityPolicyRequest",
    "DeleteServiceAttachmentRequest",
    "DeleteSignedUrlKeyBackendBucketRequest",
    "DeleteSignedUrlKeyBackendServiceRequest",
    "DeleteSnapshotRequest",
    "DeleteSslCertificateRequest",
    "DeleteSslPolicyRequest",
    "DeleteSubnetworkRequest",
    "DeleteTargetGrpcProxyRequest",
    "DeleteTargetHttpProxyRequest",
    "DeleteTargetHttpsProxyRequest",
    "DeleteTargetInstanceRequest",
    "DeleteTargetPoolRequest",
    "DeleteTargetSslProxyRequest",
    "DeleteTargetTcpProxyRequest",
    "DeleteTargetVpnGatewayRequest",
    "DeleteUrlMapRequest",
    "DeleteVpnGatewayRequest",
    "DeleteVpnTunnelRequest",
    "DeleteZoneOperationRequest",
    "DeprecateImageRequest",
    "DetachDiskInstanceRequest",
    "DetachNetworkEndpointsGlobalNetworkEndpointGroupRequest",
    "DetachNetworkEndpointsNetworkEndpointGroupRequest",
    "DisableXpnHostProjectRequest",
    "DisableXpnResourceProjectRequest",
    "DiskMoveRequest",
    "DisksAddResourcePoliciesRequest",
    "DisksRemoveResourcePoliciesRequest",
    "DisksResizeRequest",
    "EnableXpnHostProjectRequest",
    "EnableXpnResourceProjectRequest",
    "ExpandIpCidrRangeSubnetworkRequest",
    "GetAcceleratorTypeRequest",
    "GetAddressRequest",
    "GetAssociationFirewallPolicyRequest",
    "GetAssociationNetworkFirewallPolicyRequest",
    "GetAssociationRegionNetworkFirewallPolicyRequest",
    "GetAutoscalerRequest",
    "GetBackendBucketRequest",
    "GetBackendServiceRequest",
    "GetDiagnosticsInterconnectRequest",
    "GetDiskRequest",
    "GetDiskTypeRequest",
    "GetEffectiveFirewallsInstanceRequest",
    "GetEffectiveFirewallsNetworkRequest",
    "GetEffectiveFirewallsRegionNetworkFirewallPolicyRequest",
    "GetExternalVpnGatewayRequest",
    "GetFirewallPolicyRequest",
    "GetFirewallRequest",
    "GetForwardingRuleRequest",
    "GetFromFamilyImageRequest",
    "GetGlobalAddressRequest",
    "GetGlobalForwardingRuleRequest",
    "GetGlobalNetworkEndpointGroupRequest",
    "GetGlobalOperationRequest",
    "GetGlobalOrganizationOperationRequest",
    "GetGlobalPublicDelegatedPrefixeRequest",
    "GetGuestAttributesInstanceRequest",
    "GetHealthBackendServiceRequest",
    "GetHealthCheckRequest",
    "GetHealthRegionBackendServiceRequest",
    "GetHealthTargetPoolRequest",
    "GetIamPolicyDiskRequest",
    "GetIamPolicyFirewallPolicyRequest",
    "GetIamPolicyImageRequest",
    "GetIamPolicyInstanceRequest",
    "GetIamPolicyInstanceTemplateRequest",
    "GetIamPolicyLicenseRequest",
    "GetIamPolicyMachineImageRequest",
    "GetIamPolicyNetworkFirewallPolicyRequest",
    "GetIamPolicyNodeGroupRequest",
    "GetIamPolicyNodeTemplateRequest",
    "GetIamPolicyRegionDiskRequest",
    "GetIamPolicyRegionNetworkFirewallPolicyRequest",
    "GetIamPolicyReservationRequest",
    "GetIamPolicyResourcePolicyRequest",
    "GetIamPolicyServiceAttachmentRequest",
    "GetIamPolicySnapshotRequest",
    "GetIamPolicySubnetworkRequest",
    "GetImageFamilyViewRequest",
    "GetImageRequest",
    "GetInstanceGroupManagerRequest",
    "GetInstanceGroupRequest",
    "GetInstanceRequest",
    "GetInstanceTemplateRequest",
    "GetInterconnectAttachmentRequest",
    "GetInterconnectLocationRequest",
    "GetInterconnectRequest",
    "GetLicenseCodeRequest",
    "GetLicenseRequest",
    "GetMachineImageRequest",
    "GetMachineTypeRequest",
    "GetNatMappingInfoRoutersRequest",
    "GetNetworkEdgeSecurityServiceRequest",
    "GetNetworkEndpointGroupRequest",
    "GetNetworkFirewallPolicyRequest",
    "GetNetworkRequest",
    "GetNodeGroupRequest",
    "GetNodeTemplateRequest",
    "GetNodeTypeRequest",
    "GetPacketMirroringRequest",
    "GetProjectRequest",
    "GetPublicAdvertisedPrefixeRequest",
    "GetPublicDelegatedPrefixeRequest",
    "GetRegionAutoscalerRequest",
    "GetRegionBackendServiceRequest",
    "GetRegionCommitmentRequest",
    "GetRegionDiskRequest",
    "GetRegionDiskTypeRequest",
    "GetRegionHealthCheckRequest",
    "GetRegionHealthCheckServiceRequest",
    "GetRegionInstanceGroupManagerRequest",
    "GetRegionInstanceGroupRequest",
    "GetRegionNetworkEndpointGroupRequest",
    "GetRegionNetworkFirewallPolicyRequest",
    "GetRegionNotificationEndpointRequest",
    "GetRegionOperationRequest",
    "GetRegionRequest",
    "GetRegionSecurityPolicyRequest",
    "GetRegionSslCertificateRequest",
    "GetRegionTargetHttpProxyRequest",
    "GetRegionTargetHttpsProxyRequest",
    "GetRegionUrlMapRequest",
    "GetReservationRequest",
    "GetResourcePolicyRequest",
    "GetRouteRequest",
    "GetRouterRequest",
    "GetRouterStatusRouterRequest",
    "GetRuleFirewallPolicyRequest",
    "GetRuleNetworkFirewallPolicyRequest",
    "GetRuleRegionNetworkFirewallPolicyRequest",
    "GetRuleSecurityPolicyRequest",
    "GetScreenshotInstanceRequest",
    "GetSecurityPolicyRequest",
    "GetSerialPortOutputInstanceRequest",
    "GetServiceAttachmentRequest",
    "GetShieldedInstanceIdentityInstanceRequest",
    "GetSnapshotRequest",
    "GetSslCertificateRequest",
    "GetSslPolicyRequest",
    "GetStatusVpnGatewayRequest",
    "GetSubnetworkRequest",
    "GetTargetGrpcProxyRequest",
    "GetTargetHttpProxyRequest",
    "GetTargetHttpsProxyRequest",
    "GetTargetInstanceRequest",
    "GetTargetPoolRequest",
    "GetTargetSslProxyRequest",
    "GetTargetTcpProxyRequest",
    "GetTargetVpnGatewayRequest",
    "GetUrlMapRequest",
    "GetVpnGatewayRequest",
    "GetVpnTunnelRequest",
    "GetXpnHostProjectRequest",
    "GetXpnResourcesProjectsRequest",
    "GetZoneOperationRequest",
    "GetZoneRequest",
    "GlobalNetworkEndpointGroupsAttachEndpointsRequest",
    "GlobalNetworkEndpointGroupsDetachEndpointsRequest",
    "GlobalOrganizationSetPolicyRequest",
    "GlobalSetLabelsRequest",
    "GlobalSetPolicyRequest",
    "InsertAddressRequest",
    "InsertAutoscalerRequest",
    "InsertBackendBucketRequest",
    "InsertBackendServiceRequest",
    "InsertDiskRequest",
    "InsertExternalVpnGatewayRequest",
    "InsertFirewallPolicyRequest",
    "InsertFirewallRequest",
    "InsertForwardingRuleRequest",
    "InsertGlobalAddressRequest",
    "InsertGlobalForwardingRuleRequest",
    "InsertGlobalNetworkEndpointGroupRequest",
    "InsertGlobalPublicDelegatedPrefixeRequest",
    "InsertHealthCheckRequest",
    "InsertImageRequest",
    "InsertInstanceGroupManagerRequest",
    "InsertInstanceGroupRequest",
    "InsertInstanceRequest",
    "InsertInstanceTemplateRequest",
    "InsertInterconnectAttachmentRequest",
    "InsertInterconnectRequest",
    "InsertLicenseRequest",
    "InsertMachineImageRequest",
    "InsertNetworkEdgeSecurityServiceRequest",
    "InsertNetworkEndpointGroupRequest",
    "InsertNetworkFirewallPolicyRequest",
    "InsertNetworkRequest",
    "InsertNodeGroupRequest",
    "InsertNodeTemplateRequest",
    "InsertPacketMirroringRequest",
    "InsertPublicAdvertisedPrefixeRequest",
    "InsertPublicDelegatedPrefixeRequest",
    "InsertRegionAutoscalerRequest",
    "InsertRegionBackendServiceRequest",
    "InsertRegionCommitmentRequest",
    "InsertRegionDiskRequest",
    "InsertRegionHealthCheckRequest",
    "InsertRegionHealthCheckServiceRequest",
    "InsertRegionInstanceGroupManagerRequest",
    "InsertRegionNetworkEndpointGroupRequest",
    "InsertRegionNetworkFirewallPolicyRequest",
    "InsertRegionNotificationEndpointRequest",
    "InsertRegionSecurityPolicyRequest",
    "InsertRegionSslCertificateRequest",
    "InsertRegionTargetHttpProxyRequest",
    "InsertRegionTargetHttpsProxyRequest",
    "InsertRegionUrlMapRequest",
    "InsertReservationRequest",
    "InsertResourcePolicyRequest",
    "InsertRouteRequest",
    "InsertRouterRequest",
    "InsertSecurityPolicyRequest",
    "InsertServiceAttachmentRequest",
    "InsertSnapshotRequest",
    "InsertSslCertificateRequest",
    "InsertSslPolicyRequest",
    "InsertSubnetworkRequest",
    "InsertTargetGrpcProxyRequest",
    "InsertTargetHttpProxyRequest",
    "InsertTargetHttpsProxyRequest",
    "InsertTargetInstanceRequest",
    "InsertTargetPoolRequest",
    "InsertTargetSslProxyRequest",
    "InsertTargetTcpProxyRequest",
    "InsertTargetVpnGatewayRequest",
    "InsertUrlMapRequest",
    "InsertVpnGatewayRequest",
    "InsertVpnTunnelRequest",
    "InstanceGroupManagersAbandonInstancesRequest",
    "InstanceGroupManagersApplyUpdatesRequest",
    "InstanceGroupManagersCreateInstancesRequest",
    "InstanceGroupManagersDeleteInstancesRequest",
    "InstanceGroupManagersRecreateInstancesRequest",
    "InstanceGroupManagersSetInstanceTemplateRequest",
    "InstanceGroupManagersSetTargetPoolsRequest",
    "InstanceGroupsAddInstancesRequest",
    "InstanceGroupsListInstancesRequest",
    "InstanceGroupsRemoveInstancesRequest",
    "InstanceGroupsSetNamedPortsRequest",
    "InstanceMoveRequest",
    "InstancesAddResourcePoliciesRequest",
    "InstancesRemoveResourcePoliciesRequest",
    "InstancesSetLabelsRequest",
    "InstancesSetMachineResourcesRequest",
    "InstancesSetMachineTypeRequest",
    "InstancesSetMinCpuPlatformRequest",
    "InstancesSetServiceAccountRequest",
    "InstancesStartWithEncryptionKeyRequest",
    "InvalidateCacheUrlMapRequest",
    "ListAcceleratorTypesRequest",
    "ListAddressesRequest",
    "ListAssociationsFirewallPolicyRequest",
    "ListAutoscalersRequest",
    "ListAvailableFeaturesSslPoliciesRequest",
    "ListBackendBucketsRequest",
    "ListBackendServicesRequest",
    "ListDiskTypesRequest",
    "ListDisksRequest",
    "ListErrorsInstanceGroupManagersRequest",
    "ListErrorsRegionInstanceGroupManagersRequest",
    "ListExternalVpnGatewaysRequest",
    "ListFirewallPoliciesRequest",
    "ListFirewallsRequest",
    "ListForwardingRulesRequest",
    "ListGlobalAddressesRequest",
    "ListGlobalForwardingRulesRequest",
    "ListGlobalNetworkEndpointGroupsRequest",
    "ListGlobalOperationsRequest",
    "ListGlobalOrganizationOperationsRequest",
    "ListGlobalPublicDelegatedPrefixesRequest",
    "ListHealthChecksRequest",
    "ListImagesRequest",
    "ListInstanceGroupManagersRequest",
    "ListInstanceGroupsRequest",
    "ListInstanceTemplatesRequest",
    "ListInstancesInstanceGroupsRequest",
    "ListInstancesRegionInstanceGroupsRequest",
    "ListInstancesRequest",
    "ListInterconnectAttachmentsRequest",
    "ListInterconnectLocationsRequest",
    "ListInterconnectsRequest",
    "ListLicensesRequest",
    "ListMachineImagesRequest",
    "ListMachineTypesRequest",
    "ListManagedInstancesInstanceGroupManagersRequest",
    "ListManagedInstancesRegionInstanceGroupManagersRequest",
    "ListNetworkEndpointGroupsRequest",
    "ListNetworkEndpointsGlobalNetworkEndpointGroupsRequest",
    "ListNetworkEndpointsNetworkEndpointGroupsRequest",
    "ListNetworkFirewallPoliciesRequest",
    "ListNetworksRequest",
    "ListNodeGroupsRequest",
    "ListNodeTemplatesRequest",
    "ListNodeTypesRequest",
    "ListNodesNodeGroupsRequest",
    "ListPacketMirroringsRequest",
    "ListPeeringRoutesNetworksRequest",
    "ListPerInstanceConfigsInstanceGroupManagersRequest",
    "ListPerInstanceConfigsRegionInstanceGroupManagersRequest",
    "ListPreconfiguredExpressionSetsSecurityPoliciesRequest",
    "ListPublicAdvertisedPrefixesRequest",
    "ListPublicDelegatedPrefixesRequest",
    "ListReferrersInstancesRequest",
    "ListRegionAutoscalersRequest",
    "ListRegionBackendServicesRequest",
    "ListRegionCommitmentsRequest",
    "ListRegionDiskTypesRequest",
    "ListRegionDisksRequest",
    "ListRegionHealthCheckServicesRequest",
    "ListRegionHealthChecksRequest",
    "ListRegionInstanceGroupManagersRequest",
    "ListRegionInstanceGroupsRequest",
    "ListRegionNetworkEndpointGroupsRequest",
    "ListRegionNetworkFirewallPoliciesRequest",
    "ListRegionNotificationEndpointsRequest",
    "ListRegionOperationsRequest",
    "ListRegionSecurityPoliciesRequest",
    "ListRegionSslCertificatesRequest",
    "ListRegionTargetHttpProxiesRequest",
    "ListRegionTargetHttpsProxiesRequest",
    "ListRegionUrlMapsRequest",
    "ListRegionsRequest",
    "ListReservationsRequest",
    "ListResourcePoliciesRequest",
    "ListRoutersRequest",
    "ListRoutesRequest",
    "ListSecurityPoliciesRequest",
    "ListServiceAttachmentsRequest",
    "ListSnapshotsRequest",
    "ListSslCertificatesRequest",
    "ListSslPoliciesRequest",
    "ListSubnetworksRequest",
    "ListTargetGrpcProxiesRequest",
    "ListTargetHttpProxiesRequest",
    "ListTargetHttpsProxiesRequest",
    "ListTargetInstancesRequest",
    "ListTargetPoolsRequest",
    "ListTargetSslProxiesRequest",
    "ListTargetTcpProxiesRequest",
    "ListTargetVpnGatewaysRequest",
    "ListUrlMapsRequest",
    "ListUsableSubnetworksRequest",
    "ListVpnGatewaysRequest",
    "ListVpnTunnelsRequest",
    "ListXpnHostsProjectsRequest",
    "ListZoneOperationsRequest",
    "ListZonesRequest",
    "MoveDiskProjectRequest",
    "MoveFirewallPolicyRequest",
    "MoveInstanceProjectRequest",
    "NetworkEndpointGroupsAttachEndpointsRequest",
    "NetworkEndpointGroupsDetachEndpointsRequest",
    "NetworkEndpointGroupsListEndpointsRequest",
    "NetworksAddPeeringRequest",
    "NetworksRemovePeeringRequest",
    "NetworksUpdatePeeringRequest",
    "NodeGroupsAddNodesRequest",
    "NodeGroupsDeleteNodesRequest",
    "NodeGroupsSetNodeTemplateRequest",
    "PatchAutoscalerRequest",
    "PatchBackendBucketRequest",
    "PatchBackendServiceRequest",
    "PatchFirewallPolicyRequest",
    "PatchFirewallRequest",
    "PatchForwardingRuleRequest",
    "PatchGlobalForwardingRuleRequest",
    "PatchGlobalPublicDelegatedPrefixeRequest",
    "PatchHealthCheckRequest",
    "PatchImageRequest",
    "PatchInstanceGroupManagerRequest",
    "PatchInterconnectAttachmentRequest",
    "PatchInterconnectRequest",
    "PatchNetworkEdgeSecurityServiceRequest",
    "PatchNetworkFirewallPolicyRequest",
    "PatchNetworkRequest",
    "PatchNodeGroupRequest",
    "PatchPacketMirroringRequest",
    "PatchPerInstanceConfigsInstanceGroupManagerRequest",
    "PatchPerInstanceConfigsRegionInstanceGroupManagerRequest",
    "PatchPublicAdvertisedPrefixeRequest",
    "PatchPublicDelegatedPrefixeRequest",
    "PatchRegionAutoscalerRequest",
    "PatchRegionBackendServiceRequest",
    "PatchRegionHealthCheckRequest",
    "PatchRegionHealthCheckServiceRequest",
    "PatchRegionInstanceGroupManagerRequest",
    "PatchRegionNetworkFirewallPolicyRequest",
    "PatchRegionSecurityPolicyRequest",
    "PatchRegionTargetHttpsProxyRequest",
    "PatchRegionUrlMapRequest",
    "PatchRouterRequest",
    "PatchRuleFirewallPolicyRequest",
    "PatchRuleNetworkFirewallPolicyRequest",
    "PatchRuleRegionNetworkFirewallPolicyRequest",
    "PatchRuleSecurityPolicyRequest",
    "PatchSecurityPolicyRequest",
    "PatchServiceAttachmentRequest",
    "PatchSslPolicyRequest",
    "PatchSubnetworkRequest",
    "PatchTargetGrpcProxyRequest",
    "PatchTargetHttpProxyRequest",
    "PatchTargetHttpsProxyRequest",
    "PatchUrlMapRequest",
    "PreviewRouterRequest",
    "ProjectsDisableXpnResourceRequest",
    "ProjectsEnableXpnResourceRequest",
    "ProjectsListXpnHostsRequest",
    "ProjectsSetDefaultNetworkTierRequest",
    "RecreateInstancesInstanceGroupManagerRequest",
    "RecreateInstancesRegionInstanceGroupManagerRequest",
    "RegionDisksAddResourcePoliciesRequest",
    "RegionDisksRemoveResourcePoliciesRequest",
    "RegionDisksResizeRequest",
    "RegionInstanceGroupManagersAbandonInstancesRequest",
    "RegionInstanceGroupManagersApplyUpdatesRequest",
    "RegionInstanceGroupManagersCreateInstancesRequest",
    "RegionInstanceGroupManagersDeleteInstancesRequest",
    "RegionInstanceGroupManagersRecreateRequest",
    "RegionInstanceGroupManagersSetTargetPoolsRequest",
    "RegionInstanceGroupManagersSetTemplateRequest",
    "RegionInstanceGroupsListInstancesRequest",
    "RegionInstanceGroupsSetNamedPortsRequest",
    "RegionSetLabelsRequest",
    "RegionSetPolicyRequest",
    "RegionTargetHttpsProxiesSetSslCertificatesRequest",
    "RegionUrlMapsValidateRequest",
    "RemoveAssociationFirewallPolicyRequest",
    "RemoveAssociationNetworkFirewallPolicyRequest",
    "RemoveAssociationRegionNetworkFirewallPolicyRequest",
    "RemoveHealthCheckTargetPoolRequest",
    "RemoveInstanceTargetPoolRequest",
    "RemoveInstancesInstanceGroupRequest",
    "RemovePeeringNetworkRequest",
    "RemoveResourcePoliciesDiskRequest",
    "RemoveResourcePoliciesInstanceRequest",
    "RemoveResourcePoliciesRegionDiskRequest",
    "RemoveRuleFirewallPolicyRequest",
    "RemoveRuleNetworkFirewallPolicyRequest",
    "RemoveRuleRegionNetworkFirewallPolicyRequest",
    "RemoveRuleSecurityPolicyRequest",
    "ReservationsResizeRequest",
    "ResetInstanceRequest",
    "ResizeDiskRequest",
    "ResizeInstanceGroupManagerRequest",
    "ResizeRegionDiskRequest",
    "ResizeRegionInstanceGroupManagerRequest",
    "ResizeReservationRequest",
    "ResumeInstanceRequest",
    "SendDiagnosticInterruptInstanceRequest",
    "SetBackendServiceTargetSslProxyRequest",
    "SetBackendServiceTargetTcpProxyRequest",
    "SetBackupTargetPoolRequest",
    "SetCertificateMapTargetHttpsProxyRequest",
    "SetCertificateMapTargetSslProxyRequest",
    "SetCommonInstanceMetadataProjectRequest",
    "SetDefaultNetworkTierProjectRequest",
    "SetDeletionProtectionInstanceRequest",
    "SetDiskAutoDeleteInstanceRequest",
    "SetEdgeSecurityPolicyBackendBucketRequest",
    "SetEdgeSecurityPolicyBackendServiceRequest",
    "SetIamPolicyDiskRequest",
    "SetIamPolicyFirewallPolicyRequest",
    "SetIamPolicyImageRequest",
    "SetIamPolicyInstanceRequest",
    "SetIamPolicyInstanceTemplateRequest",
    "SetIamPolicyLicenseRequest",
    "SetIamPolicyMachineImageRequest",
    "SetIamPolicyNetworkFirewallPolicyRequest",
    "SetIamPolicyNodeGroupRequest",
    "SetIamPolicyNodeTemplateRequest",
    "SetIamPolicyRegionDiskRequest",
    "SetIamPolicyRegionNetworkFirewallPolicyRequest",
    "SetIamPolicyReservationRequest",
    "SetIamPolicyResourcePolicyRequest",
    "SetIamPolicyServiceAttachmentRequest",
    "SetIamPolicySnapshotRequest",
    "SetIamPolicySubnetworkRequest",
    "SetInstanceTemplateInstanceGroupManagerRequest",
    "SetInstanceTemplateRegionInstanceGroupManagerRequest",
    "SetLabelsDiskRequest",
    "SetLabelsExternalVpnGatewayRequest",
    "SetLabelsForwardingRuleRequest",
    "SetLabelsGlobalForwardingRuleRequest",
    "SetLabelsImageRequest",
    "SetLabelsInstanceRequest",
    "SetLabelsRegionDiskRequest",
    "SetLabelsSnapshotRequest",
    "SetLabelsVpnGatewayRequest",
    "SetMachineResourcesInstanceRequest",
    "SetMachineTypeInstanceRequest",
    "SetMetadataInstanceRequest",
    "SetMinCpuPlatformInstanceRequest",
    "SetNamedPortsInstanceGroupRequest",
    "SetNamedPortsRegionInstanceGroupRequest",
    "SetNodeTemplateNodeGroupRequest",
    "SetPrivateIpGoogleAccessSubnetworkRequest",
    "SetProxyHeaderTargetSslProxyRequest",
    "SetProxyHeaderTargetTcpProxyRequest",
    "SetQuicOverrideTargetHttpsProxyRequest",
    "SetSchedulingInstanceRequest",
    "SetSecurityPolicyBackendServiceRequest",
    "SetServiceAccountInstanceRequest",
    "SetShieldedInstanceIntegrityPolicyInstanceRequest",
    "SetSslCertificatesRegionTargetHttpsProxyRequest",
    "SetSslCertificatesTargetHttpsProxyRequest",
    "SetSslCertificatesTargetSslProxyRequest",
    "SetSslPolicyTargetHttpsProxyRequest",
    "SetSslPolicyTargetSslProxyRequest",
    "SetTagsInstanceRequest",
    "SetTargetForwardingRuleRequest",
    "SetTargetGlobalForwardingRuleRequest",
    "SetTargetPoolsInstanceGroupManagerRequest",
    "SetTargetPoolsRegionInstanceGroupManagerRequest",
    "SetUrlMapRegionTargetHttpProxyRequest",
    "SetUrlMapRegionTargetHttpsProxyRequest",
    "SetUrlMapTargetHttpProxyRequest",
    "SetUrlMapTargetHttpsProxyRequest",
    "SetUsageExportBucketProjectRequest",
    "SimulateMaintenanceEventInstanceRequest",
    "StartInstanceRequest",
    "StartWithEncryptionKeyInstanceRequest",
    "StopInstanceRequest",
    "SubnetworksExpandIpCidrRangeRequest",
    "SubnetworksSetPrivateIpGoogleAccessRequest",
    "SuspendInstanceRequest",
    "SwitchToCustomModeNetworkRequest",
    "TargetHttpsProxiesSetCertificateMapRequest",
    "TargetHttpsProxiesSetQuicOverrideRequest",
    "TargetHttpsProxiesSetSslCertificatesRequest",
    "TargetPoolsAddHealthCheckRequest",
    "TargetPoolsAddInstanceRequest",
    "TargetPoolsRemoveHealthCheckRequest",
    "TargetPoolsRemoveInstanceRequest",
    "TargetSslProxiesSetBackendServiceRequest",
    "TargetSslProxiesSetCertificateMapRequest",
    "TargetSslProxiesSetProxyHeaderRequest",
    "TargetSslProxiesSetSslCertificatesRequest",
    "TargetTcpProxiesSetBackendServiceRequest",
    "TargetTcpProxiesSetProxyHeaderRequest",
    "TestIamPermissionsDiskRequest",
    "TestIamPermissionsExternalVpnGatewayRequest",
    "TestIamPermissionsFirewallPolicyRequest",
    "TestIamPermissionsImageRequest",
    "TestIamPermissionsInstanceRequest",
    "TestIamPermissionsInstanceTemplateRequest",
    "TestIamPermissionsLicenseCodeRequest",
    "TestIamPermissionsLicenseRequest",
    "TestIamPermissionsMachineImageRequest",
    "TestIamPermissionsNetworkEndpointGroupRequest",
    "TestIamPermissionsNetworkFirewallPolicyRequest",
    "TestIamPermissionsNodeGroupRequest",
    "TestIamPermissionsNodeTemplateRequest",
    "TestIamPermissionsPacketMirroringRequest",
    "TestIamPermissionsRegionDiskRequest",
    "TestIamPermissionsRegionNetworkFirewallPolicyRequest",
    "TestIamPermissionsReservationRequest",
    "TestIamPermissionsResourcePolicyRequest",
    "TestIamPermissionsServiceAttachmentRequest",
    "TestIamPermissionsSnapshotRequest",
    "TestIamPermissionsSubnetworkRequest",
    "TestIamPermissionsVpnGatewayRequest",
    "TestPermissionsRequest",
    "UpdateAccessConfigInstanceRequest",
    "UpdateAutoscalerRequest",
    "UpdateBackendBucketRequest",
    "UpdateBackendServiceRequest",
    "UpdateDisplayDeviceInstanceRequest",
    "UpdateFirewallRequest",
    "UpdateHealthCheckRequest",
    "UpdateInstanceRequest",
    "UpdateNetworkInterfaceInstanceRequest",
    "UpdatePeeringNetworkRequest",
    "UpdatePerInstanceConfigsInstanceGroupManagerRequest",
    "UpdatePerInstanceConfigsRegionInstanceGroupManagerRequest",
    "UpdateRegionAutoscalerRequest",
    "UpdateRegionBackendServiceRequest",
    "UpdateRegionCommitmentRequest",
    "UpdateRegionHealthCheckRequest",
    "UpdateRegionUrlMapRequest",
    "UpdateReservationRequest",
    "UpdateRouterRequest",
    "UpdateShieldedInstanceConfigInstanceRequest",
    "UpdateUrlMapRequest",
    "UrlMapsValidateRequest",
    "ValidateRegionUrlMapRequest",
    "ValidateUrlMapRequest",
    "WaitGlobalOperationRequest",
    "WaitRegionOperationRequest",
    "WaitZoneOperationRequest",
    "ZoneSetLabelsRequest",
    "ZoneSetPolicyRequest",
)


class AbandonInstancesInstanceGroupManagerRequest(proto.Message):
    r"""Messages
    A request message for InstanceGroupManagers.AbandonInstances.
    See the method description for details.

    .. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields

    Attributes:
        instance_group_manager (str):
            The name of the managed instance group.
        instance_group_managers_abandon_instances_request_resource (google.cloud.compute_v1.types.InstanceGroupManagersAbandonInstancesRequest):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone where the managed
            instance group is located.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_group_manager = proto.Field(
        proto.STRING,
        number=249363395,
    )
    instance_group_managers_abandon_instances_request_resource = proto.Field(
        proto.MESSAGE,
        number=320929016,
        message="InstanceGroupManagersAbandonInstancesRequest",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class AbandonInstancesRegionInstanceGroupManagerRequest(proto.Message):
    r"""A request message for
    RegionInstanceGroupManagers.AbandonInstances. See the method
    description for details.

    Attributes:
        instance_group_manager (str):
            Name of the managed instance group.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        region_instance_group_managers_abandon_instances_request_resource (google.cloud.compute_v1.types.RegionInstanceGroupManagersAbandonInstancesRequest):
            The body resource for this request
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_group_manager = proto.Field(
        proto.STRING,
        number=249363395,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    region_instance_group_managers_abandon_instances_request_resource = proto.Field(
        proto.MESSAGE,
        number=488499491,
        message="RegionInstanceGroupManagersAbandonInstancesRequest",
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class AddAccessConfigInstanceRequest(proto.Message):
    r"""A request message for Instances.AddAccessConfig. See the
    method description for details.

    Attributes:
        access_config_resource (google.cloud.compute_v1.types.AccessConfig):
            The body resource for this request
        instance (str):
            The instance name for this request.
        network_interface (str):
            The name of the network interface to add to
            this instance.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    access_config_resource = proto.Field(
        proto.MESSAGE,
        number=387825552,
        message="AccessConfig",
    )
    instance = proto.Field(
        proto.STRING,
        number=18257045,
    )
    network_interface = proto.Field(
        proto.STRING,
        number=365387880,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class AddAssociationFirewallPolicyRequest(proto.Message):
    r"""A request message for FirewallPolicies.AddAssociation. See
    the method description for details.

    Attributes:
        firewall_policy (str):
            Name of the firewall policy to update.
        firewall_policy_association_resource (google.cloud.compute_v1.types.FirewallPolicyAssociation):
            The body resource for this request
        replace_existing_association (bool):
            Indicates whether or not to replace it if an
            association of the attachment already exists.
            This is false by default, in which case an error
            will be returned if an association already
            exists.

            This field is a member of `oneof`_ ``_replace_existing_association``.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    firewall_policy = proto.Field(
        proto.STRING,
        number=498173265,
    )
    firewall_policy_association_resource = proto.Field(
        proto.MESSAGE,
        number=259546170,
        message="FirewallPolicyAssociation",
    )
    replace_existing_association = proto.Field(
        proto.BOOL,
        number=209541240,
        optional=True,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class AddAssociationNetworkFirewallPolicyRequest(proto.Message):
    r"""A request message for NetworkFirewallPolicies.AddAssociation.
    See the method description for details.

    Attributes:
        firewall_policy (str):
            Name of the firewall policy to update.
        firewall_policy_association_resource (google.cloud.compute_v1.types.FirewallPolicyAssociation):
            The body resource for this request
        project (str):
            Project ID for this request.
        replace_existing_association (bool):
            Indicates whether or not to replace it if an
            association of the attachment already exists.
            This is false by default, in which case an error
            will be returned if an association already
            exists.

            This field is a member of `oneof`_ ``_replace_existing_association``.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    firewall_policy = proto.Field(
        proto.STRING,
        number=498173265,
    )
    firewall_policy_association_resource = proto.Field(
        proto.MESSAGE,
        number=259546170,
        message="FirewallPolicyAssociation",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    replace_existing_association = proto.Field(
        proto.BOOL,
        number=209541240,
        optional=True,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class AddAssociationRegionNetworkFirewallPolicyRequest(proto.Message):
    r"""A request message for
    RegionNetworkFirewallPolicies.AddAssociation. See the method
    description for details.

    Attributes:
        firewall_policy (str):
            Name of the firewall policy to update.
        firewall_policy_association_resource (google.cloud.compute_v1.types.FirewallPolicyAssociation):
            The body resource for this request
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        replace_existing_association (bool):
            Indicates whether or not to replace it if an
            association already exists. This is false by
            default, in which case an error will be returned
            if an association already exists.

            This field is a member of `oneof`_ ``_replace_existing_association``.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    firewall_policy = proto.Field(
        proto.STRING,
        number=498173265,
    )
    firewall_policy_association_resource = proto.Field(
        proto.MESSAGE,
        number=259546170,
        message="FirewallPolicyAssociation",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    replace_existing_association = proto.Field(
        proto.BOOL,
        number=209541240,
        optional=True,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class AddHealthCheckTargetPoolRequest(proto.Message):
    r"""A request message for TargetPools.AddHealthCheck. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_pool (str):
            Name of the target pool to add a health check
            to.
        target_pools_add_health_check_request_resource (google.cloud.compute_v1.types.TargetPoolsAddHealthCheckRequest):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_pool = proto.Field(
        proto.STRING,
        number=62796298,
    )
    target_pools_add_health_check_request_resource = proto.Field(
        proto.MESSAGE,
        number=269573412,
        message="TargetPoolsAddHealthCheckRequest",
    )


class AddInstanceTargetPoolRequest(proto.Message):
    r"""A request message for TargetPools.AddInstance. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_pool (str):
            Name of the TargetPool resource to add
            instances to.
        target_pools_add_instance_request_resource (google.cloud.compute_v1.types.TargetPoolsAddInstanceRequest):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_pool = proto.Field(
        proto.STRING,
        number=62796298,
    )
    target_pools_add_instance_request_resource = proto.Field(
        proto.MESSAGE,
        number=428796404,
        message="TargetPoolsAddInstanceRequest",
    )


class AddInstancesInstanceGroupRequest(proto.Message):
    r"""A request message for InstanceGroups.AddInstances. See the
    method description for details.

    Attributes:
        instance_group (str):
            The name of the instance group where you are
            adding instances.
        instance_groups_add_instances_request_resource (google.cloud.compute_v1.types.InstanceGroupsAddInstancesRequest):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone where the instance group
            is located.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_group = proto.Field(
        proto.STRING,
        number=81095253,
    )
    instance_groups_add_instances_request_resource = proto.Field(
        proto.MESSAGE,
        number=453713246,
        message="InstanceGroupsAddInstancesRequest",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class AddNodesNodeGroupRequest(proto.Message):
    r"""A request message for NodeGroups.AddNodes. See the method
    description for details.

    Attributes:
        node_group (str):
            Name of the NodeGroup resource.
        node_groups_add_nodes_request_resource (google.cloud.compute_v1.types.NodeGroupsAddNodesRequest):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    node_group = proto.Field(
        proto.STRING,
        number=469958146,
    )
    node_groups_add_nodes_request_resource = proto.Field(
        proto.MESSAGE,
        number=131263288,
        message="NodeGroupsAddNodesRequest",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class AddPeeringNetworkRequest(proto.Message):
    r"""A request message for Networks.AddPeering. See the method
    description for details.

    Attributes:
        network (str):
            Name of the network resource to add peering
            to.
        networks_add_peering_request_resource (google.cloud.compute_v1.types.NetworksAddPeeringRequest):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    network = proto.Field(
        proto.STRING,
        number=232872494,
    )
    networks_add_peering_request_resource = proto.Field(
        proto.MESSAGE,
        number=388810421,
        message="NetworksAddPeeringRequest",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class AddResourcePoliciesDiskRequest(proto.Message):
    r"""A request message for Disks.AddResourcePolicies. See the
    method description for details.

    Attributes:
        disk (str):
            The disk name for this request.
        disks_add_resource_policies_request_resource (google.cloud.compute_v1.types.DisksAddResourcePoliciesRequest):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    disk = proto.Field(
        proto.STRING,
        number=3083677,
    )
    disks_add_resource_policies_request_resource = proto.Field(
        proto.MESSAGE,
        number=496483363,
        message="DisksAddResourcePoliciesRequest",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class AddResourcePoliciesInstanceRequest(proto.Message):
    r"""A request message for Instances.AddResourcePolicies. See the
    method description for details.

    Attributes:
        instance (str):
            The instance name for this request.
        instances_add_resource_policies_request_resource (google.cloud.compute_v1.types.InstancesAddResourcePoliciesRequest):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance = proto.Field(
        proto.STRING,
        number=18257045,
    )
    instances_add_resource_policies_request_resource = proto.Field(
        proto.MESSAGE,
        number=489351963,
        message="InstancesAddResourcePoliciesRequest",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class AddResourcePoliciesRegionDiskRequest(proto.Message):
    r"""A request message for RegionDisks.AddResourcePolicies. See
    the method description for details.

    Attributes:
        disk (str):
            The disk name for this request.
        project (str):
            Project ID for this request.
        region (str):
            The name of the region for this request.
        region_disks_add_resource_policies_request_resource (google.cloud.compute_v1.types.RegionDisksAddResourcePoliciesRequest):
            The body resource for this request
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    disk = proto.Field(
        proto.STRING,
        number=3083677,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    region_disks_add_resource_policies_request_resource = proto.Field(
        proto.MESSAGE,
        number=284196750,
        message="RegionDisksAddResourcePoliciesRequest",
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class AddRuleFirewallPolicyRequest(proto.Message):
    r"""A request message for FirewallPolicies.AddRule. See the
    method description for details.

    Attributes:
        firewall_policy (str):
            Name of the firewall policy to update.
        firewall_policy_rule_resource (google.cloud.compute_v1.types.FirewallPolicyRule):
            The body resource for this request
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    firewall_policy = proto.Field(
        proto.STRING,
        number=498173265,
    )
    firewall_policy_rule_resource = proto.Field(
        proto.MESSAGE,
        number=250523523,
        message="FirewallPolicyRule",
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class AddRuleNetworkFirewallPolicyRequest(proto.Message):
    r"""A request message for NetworkFirewallPolicies.AddRule. See
    the method description for details.

    Attributes:
        firewall_policy (str):
            Name of the firewall policy to update.
        firewall_policy_rule_resource (google.cloud.compute_v1.types.FirewallPolicyRule):
            The body resource for this request
        max_priority (int):
            When rule.priority is not specified, auto
            choose a unused priority between minPriority and
            maxPriority>. This field is exclusive with
            rule.priority.

            This field is a member of `oneof`_ ``_max_priority``.
        min_priority (int):
            When rule.priority is not specified, auto
            choose a unused priority between minPriority and
            maxPriority>. This field is exclusive with
            rule.priority.

            This field is a member of `oneof`_ ``_min_priority``.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    firewall_policy = proto.Field(
        proto.STRING,
        number=498173265,
    )
    firewall_policy_rule_resource = proto.Field(
        proto.MESSAGE,
        number=250523523,
        message="FirewallPolicyRule",
    )
    max_priority = proto.Field(
        proto.INT32,
        number=329635359,
        optional=True,
    )
    min_priority = proto.Field(
        proto.INT32,
        number=267190513,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class AddRuleRegionNetworkFirewallPolicyRequest(proto.Message):
    r"""A request message for RegionNetworkFirewallPolicies.AddRule.
    See the method description for details.

    Attributes:
        firewall_policy (str):
            Name of the firewall policy to update.
        firewall_policy_rule_resource (google.cloud.compute_v1.types.FirewallPolicyRule):
            The body resource for this request
        max_priority (int):
            When rule.priority is not specified, auto
            choose a unused priority between minPriority and
            maxPriority>. This field is exclusive with
            rule.priority.

            This field is a member of `oneof`_ ``_max_priority``.
        min_priority (int):
            When rule.priority is not specified, auto
            choose a unused priority between minPriority and
            maxPriority>. This field is exclusive with
            rule.priority.

            This field is a member of `oneof`_ ``_min_priority``.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    firewall_policy = proto.Field(
        proto.STRING,
        number=498173265,
    )
    firewall_policy_rule_resource = proto.Field(
        proto.MESSAGE,
        number=250523523,
        message="FirewallPolicyRule",
    )
    max_priority = proto.Field(
        proto.INT32,
        number=329635359,
        optional=True,
    )
    min_priority = proto.Field(
        proto.INT32,
        number=267190513,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class AddRuleSecurityPolicyRequest(proto.Message):
    r"""A request message for SecurityPolicies.AddRule. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        security_policy (str):
            Name of the security policy to update.
        security_policy_rule_resource (google.cloud.compute_v1.types.SecurityPolicyRule):
            The body resource for this request
        validate_only (bool):
            If true, the request will not be committed.

            This field is a member of `oneof`_ ``_validate_only``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    security_policy = proto.Field(
        proto.STRING,
        number=171082513,
    )
    security_policy_rule_resource = proto.Field(
        proto.MESSAGE,
        number=402693443,
        message="SecurityPolicyRule",
    )
    validate_only = proto.Field(
        proto.BOOL,
        number=242744629,
        optional=True,
    )


class AddSignedUrlKeyBackendBucketRequest(proto.Message):
    r"""A request message for BackendBuckets.AddSignedUrlKey. See the
    method description for details.

    Attributes:
        backend_bucket (str):
            Name of the BackendBucket resource to which
            the Signed URL Key should be added. The name
            should conform to RFC1035.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        signed_url_key_resource (google.cloud.compute_v1.types.SignedUrlKey):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    backend_bucket = proto.Field(
        proto.STRING,
        number=91714037,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    signed_url_key_resource = proto.Field(
        proto.MESSAGE,
        number=457625985,
        message="SignedUrlKey",
    )


class AddSignedUrlKeyBackendServiceRequest(proto.Message):
    r"""A request message for BackendServices.AddSignedUrlKey. See
    the method description for details.

    Attributes:
        backend_service (str):
            Name of the BackendService resource to which
            the Signed URL Key should be added. The name
            should conform to RFC1035.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        signed_url_key_resource (google.cloud.compute_v1.types.SignedUrlKey):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    backend_service = proto.Field(
        proto.STRING,
        number=306946058,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    signed_url_key_resource = proto.Field(
        proto.MESSAGE,
        number=457625985,
        message="SignedUrlKey",
    )


class AggregatedListAcceleratorTypesRequest(proto.Message):
    r"""A request message for AcceleratorTypes.AggregatedList. See
    the method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        include_all_scopes (bool):
            Indicates whether every visible scope for
            each scope type (zone, region, global) should be
            included in the response. For new resource types
            added after this field, the flag has no effect
            as new resource types will always include every
            visible scope for each scope type in response.
            For resource types which predate this field, if
            this flag is omitted or false, only scopes of
            the scope types where the resource type is
            expected to be found will be included.

            This field is a member of `oneof`_ ``_include_all_scopes``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    include_all_scopes = proto.Field(
        proto.BOOL,
        number=391327988,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class AggregatedListAddressesRequest(proto.Message):
    r"""A request message for Addresses.AggregatedList. See the
    method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        include_all_scopes (bool):
            Indicates whether every visible scope for
            each scope type (zone, region, global) should be
            included in the response. For new resource types
            added after this field, the flag has no effect
            as new resource types will always include every
            visible scope for each scope type in response.
            For resource types which predate this field, if
            this flag is omitted or false, only scopes of
            the scope types where the resource type is
            expected to be found will be included.

            This field is a member of `oneof`_ ``_include_all_scopes``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    include_all_scopes = proto.Field(
        proto.BOOL,
        number=391327988,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class AggregatedListAutoscalersRequest(proto.Message):
    r"""A request message for Autoscalers.AggregatedList. See the
    method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        include_all_scopes (bool):
            Indicates whether every visible scope for
            each scope type (zone, region, global) should be
            included in the response. For new resource types
            added after this field, the flag has no effect
            as new resource types will always include every
            visible scope for each scope type in response.
            For resource types which predate this field, if
            this flag is omitted or false, only scopes of
            the scope types where the resource type is
            expected to be found will be included.

            This field is a member of `oneof`_ ``_include_all_scopes``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    include_all_scopes = proto.Field(
        proto.BOOL,
        number=391327988,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class AggregatedListBackendServicesRequest(proto.Message):
    r"""A request message for BackendServices.AggregatedList. See the
    method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        include_all_scopes (bool):
            Indicates whether every visible scope for
            each scope type (zone, region, global) should be
            included in the response. For new resource types
            added after this field, the flag has no effect
            as new resource types will always include every
            visible scope for each scope type in response.
            For resource types which predate this field, if
            this flag is omitted or false, only scopes of
            the scope types where the resource type is
            expected to be found will be included.

            This field is a member of `oneof`_ ``_include_all_scopes``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Name of the project scoping this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    include_all_scopes = proto.Field(
        proto.BOOL,
        number=391327988,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class AggregatedListDiskTypesRequest(proto.Message):
    r"""A request message for DiskTypes.AggregatedList. See the
    method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        include_all_scopes (bool):
            Indicates whether every visible scope for
            each scope type (zone, region, global) should be
            included in the response. For new resource types
            added after this field, the flag has no effect
            as new resource types will always include every
            visible scope for each scope type in response.
            For resource types which predate this field, if
            this flag is omitted or false, only scopes of
            the scope types where the resource type is
            expected to be found will be included.

            This field is a member of `oneof`_ ``_include_all_scopes``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    include_all_scopes = proto.Field(
        proto.BOOL,
        number=391327988,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class AggregatedListDisksRequest(proto.Message):
    r"""A request message for Disks.AggregatedList. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        include_all_scopes (bool):
            Indicates whether every visible scope for
            each scope type (zone, region, global) should be
            included in the response. For new resource types
            added after this field, the flag has no effect
            as new resource types will always include every
            visible scope for each scope type in response.
            For resource types which predate this field, if
            this flag is omitted or false, only scopes of
            the scope types where the resource type is
            expected to be found will be included.

            This field is a member of `oneof`_ ``_include_all_scopes``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    include_all_scopes = proto.Field(
        proto.BOOL,
        number=391327988,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class AggregatedListForwardingRulesRequest(proto.Message):
    r"""A request message for ForwardingRules.AggregatedList. See the
    method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        include_all_scopes (bool):
            Indicates whether every visible scope for
            each scope type (zone, region, global) should be
            included in the response. For new resource types
            added after this field, the flag has no effect
            as new resource types will always include every
            visible scope for each scope type in response.
            For resource types which predate this field, if
            this flag is omitted or false, only scopes of
            the scope types where the resource type is
            expected to be found will be included.

            This field is a member of `oneof`_ ``_include_all_scopes``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    include_all_scopes = proto.Field(
        proto.BOOL,
        number=391327988,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class AggregatedListGlobalOperationsRequest(proto.Message):
    r"""A request message for GlobalOperations.AggregatedList. See
    the method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        include_all_scopes (bool):
            Indicates whether every visible scope for
            each scope type (zone, region, global) should be
            included in the response. For new resource types
            added after this field, the flag has no effect
            as new resource types will always include every
            visible scope for each scope type in response.
            For resource types which predate this field, if
            this flag is omitted or false, only scopes of
            the scope types where the resource type is
            expected to be found will be included.

            This field is a member of `oneof`_ ``_include_all_scopes``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    include_all_scopes = proto.Field(
        proto.BOOL,
        number=391327988,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class AggregatedListHealthChecksRequest(proto.Message):
    r"""A request message for HealthChecks.AggregatedList. See the
    method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        include_all_scopes (bool):
            Indicates whether every visible scope for
            each scope type (zone, region, global) should be
            included in the response. For new resource types
            added after this field, the flag has no effect
            as new resource types will always include every
            visible scope for each scope type in response.
            For resource types which predate this field, if
            this flag is omitted or false, only scopes of
            the scope types where the resource type is
            expected to be found will be included.

            This field is a member of `oneof`_ ``_include_all_scopes``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Name of the project scoping this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    include_all_scopes = proto.Field(
        proto.BOOL,
        number=391327988,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class AggregatedListInstanceGroupManagersRequest(proto.Message):
    r"""A request message for InstanceGroupManagers.AggregatedList.
    See the method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        include_all_scopes (bool):
            Indicates whether every visible scope for
            each scope type (zone, region, global) should be
            included in the response. For new resource types
            added after this field, the flag has no effect
            as new resource types will always include every
            visible scope for each scope type in response.
            For resource types which predate this field, if
            this flag is omitted or false, only scopes of
            the scope types where the resource type is
            expected to be found will be included.

            This field is a member of `oneof`_ ``_include_all_scopes``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    include_all_scopes = proto.Field(
        proto.BOOL,
        number=391327988,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class AggregatedListInstanceGroupsRequest(proto.Message):
    r"""A request message for InstanceGroups.AggregatedList. See the
    method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        include_all_scopes (bool):
            Indicates whether every visible scope for
            each scope type (zone, region, global) should be
            included in the response. For new resource types
            added after this field, the flag has no effect
            as new resource types will always include every
            visible scope for each scope type in response.
            For resource types which predate this field, if
            this flag is omitted or false, only scopes of
            the scope types where the resource type is
            expected to be found will be included.

            This field is a member of `oneof`_ ``_include_all_scopes``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    include_all_scopes = proto.Field(
        proto.BOOL,
        number=391327988,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class AggregatedListInstancesRequest(proto.Message):
    r"""A request message for Instances.AggregatedList. See the
    method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        include_all_scopes (bool):
            Indicates whether every visible scope for
            each scope type (zone, region, global) should be
            included in the response. For new resource types
            added after this field, the flag has no effect
            as new resource types will always include every
            visible scope for each scope type in response.
            For resource types which predate this field, if
            this flag is omitted or false, only scopes of
            the scope types where the resource type is
            expected to be found will be included.

            This field is a member of `oneof`_ ``_include_all_scopes``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    include_all_scopes = proto.Field(
        proto.BOOL,
        number=391327988,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class AggregatedListInterconnectAttachmentsRequest(proto.Message):
    r"""A request message for InterconnectAttachments.AggregatedList.
    See the method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        include_all_scopes (bool):
            Indicates whether every visible scope for
            each scope type (zone, region, global) should be
            included in the response. For new resource types
            added after this field, the flag has no effect
            as new resource types will always include every
            visible scope for each scope type in response.
            For resource types which predate this field, if
            this flag is omitted or false, only scopes of
            the scope types where the resource type is
            expected to be found will be included.

            This field is a member of `oneof`_ ``_include_all_scopes``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    include_all_scopes = proto.Field(
        proto.BOOL,
        number=391327988,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class AggregatedListMachineTypesRequest(proto.Message):
    r"""A request message for MachineTypes.AggregatedList. See the
    method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        include_all_scopes (bool):
            Indicates whether every visible scope for
            each scope type (zone, region, global) should be
            included in the response. For new resource types
            added after this field, the flag has no effect
            as new resource types will always include every
            visible scope for each scope type in response.
            For resource types which predate this field, if
            this flag is omitted or false, only scopes of
            the scope types where the resource type is
            expected to be found will be included.

            This field is a member of `oneof`_ ``_include_all_scopes``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    include_all_scopes = proto.Field(
        proto.BOOL,
        number=391327988,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class AggregatedListNetworkEdgeSecurityServicesRequest(proto.Message):
    r"""A request message for
    NetworkEdgeSecurityServices.AggregatedList. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        include_all_scopes (bool):
            Indicates whether every visible scope for
            each scope type (zone, region, global) should be
            included in the response. For new resource types
            added after this field, the flag has no effect
            as new resource types will always include every
            visible scope for each scope type in response.
            For resource types which predate this field, if
            this flag is omitted or false, only scopes of
            the scope types where the resource type is
            expected to be found will be included.

            This field is a member of `oneof`_ ``_include_all_scopes``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Name of the project scoping this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    include_all_scopes = proto.Field(
        proto.BOOL,
        number=391327988,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class AggregatedListNetworkEndpointGroupsRequest(proto.Message):
    r"""A request message for NetworkEndpointGroups.AggregatedList.
    See the method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        include_all_scopes (bool):
            Indicates whether every visible scope for
            each scope type (zone, region, global) should be
            included in the response. For new resource types
            added after this field, the flag has no effect
            as new resource types will always include every
            visible scope for each scope type in response.
            For resource types which predate this field, if
            this flag is omitted or false, only scopes of
            the scope types where the resource type is
            expected to be found will be included.

            This field is a member of `oneof`_ ``_include_all_scopes``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    include_all_scopes = proto.Field(
        proto.BOOL,
        number=391327988,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class AggregatedListNodeGroupsRequest(proto.Message):
    r"""A request message for NodeGroups.AggregatedList. See the
    method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        include_all_scopes (bool):
            Indicates whether every visible scope for
            each scope type (zone, region, global) should be
            included in the response. For new resource types
            added after this field, the flag has no effect
            as new resource types will always include every
            visible scope for each scope type in response.
            For resource types which predate this field, if
            this flag is omitted or false, only scopes of
            the scope types where the resource type is
            expected to be found will be included.

            This field is a member of `oneof`_ ``_include_all_scopes``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    include_all_scopes = proto.Field(
        proto.BOOL,
        number=391327988,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class AggregatedListNodeTemplatesRequest(proto.Message):
    r"""A request message for NodeTemplates.AggregatedList. See the
    method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        include_all_scopes (bool):
            Indicates whether every visible scope for
            each scope type (zone, region, global) should be
            included in the response. For new resource types
            added after this field, the flag has no effect
            as new resource types will always include every
            visible scope for each scope type in response.
            For resource types which predate this field, if
            this flag is omitted or false, only scopes of
            the scope types where the resource type is
            expected to be found will be included.

            This field is a member of `oneof`_ ``_include_all_scopes``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    include_all_scopes = proto.Field(
        proto.BOOL,
        number=391327988,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class AggregatedListNodeTypesRequest(proto.Message):
    r"""A request message for NodeTypes.AggregatedList. See the
    method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        include_all_scopes (bool):
            Indicates whether every visible scope for
            each scope type (zone, region, global) should be
            included in the response. For new resource types
            added after this field, the flag has no effect
            as new resource types will always include every
            visible scope for each scope type in response.
            For resource types which predate this field, if
            this flag is omitted or false, only scopes of
            the scope types where the resource type is
            expected to be found will be included.

            This field is a member of `oneof`_ ``_include_all_scopes``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    include_all_scopes = proto.Field(
        proto.BOOL,
        number=391327988,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class AggregatedListPacketMirroringsRequest(proto.Message):
    r"""A request message for PacketMirrorings.AggregatedList. See
    the method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        include_all_scopes (bool):
            Indicates whether every visible scope for
            each scope type (zone, region, global) should be
            included in the response. For new resource types
            added after this field, the flag has no effect
            as new resource types will always include every
            visible scope for each scope type in response.
            For resource types which predate this field, if
            this flag is omitted or false, only scopes of
            the scope types where the resource type is
            expected to be found will be included.

            This field is a member of `oneof`_ ``_include_all_scopes``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    include_all_scopes = proto.Field(
        proto.BOOL,
        number=391327988,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class AggregatedListPublicDelegatedPrefixesRequest(proto.Message):
    r"""A request message for PublicDelegatedPrefixes.AggregatedList.
    See the method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        include_all_scopes (bool):
            Indicates whether every visible scope for
            each scope type (zone, region, global) should be
            included in the response. For new resource types
            added after this field, the flag has no effect
            as new resource types will always include every
            visible scope for each scope type in response.
            For resource types which predate this field, if
            this flag is omitted or false, only scopes of
            the scope types where the resource type is
            expected to be found will be included.

            This field is a member of `oneof`_ ``_include_all_scopes``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Name of the project scoping this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    include_all_scopes = proto.Field(
        proto.BOOL,
        number=391327988,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class AggregatedListRegionCommitmentsRequest(proto.Message):
    r"""A request message for RegionCommitments.AggregatedList. See
    the method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        include_all_scopes (bool):
            Indicates whether every visible scope for
            each scope type (zone, region, global) should be
            included in the response. For new resource types
            added after this field, the flag has no effect
            as new resource types will always include every
            visible scope for each scope type in response.
            For resource types which predate this field, if
            this flag is omitted or false, only scopes of
            the scope types where the resource type is
            expected to be found will be included.

            This field is a member of `oneof`_ ``_include_all_scopes``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    include_all_scopes = proto.Field(
        proto.BOOL,
        number=391327988,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class AggregatedListReservationsRequest(proto.Message):
    r"""A request message for Reservations.AggregatedList. See the
    method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        include_all_scopes (bool):
            Indicates whether every visible scope for
            each scope type (zone, region, global) should be
            included in the response. For new resource types
            added after this field, the flag has no effect
            as new resource types will always include every
            visible scope for each scope type in response.
            For resource types which predate this field, if
            this flag is omitted or false, only scopes of
            the scope types where the resource type is
            expected to be found will be included.

            This field is a member of `oneof`_ ``_include_all_scopes``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    include_all_scopes = proto.Field(
        proto.BOOL,
        number=391327988,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class AggregatedListResourcePoliciesRequest(proto.Message):
    r"""A request message for ResourcePolicies.AggregatedList. See
    the method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        include_all_scopes (bool):
            Indicates whether every visible scope for
            each scope type (zone, region, global) should be
            included in the response. For new resource types
            added after this field, the flag has no effect
            as new resource types will always include every
            visible scope for each scope type in response.
            For resource types which predate this field, if
            this flag is omitted or false, only scopes of
            the scope types where the resource type is
            expected to be found will be included.

            This field is a member of `oneof`_ ``_include_all_scopes``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    include_all_scopes = proto.Field(
        proto.BOOL,
        number=391327988,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class AggregatedListRoutersRequest(proto.Message):
    r"""A request message for Routers.AggregatedList. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        include_all_scopes (bool):
            Indicates whether every visible scope for
            each scope type (zone, region, global) should be
            included in the response. For new resource types
            added after this field, the flag has no effect
            as new resource types will always include every
            visible scope for each scope type in response.
            For resource types which predate this field, if
            this flag is omitted or false, only scopes of
            the scope types where the resource type is
            expected to be found will be included.

            This field is a member of `oneof`_ ``_include_all_scopes``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    include_all_scopes = proto.Field(
        proto.BOOL,
        number=391327988,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class AggregatedListSecurityPoliciesRequest(proto.Message):
    r"""A request message for SecurityPolicies.AggregatedList. See
    the method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        include_all_scopes (bool):
            Indicates whether every visible scope for
            each scope type (zone, region, global) should be
            included in the response. For new resource types
            added after this field, the flag has no effect
            as new resource types will always include every
            visible scope for each scope type in response.
            For resource types which predate this field, if
            this flag is omitted or false, only scopes of
            the scope types where the resource type is
            expected to be found will be included.

            This field is a member of `oneof`_ ``_include_all_scopes``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Name of the project scoping this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    include_all_scopes = proto.Field(
        proto.BOOL,
        number=391327988,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class AggregatedListServiceAttachmentsRequest(proto.Message):
    r"""A request message for ServiceAttachments.AggregatedList. See
    the method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        include_all_scopes (bool):
            Indicates whether every visible scope for
            each scope type (zone, region, global) should be
            included in the response. For new resource types
            added after this field, the flag has no effect
            as new resource types will always include every
            visible scope for each scope type in response.
            For resource types which predate this field, if
            this flag is omitted or false, only scopes of
            the scope types where the resource type is
            expected to be found will be included.

            This field is a member of `oneof`_ ``_include_all_scopes``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Name of the project scoping this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    include_all_scopes = proto.Field(
        proto.BOOL,
        number=391327988,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class AggregatedListSslCertificatesRequest(proto.Message):
    r"""A request message for SslCertificates.AggregatedList. See the
    method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        include_all_scopes (bool):
            Indicates whether every visible scope for
            each scope type (zone, region, global) should be
            included in the response. For new resource types
            added after this field, the flag has no effect
            as new resource types will always include every
            visible scope for each scope type in response.
            For resource types which predate this field, if
            this flag is omitted or false, only scopes of
            the scope types where the resource type is
            expected to be found will be included.

            This field is a member of `oneof`_ ``_include_all_scopes``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Name of the project scoping this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    include_all_scopes = proto.Field(
        proto.BOOL,
        number=391327988,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class AggregatedListSubnetworksRequest(proto.Message):
    r"""A request message for Subnetworks.AggregatedList. See the
    method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        include_all_scopes (bool):
            Indicates whether every visible scope for
            each scope type (zone, region, global) should be
            included in the response. For new resource types
            added after this field, the flag has no effect
            as new resource types will always include every
            visible scope for each scope type in response.
            For resource types which predate this field, if
            this flag is omitted or false, only scopes of
            the scope types where the resource type is
            expected to be found will be included.

            This field is a member of `oneof`_ ``_include_all_scopes``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    include_all_scopes = proto.Field(
        proto.BOOL,
        number=391327988,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class AggregatedListTargetHttpProxiesRequest(proto.Message):
    r"""A request message for TargetHttpProxies.AggregatedList. See
    the method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        include_all_scopes (bool):
            Indicates whether every visible scope for
            each scope type (zone, region, global) should be
            included in the response. For new resource types
            added after this field, the flag has no effect
            as new resource types will always include every
            visible scope for each scope type in response.
            For resource types which predate this field, if
            this flag is omitted or false, only scopes of
            the scope types where the resource type is
            expected to be found will be included.

            This field is a member of `oneof`_ ``_include_all_scopes``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Name of the project scoping this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    include_all_scopes = proto.Field(
        proto.BOOL,
        number=391327988,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class AggregatedListTargetHttpsProxiesRequest(proto.Message):
    r"""A request message for TargetHttpsProxies.AggregatedList. See
    the method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        include_all_scopes (bool):
            Indicates whether every visible scope for
            each scope type (zone, region, global) should be
            included in the response. For new resource types
            added after this field, the flag has no effect
            as new resource types will always include every
            visible scope for each scope type in response.
            For resource types which predate this field, if
            this flag is omitted or false, only scopes of
            the scope types where the resource type is
            expected to be found will be included.

            This field is a member of `oneof`_ ``_include_all_scopes``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Name of the project scoping this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    include_all_scopes = proto.Field(
        proto.BOOL,
        number=391327988,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class AggregatedListTargetInstancesRequest(proto.Message):
    r"""A request message for TargetInstances.AggregatedList. See the
    method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        include_all_scopes (bool):
            Indicates whether every visible scope for
            each scope type (zone, region, global) should be
            included in the response. For new resource types
            added after this field, the flag has no effect
            as new resource types will always include every
            visible scope for each scope type in response.
            For resource types which predate this field, if
            this flag is omitted or false, only scopes of
            the scope types where the resource type is
            expected to be found will be included.

            This field is a member of `oneof`_ ``_include_all_scopes``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    include_all_scopes = proto.Field(
        proto.BOOL,
        number=391327988,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class AggregatedListTargetPoolsRequest(proto.Message):
    r"""A request message for TargetPools.AggregatedList. See the
    method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        include_all_scopes (bool):
            Indicates whether every visible scope for
            each scope type (zone, region, global) should be
            included in the response. For new resource types
            added after this field, the flag has no effect
            as new resource types will always include every
            visible scope for each scope type in response.
            For resource types which predate this field, if
            this flag is omitted or false, only scopes of
            the scope types where the resource type is
            expected to be found will be included.

            This field is a member of `oneof`_ ``_include_all_scopes``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    include_all_scopes = proto.Field(
        proto.BOOL,
        number=391327988,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class AggregatedListTargetVpnGatewaysRequest(proto.Message):
    r"""A request message for TargetVpnGateways.AggregatedList. See
    the method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        include_all_scopes (bool):
            Indicates whether every visible scope for
            each scope type (zone, region, global) should be
            included in the response. For new resource types
            added after this field, the flag has no effect
            as new resource types will always include every
            visible scope for each scope type in response.
            For resource types which predate this field, if
            this flag is omitted or false, only scopes of
            the scope types where the resource type is
            expected to be found will be included.

            This field is a member of `oneof`_ ``_include_all_scopes``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    include_all_scopes = proto.Field(
        proto.BOOL,
        number=391327988,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class AggregatedListUrlMapsRequest(proto.Message):
    r"""A request message for UrlMaps.AggregatedList. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        include_all_scopes (bool):
            Indicates whether every visible scope for
            each scope type (zone, region, global) should be
            included in the response. For new resource types
            added after this field, the flag has no effect
            as new resource types will always include every
            visible scope for each scope type in response.
            For resource types which predate this field, if
            this flag is omitted or false, only scopes of
            the scope types where the resource type is
            expected to be found will be included.

            This field is a member of `oneof`_ ``_include_all_scopes``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Name of the project scoping this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    include_all_scopes = proto.Field(
        proto.BOOL,
        number=391327988,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class AggregatedListVpnGatewaysRequest(proto.Message):
    r"""A request message for VpnGateways.AggregatedList. See the
    method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        include_all_scopes (bool):
            Indicates whether every visible scope for
            each scope type (zone, region, global) should be
            included in the response. For new resource types
            added after this field, the flag has no effect
            as new resource types will always include every
            visible scope for each scope type in response.
            For resource types which predate this field, if
            this flag is omitted or false, only scopes of
            the scope types where the resource type is
            expected to be found will be included.

            This field is a member of `oneof`_ ``_include_all_scopes``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    include_all_scopes = proto.Field(
        proto.BOOL,
        number=391327988,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class AggregatedListVpnTunnelsRequest(proto.Message):
    r"""A request message for VpnTunnels.AggregatedList. See the
    method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        include_all_scopes (bool):
            Indicates whether every visible scope for
            each scope type (zone, region, global) should be
            included in the response. For new resource types
            added after this field, the flag has no effect
            as new resource types will always include every
            visible scope for each scope type in response.
            For resource types which predate this field, if
            this flag is omitted or false, only scopes of
            the scope types where the resource type is
            expected to be found will be included.

            This field is a member of `oneof`_ ``_include_all_scopes``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    include_all_scopes = proto.Field(
        proto.BOOL,
        number=391327988,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ApplyUpdatesToInstancesInstanceGroupManagerRequest(proto.Message):
    r"""A request message for
    InstanceGroupManagers.ApplyUpdatesToInstances. See the method
    description for details.

    Attributes:
        instance_group_manager (str):
            The name of the managed instance group,
            should conform to RFC1035.
        instance_group_managers_apply_updates_request_resource (google.cloud.compute_v1.types.InstanceGroupManagersApplyUpdatesRequest):
            The body resource for this request
        project (str):
            Project ID for this request.
        zone (str):
            The name of the zone where the managed
            instance group is located. Should conform to
            RFC1035.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_group_manager = proto.Field(
        proto.STRING,
        number=249363395,
    )
    instance_group_managers_apply_updates_request_resource = proto.Field(
        proto.MESSAGE,
        number=259242835,
        message="InstanceGroupManagersApplyUpdatesRequest",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class ApplyUpdatesToInstancesRegionInstanceGroupManagerRequest(proto.Message):
    r"""A request message for
    RegionInstanceGroupManagers.ApplyUpdatesToInstances. See the
    method description for details.

    Attributes:
        instance_group_manager (str):
            The name of the managed instance group,
            should conform to RFC1035.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request,
            should conform to RFC1035.
        region_instance_group_managers_apply_updates_request_resource (google.cloud.compute_v1.types.RegionInstanceGroupManagersApplyUpdatesRequest):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_group_manager = proto.Field(
        proto.STRING,
        number=249363395,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    region_instance_group_managers_apply_updates_request_resource = proto.Field(
        proto.MESSAGE,
        number=76248318,
        message="RegionInstanceGroupManagersApplyUpdatesRequest",
    )


class AttachDiskInstanceRequest(proto.Message):
    r"""A request message for Instances.AttachDisk. See the method
    description for details.

    Attributes:
        attached_disk_resource (google.cloud.compute_v1.types.AttachedDisk):
            The body resource for this request
        force_attach (bool):
            Whether to force attach the regional disk
            even if it's currently attached to another
            instance. If you try to force attach a zonal
            disk to an instance, you will receive an error.

            This field is a member of `oneof`_ ``_force_attach``.
        instance (str):
            The instance name for this request.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    attached_disk_resource = proto.Field(
        proto.MESSAGE,
        number=90605845,
        message="AttachedDisk",
    )
    force_attach = proto.Field(
        proto.BOOL,
        number=142758425,
        optional=True,
    )
    instance = proto.Field(
        proto.STRING,
        number=18257045,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class AttachNetworkEndpointsGlobalNetworkEndpointGroupRequest(proto.Message):
    r"""A request message for
    GlobalNetworkEndpointGroups.AttachNetworkEndpoints. See the
    method description for details.

    Attributes:
        global_network_endpoint_groups_attach_endpoints_request_resource (google.cloud.compute_v1.types.GlobalNetworkEndpointGroupsAttachEndpointsRequest):
            The body resource for this request
        network_endpoint_group (str):
            The name of the network endpoint group where
            you are attaching network endpoints to. It
            should comply with RFC1035.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    global_network_endpoint_groups_attach_endpoints_request_resource = proto.Field(
        proto.MESSAGE,
        number=30691563,
        message="GlobalNetworkEndpointGroupsAttachEndpointsRequest",
    )
    network_endpoint_group = proto.Field(
        proto.STRING,
        number=433907078,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class AttachNetworkEndpointsNetworkEndpointGroupRequest(proto.Message):
    r"""A request message for
    NetworkEndpointGroups.AttachNetworkEndpoints. See the method
    description for details.

    Attributes:
        network_endpoint_group (str):
            The name of the network endpoint group where
            you are attaching network endpoints to. It
            should comply with RFC1035.
        network_endpoint_groups_attach_endpoints_request_resource (google.cloud.compute_v1.types.NetworkEndpointGroupsAttachEndpointsRequest):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone where the network
            endpoint group is located. It should comply with
            RFC1035.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    network_endpoint_group = proto.Field(
        proto.STRING,
        number=433907078,
    )
    network_endpoint_groups_attach_endpoints_request_resource = proto.Field(
        proto.MESSAGE,
        number=531079,
        message="NetworkEndpointGroupsAttachEndpointsRequest",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class BulkInsertInstanceRequest(proto.Message):
    r"""A request message for Instances.BulkInsert. See the method
    description for details.

    Attributes:
        bulk_insert_instance_resource_resource (google.cloud.compute_v1.types.BulkInsertInstanceResource):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    bulk_insert_instance_resource_resource = proto.Field(
        proto.MESSAGE,
        number=41427278,
        message="BulkInsertInstanceResource",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class BulkInsertRegionInstanceRequest(proto.Message):
    r"""A request message for RegionInstances.BulkInsert. See the
    method description for details.

    Attributes:
        bulk_insert_instance_resource_resource (google.cloud.compute_v1.types.BulkInsertInstanceResource):
            The body resource for this request
        project (str):
            Project ID for this request.
        region (str):
            The name of the region for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    bulk_insert_instance_resource_resource = proto.Field(
        proto.MESSAGE,
        number=41427278,
        message="BulkInsertInstanceResource",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class CloneRulesFirewallPolicyRequest(proto.Message):
    r"""A request message for FirewallPolicies.CloneRules. See the
    method description for details.

    Attributes:
        firewall_policy (str):
            Name of the firewall policy to update.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        source_firewall_policy (str):
            The firewall policy from which to copy rules.

            This field is a member of `oneof`_ ``_source_firewall_policy``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    firewall_policy = proto.Field(
        proto.STRING,
        number=498173265,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    source_firewall_policy = proto.Field(
        proto.STRING,
        number=25013549,
        optional=True,
    )


class CloneRulesNetworkFirewallPolicyRequest(proto.Message):
    r"""A request message for NetworkFirewallPolicies.CloneRules. See
    the method description for details.

    Attributes:
        firewall_policy (str):
            Name of the firewall policy to update.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        source_firewall_policy (str):
            The firewall policy from which to copy rules.

            This field is a member of `oneof`_ ``_source_firewall_policy``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    firewall_policy = proto.Field(
        proto.STRING,
        number=498173265,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    source_firewall_policy = proto.Field(
        proto.STRING,
        number=25013549,
        optional=True,
    )


class CloneRulesRegionNetworkFirewallPolicyRequest(proto.Message):
    r"""A request message for
    RegionNetworkFirewallPolicies.CloneRules. See the method
    description for details.

    Attributes:
        firewall_policy (str):
            Name of the firewall policy to update.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        source_firewall_policy (str):
            The firewall policy from which to copy rules.

            This field is a member of `oneof`_ ``_source_firewall_policy``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    firewall_policy = proto.Field(
        proto.STRING,
        number=498173265,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    source_firewall_policy = proto.Field(
        proto.STRING,
        number=25013549,
        optional=True,
    )


class CreateInstancesInstanceGroupManagerRequest(proto.Message):
    r"""A request message for InstanceGroupManagers.CreateInstances.
    See the method description for details.

    Attributes:
        instance_group_manager (str):
            The name of the managed instance group. It
            should conform to RFC1035.
        instance_group_managers_create_instances_request_resource (google.cloud.compute_v1.types.InstanceGroupManagersCreateInstancesRequest):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. The request ID must be a valid UUID
            with the exception that zero UUID is not
            supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone where the managed
            instance group is located. It should conform to
            RFC1035.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_group_manager = proto.Field(
        proto.STRING,
        number=249363395,
    )
    instance_group_managers_create_instances_request_resource = proto.Field(
        proto.MESSAGE,
        number=24558867,
        message="InstanceGroupManagersCreateInstancesRequest",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class CreateInstancesRegionInstanceGroupManagerRequest(proto.Message):
    r"""A request message for
    RegionInstanceGroupManagers.CreateInstances. See the method
    description for details.

    Attributes:
        instance_group_manager (str):
            The name of the managed instance group. It
            should conform to RFC1035.
        project (str):
            Project ID for this request.
        region (str):
            The name of the region where the managed
            instance group is located. It should conform to
            RFC1035.
        region_instance_group_managers_create_instances_request_resource (google.cloud.compute_v1.types.RegionInstanceGroupManagersCreateInstancesRequest):
            The body resource for this request
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. The request ID must be a valid UUID
            with the exception that zero UUID is not
            supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_group_manager = proto.Field(
        proto.STRING,
        number=249363395,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    region_instance_group_managers_create_instances_request_resource = proto.Field(
        proto.MESSAGE,
        number=359014280,
        message="RegionInstanceGroupManagersCreateInstancesRequest",
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class CreateSnapshotDiskRequest(proto.Message):
    r"""A request message for Disks.CreateSnapshot. See the method
    description for details.

    Attributes:
        disk (str):
            Name of the persistent disk to snapshot.
        guest_flush (bool):
            [Input Only] Whether to attempt an application consistent
            snapshot by informing the OS to prepare for the snapshot
            process.

            This field is a member of `oneof`_ ``_guest_flush``.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        snapshot_resource (google.cloud.compute_v1.types.Snapshot):
            The body resource for this request
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    disk = proto.Field(
        proto.STRING,
        number=3083677,
    )
    guest_flush = proto.Field(
        proto.BOOL,
        number=385550813,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    snapshot_resource = proto.Field(
        proto.MESSAGE,
        number=481319977,
        message="Snapshot",
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class CreateSnapshotRegionDiskRequest(proto.Message):
    r"""A request message for RegionDisks.CreateSnapshot. See the
    method description for details.

    Attributes:
        disk (str):
            Name of the regional persistent disk to
            snapshot.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        snapshot_resource (google.cloud.compute_v1.types.Snapshot):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    disk = proto.Field(
        proto.STRING,
        number=3083677,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    snapshot_resource = proto.Field(
        proto.MESSAGE,
        number=481319977,
        message="Snapshot",
    )


class DeleteAccessConfigInstanceRequest(proto.Message):
    r"""A request message for Instances.DeleteAccessConfig. See the
    method description for details.

    Attributes:
        access_config (str):
            The name of the access config to delete.
        instance (str):
            The instance name for this request.
        network_interface (str):
            The name of the network interface.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    access_config = proto.Field(
        proto.STRING,
        number=72856189,
    )
    instance = proto.Field(
        proto.STRING,
        number=18257045,
    )
    network_interface = proto.Field(
        proto.STRING,
        number=365387880,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class DeleteAddressRequest(proto.Message):
    r"""A request message for Addresses.Delete. See the method
    description for details.

    Attributes:
        address (str):
            Name of the address resource to delete.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    address = proto.Field(
        proto.STRING,
        number=462920692,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class DeleteAutoscalerRequest(proto.Message):
    r"""A request message for Autoscalers.Delete. See the method
    description for details.

    Attributes:
        autoscaler (str):
            Name of the autoscaler to delete.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            Name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    autoscaler = proto.Field(
        proto.STRING,
        number=517258967,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class DeleteBackendBucketRequest(proto.Message):
    r"""A request message for BackendBuckets.Delete. See the method
    description for details.

    Attributes:
        backend_bucket (str):
            Name of the BackendBucket resource to delete.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    backend_bucket = proto.Field(
        proto.STRING,
        number=91714037,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class DeleteBackendServiceRequest(proto.Message):
    r"""A request message for BackendServices.Delete. See the method
    description for details.

    Attributes:
        backend_service (str):
            Name of the BackendService resource to
            delete.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    backend_service = proto.Field(
        proto.STRING,
        number=306946058,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class DeleteDiskRequest(proto.Message):
    r"""A request message for Disks.Delete. See the method
    description for details.

    Attributes:
        disk (str):
            Name of the persistent disk to delete.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    disk = proto.Field(
        proto.STRING,
        number=3083677,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class DeleteExternalVpnGatewayRequest(proto.Message):
    r"""A request message for ExternalVpnGateways.Delete. See the
    method description for details.

    Attributes:
        external_vpn_gateway (str):
            Name of the externalVpnGateways to delete.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    external_vpn_gateway = proto.Field(
        proto.STRING,
        number=109898629,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class DeleteFirewallPolicyRequest(proto.Message):
    r"""A request message for FirewallPolicies.Delete. See the method
    description for details.

    Attributes:
        firewall_policy (str):
            Name of the firewall policy to delete.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    firewall_policy = proto.Field(
        proto.STRING,
        number=498173265,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class DeleteFirewallRequest(proto.Message):
    r"""A request message for Firewalls.Delete. See the method
    description for details.

    Attributes:
        firewall (str):
            Name of the firewall rule to delete.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    firewall = proto.Field(
        proto.STRING,
        number=511016192,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class DeleteForwardingRuleRequest(proto.Message):
    r"""A request message for ForwardingRules.Delete. See the method
    description for details.

    Attributes:
        forwarding_rule (str):
            Name of the ForwardingRule resource to
            delete.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    forwarding_rule = proto.Field(
        proto.STRING,
        number=269964030,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class DeleteGlobalAddressRequest(proto.Message):
    r"""A request message for GlobalAddresses.Delete. See the method
    description for details.

    Attributes:
        address (str):
            Name of the address resource to delete.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    address = proto.Field(
        proto.STRING,
        number=462920692,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class DeleteGlobalForwardingRuleRequest(proto.Message):
    r"""A request message for GlobalForwardingRules.Delete. See the
    method description for details.

    Attributes:
        forwarding_rule (str):
            Name of the ForwardingRule resource to
            delete.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    forwarding_rule = proto.Field(
        proto.STRING,
        number=269964030,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class DeleteGlobalNetworkEndpointGroupRequest(proto.Message):
    r"""A request message for GlobalNetworkEndpointGroups.Delete. See
    the method description for details.

    Attributes:
        network_endpoint_group (str):
            The name of the network endpoint group to
            delete. It should comply with RFC1035.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    network_endpoint_group = proto.Field(
        proto.STRING,
        number=433907078,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class DeleteGlobalOperationRequest(proto.Message):
    r"""A request message for GlobalOperations.Delete. See the method
    description for details.

    Attributes:
        operation (str):
            Name of the Operations resource to delete.
        project (str):
            Project ID for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    operation = proto.Field(
        proto.STRING,
        number=52090215,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )


class DeleteGlobalOrganizationOperationRequest(proto.Message):
    r"""A request message for GlobalOrganizationOperations.Delete.
    See the method description for details.

    Attributes:
        operation (str):
            Name of the Operations resource to delete.
        parent_id (str):
            Parent ID for this request.

            This field is a member of `oneof`_ ``_parent_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    operation = proto.Field(
        proto.STRING,
        number=52090215,
    )
    parent_id = proto.Field(
        proto.STRING,
        number=459714768,
        optional=True,
    )


class DeleteGlobalPublicDelegatedPrefixeRequest(proto.Message):
    r"""A request message for GlobalPublicDelegatedPrefixes.Delete.
    See the method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        public_delegated_prefix (str):
            Name of the PublicDelegatedPrefix resource to
            delete.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    public_delegated_prefix = proto.Field(
        proto.STRING,
        number=204238440,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class DeleteHealthCheckRequest(proto.Message):
    r"""A request message for HealthChecks.Delete. See the method
    description for details.

    Attributes:
        health_check (str):
            Name of the HealthCheck resource to delete.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    health_check = proto.Field(
        proto.STRING,
        number=308876645,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class DeleteImageRequest(proto.Message):
    r"""A request message for Images.Delete. See the method
    description for details.

    Attributes:
        image (str):
            Name of the image resource to delete.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    image = proto.Field(
        proto.STRING,
        number=100313435,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class DeleteInstanceGroupManagerRequest(proto.Message):
    r"""A request message for InstanceGroupManagers.Delete. See the
    method description for details.

    Attributes:
        instance_group_manager (str):
            The name of the managed instance group to
            delete.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone where the managed
            instance group is located.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_group_manager = proto.Field(
        proto.STRING,
        number=249363395,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class DeleteInstanceGroupRequest(proto.Message):
    r"""A request message for InstanceGroups.Delete. See the method
    description for details.

    Attributes:
        instance_group (str):
            The name of the instance group to delete.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone where the instance group
            is located.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_group = proto.Field(
        proto.STRING,
        number=81095253,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class DeleteInstanceRequest(proto.Message):
    r"""A request message for Instances.Delete. See the method
    description for details.

    Attributes:
        instance (str):
            Name of the instance resource to delete.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance = proto.Field(
        proto.STRING,
        number=18257045,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class DeleteInstanceTemplateRequest(proto.Message):
    r"""A request message for InstanceTemplates.Delete. See the
    method description for details.

    Attributes:
        instance_template (str):
            The name of the instance template to delete.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_template = proto.Field(
        proto.STRING,
        number=309248228,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class DeleteInstancesInstanceGroupManagerRequest(proto.Message):
    r"""A request message for InstanceGroupManagers.DeleteInstances.
    See the method description for details.

    Attributes:
        instance_group_manager (str):
            The name of the managed instance group.
        instance_group_managers_delete_instances_request_resource (google.cloud.compute_v1.types.InstanceGroupManagersDeleteInstancesRequest):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone where the managed
            instance group is located.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_group_manager = proto.Field(
        proto.STRING,
        number=249363395,
    )
    instance_group_managers_delete_instances_request_resource = proto.Field(
        proto.MESSAGE,
        number=166421252,
        message="InstanceGroupManagersDeleteInstancesRequest",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class DeleteInstancesRegionInstanceGroupManagerRequest(proto.Message):
    r"""A request message for
    RegionInstanceGroupManagers.DeleteInstances. See the method
    description for details.

    Attributes:
        instance_group_manager (str):
            Name of the managed instance group.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        region_instance_group_managers_delete_instances_request_resource (google.cloud.compute_v1.types.RegionInstanceGroupManagersDeleteInstancesRequest):
            The body resource for this request
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_group_manager = proto.Field(
        proto.STRING,
        number=249363395,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    region_instance_group_managers_delete_instances_request_resource = proto.Field(
        proto.MESSAGE,
        number=500876665,
        message="RegionInstanceGroupManagersDeleteInstancesRequest",
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class DeleteInterconnectAttachmentRequest(proto.Message):
    r"""A request message for InterconnectAttachments.Delete. See the
    method description for details.

    Attributes:
        interconnect_attachment (str):
            Name of the interconnect attachment to
            delete.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    interconnect_attachment = proto.Field(
        proto.STRING,
        number=308135284,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class DeleteInterconnectRequest(proto.Message):
    r"""A request message for Interconnects.Delete. See the method
    description for details.

    Attributes:
        interconnect (str):
            Name of the interconnect to delete.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    interconnect = proto.Field(
        proto.STRING,
        number=224601230,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class DeleteLicenseRequest(proto.Message):
    r"""A request message for Licenses.Delete. See the method
    description for details.

    Attributes:
        license_ (str):
            Name of the license resource to delete.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    license_ = proto.Field(
        proto.STRING,
        number=166757441,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class DeleteMachineImageRequest(proto.Message):
    r"""A request message for MachineImages.Delete. See the method
    description for details.

    Attributes:
        machine_image (str):
            The name of the machine image to delete.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    machine_image = proto.Field(
        proto.STRING,
        number=69189475,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class DeleteNetworkEdgeSecurityServiceRequest(proto.Message):
    r"""A request message for NetworkEdgeSecurityServices.Delete. See
    the method description for details.

    Attributes:
        network_edge_security_service (str):
            Name of the network edge security service to
            delete.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    network_edge_security_service = proto.Field(
        proto.STRING,
        number=157011879,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class DeleteNetworkEndpointGroupRequest(proto.Message):
    r"""A request message for NetworkEndpointGroups.Delete. See the
    method description for details.

    Attributes:
        network_endpoint_group (str):
            The name of the network endpoint group to
            delete. It should comply with RFC1035.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone where the network
            endpoint group is located. It should comply with
            RFC1035.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    network_endpoint_group = proto.Field(
        proto.STRING,
        number=433907078,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class DeleteNetworkFirewallPolicyRequest(proto.Message):
    r"""A request message for NetworkFirewallPolicies.Delete. See the
    method description for details.

    Attributes:
        firewall_policy (str):
            Name of the firewall policy to delete.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    firewall_policy = proto.Field(
        proto.STRING,
        number=498173265,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class DeleteNetworkRequest(proto.Message):
    r"""A request message for Networks.Delete. See the method
    description for details.

    Attributes:
        network (str):
            Name of the network to delete.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    network = proto.Field(
        proto.STRING,
        number=232872494,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class DeleteNodeGroupRequest(proto.Message):
    r"""A request message for NodeGroups.Delete. See the method
    description for details.

    Attributes:
        node_group (str):
            Name of the NodeGroup resource to delete.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    node_group = proto.Field(
        proto.STRING,
        number=469958146,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class DeleteNodeTemplateRequest(proto.Message):
    r"""A request message for NodeTemplates.Delete. See the method
    description for details.

    Attributes:
        node_template (str):
            Name of the NodeTemplate resource to delete.
        project (str):
            Project ID for this request.
        region (str):
            The name of the region for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    node_template = proto.Field(
        proto.STRING,
        number=323154455,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class DeleteNodesNodeGroupRequest(proto.Message):
    r"""A request message for NodeGroups.DeleteNodes. See the method
    description for details.

    Attributes:
        node_group (str):
            Name of the NodeGroup resource whose nodes
            will be deleted.
        node_groups_delete_nodes_request_resource (google.cloud.compute_v1.types.NodeGroupsDeleteNodesRequest):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    node_group = proto.Field(
        proto.STRING,
        number=469958146,
    )
    node_groups_delete_nodes_request_resource = proto.Field(
        proto.MESSAGE,
        number=183298962,
        message="NodeGroupsDeleteNodesRequest",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class DeletePacketMirroringRequest(proto.Message):
    r"""A request message for PacketMirrorings.Delete. See the method
    description for details.

    Attributes:
        packet_mirroring (str):
            Name of the PacketMirroring resource to
            delete.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    packet_mirroring = proto.Field(
        proto.STRING,
        number=22305996,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class DeletePerInstanceConfigsInstanceGroupManagerRequest(proto.Message):
    r"""A request message for
    InstanceGroupManagers.DeletePerInstanceConfigs. See the method
    description for details.

    Attributes:
        instance_group_manager (str):
            The name of the managed instance group. It
            should conform to RFC1035.
        instance_group_managers_delete_per_instance_configs_req_resource (google.cloud.compute_v1.types.InstanceGroupManagersDeletePerInstanceConfigsReq):
            The body resource for this request
        project (str):
            Project ID for this request.
        zone (str):
            The name of the zone where the managed
            instance group is located. It should conform to
            RFC1035.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_group_manager = proto.Field(
        proto.STRING,
        number=249363395,
    )
    instance_group_managers_delete_per_instance_configs_req_resource = proto.Field(
        proto.MESSAGE,
        number=362427680,
        message="InstanceGroupManagersDeletePerInstanceConfigsReq",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class DeletePerInstanceConfigsRegionInstanceGroupManagerRequest(proto.Message):
    r"""A request message for
    RegionInstanceGroupManagers.DeletePerInstanceConfigs. See the
    method description for details.

    Attributes:
        instance_group_manager (str):
            The name of the managed instance group. It
            should conform to RFC1035.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request,
            should conform to RFC1035.
        region_instance_group_manager_delete_instance_config_req_resource (google.cloud.compute_v1.types.RegionInstanceGroupManagerDeleteInstanceConfigReq):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_group_manager = proto.Field(
        proto.STRING,
        number=249363395,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    region_instance_group_manager_delete_instance_config_req_resource = proto.Field(
        proto.MESSAGE,
        number=740741,
        message="RegionInstanceGroupManagerDeleteInstanceConfigReq",
    )


class DeletePublicAdvertisedPrefixeRequest(proto.Message):
    r"""A request message for PublicAdvertisedPrefixes.Delete. See
    the method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        public_advertised_prefix (str):
            Name of the PublicAdvertisedPrefix resource
            to delete.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    public_advertised_prefix = proto.Field(
        proto.STRING,
        number=101874590,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class DeletePublicDelegatedPrefixeRequest(proto.Message):
    r"""A request message for PublicDelegatedPrefixes.Delete. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        public_delegated_prefix (str):
            Name of the PublicDelegatedPrefix resource to
            delete.
        region (str):
            Name of the region of this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    public_delegated_prefix = proto.Field(
        proto.STRING,
        number=204238440,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class DeleteRegionAutoscalerRequest(proto.Message):
    r"""A request message for RegionAutoscalers.Delete. See the
    method description for details.

    Attributes:
        autoscaler (str):
            Name of the autoscaler to delete.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    autoscaler = proto.Field(
        proto.STRING,
        number=517258967,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class DeleteRegionBackendServiceRequest(proto.Message):
    r"""A request message for RegionBackendServices.Delete. See the
    method description for details.

    Attributes:
        backend_service (str):
            Name of the BackendService resource to
            delete.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    backend_service = proto.Field(
        proto.STRING,
        number=306946058,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class DeleteRegionDiskRequest(proto.Message):
    r"""A request message for RegionDisks.Delete. See the method
    description for details.

    Attributes:
        disk (str):
            Name of the regional persistent disk to
            delete.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    disk = proto.Field(
        proto.STRING,
        number=3083677,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class DeleteRegionHealthCheckRequest(proto.Message):
    r"""A request message for RegionHealthChecks.Delete. See the
    method description for details.

    Attributes:
        health_check (str):
            Name of the HealthCheck resource to delete.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    health_check = proto.Field(
        proto.STRING,
        number=308876645,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class DeleteRegionHealthCheckServiceRequest(proto.Message):
    r"""A request message for RegionHealthCheckServices.Delete. See
    the method description for details.

    Attributes:
        health_check_service (str):
            Name of the HealthCheckService to delete. The
            name must be 1-63 characters long, and comply
            with RFC1035.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    health_check_service = proto.Field(
        proto.STRING,
        number=408374747,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class DeleteRegionInstanceGroupManagerRequest(proto.Message):
    r"""A request message for RegionInstanceGroupManagers.Delete. See
    the method description for details.

    Attributes:
        instance_group_manager (str):
            Name of the managed instance group to delete.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_group_manager = proto.Field(
        proto.STRING,
        number=249363395,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class DeleteRegionNetworkEndpointGroupRequest(proto.Message):
    r"""A request message for RegionNetworkEndpointGroups.Delete. See
    the method description for details.

    Attributes:
        network_endpoint_group (str):
            The name of the network endpoint group to
            delete. It should comply with RFC1035.
        project (str):
            Project ID for this request.
        region (str):
            The name of the region where the network
            endpoint group is located. It should comply with
            RFC1035.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    network_endpoint_group = proto.Field(
        proto.STRING,
        number=433907078,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class DeleteRegionNetworkFirewallPolicyRequest(proto.Message):
    r"""A request message for RegionNetworkFirewallPolicies.Delete.
    See the method description for details.

    Attributes:
        firewall_policy (str):
            Name of the firewall policy to delete.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    firewall_policy = proto.Field(
        proto.STRING,
        number=498173265,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class DeleteRegionNotificationEndpointRequest(proto.Message):
    r"""A request message for RegionNotificationEndpoints.Delete. See
    the method description for details.

    Attributes:
        notification_endpoint (str):
            Name of the NotificationEndpoint resource to
            delete.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    notification_endpoint = proto.Field(
        proto.STRING,
        number=376807017,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class DeleteRegionOperationRequest(proto.Message):
    r"""A request message for RegionOperations.Delete. See the method
    description for details.

    Attributes:
        operation (str):
            Name of the Operations resource to delete.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    operation = proto.Field(
        proto.STRING,
        number=52090215,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )


class DeleteRegionSecurityPolicyRequest(proto.Message):
    r"""A request message for RegionSecurityPolicies.Delete. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        security_policy (str):
            Name of the security policy to delete.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    security_policy = proto.Field(
        proto.STRING,
        number=171082513,
    )


class DeleteRegionSslCertificateRequest(proto.Message):
    r"""A request message for RegionSslCertificates.Delete. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        ssl_certificate (str):
            Name of the SslCertificate resource to
            delete.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    ssl_certificate = proto.Field(
        proto.STRING,
        number=46443492,
    )


class DeleteRegionTargetHttpProxyRequest(proto.Message):
    r"""A request message for RegionTargetHttpProxies.Delete. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_http_proxy (str):
            Name of the TargetHttpProxy resource to
            delete.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_http_proxy = proto.Field(
        proto.STRING,
        number=206872421,
    )


class DeleteRegionTargetHttpsProxyRequest(proto.Message):
    r"""A request message for RegionTargetHttpsProxies.Delete. See
    the method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_https_proxy (str):
            Name of the TargetHttpsProxy resource to
            delete.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_https_proxy = proto.Field(
        proto.STRING,
        number=52336748,
    )


class DeleteRegionUrlMapRequest(proto.Message):
    r"""A request message for RegionUrlMaps.Delete. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            begin_interface: MixerMutationRequestBuilder Request ID to
            support idempotency.

            This field is a member of `oneof`_ ``_request_id``.
        url_map (str):
            Name of the UrlMap resource to delete.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    url_map = proto.Field(
        proto.STRING,
        number=367020684,
    )


class DeleteReservationRequest(proto.Message):
    r"""A request message for Reservations.Delete. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        reservation (str):
            Name of the reservation to delete.
        zone (str):
            Name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    reservation = proto.Field(
        proto.STRING,
        number=47530956,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class DeleteResourcePolicyRequest(proto.Message):
    r"""A request message for ResourcePolicies.Delete. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        resource_policy (str):
            Name of the resource policy to delete.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    resource_policy = proto.Field(
        proto.STRING,
        number=159240835,
    )


class DeleteRouteRequest(proto.Message):
    r"""A request message for Routes.Delete. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        route (str):
            Name of the Route resource to delete.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    route = proto.Field(
        proto.STRING,
        number=108704329,
    )


class DeleteRouterRequest(proto.Message):
    r"""A request message for Routers.Delete. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        router (str):
            Name of the Router resource to delete.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    router = proto.Field(
        proto.STRING,
        number=148608841,
    )


class DeleteSecurityPolicyRequest(proto.Message):
    r"""A request message for SecurityPolicies.Delete. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        security_policy (str):
            Name of the security policy to delete.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    security_policy = proto.Field(
        proto.STRING,
        number=171082513,
    )


class DeleteServiceAttachmentRequest(proto.Message):
    r"""A request message for ServiceAttachments.Delete. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region of this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        service_attachment (str):
            Name of the ServiceAttachment resource to
            delete.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    service_attachment = proto.Field(
        proto.STRING,
        number=338957549,
    )


class DeleteSignedUrlKeyBackendBucketRequest(proto.Message):
    r"""A request message for BackendBuckets.DeleteSignedUrlKey. See
    the method description for details.

    Attributes:
        backend_bucket (str):
            Name of the BackendBucket resource to which
            the Signed URL Key should be added. The name
            should conform to RFC1035.
        key_name (str):
            The name of the Signed URL Key to delete.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    backend_bucket = proto.Field(
        proto.STRING,
        number=91714037,
    )
    key_name = proto.Field(
        proto.STRING,
        number=500938859,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class DeleteSignedUrlKeyBackendServiceRequest(proto.Message):
    r"""A request message for BackendServices.DeleteSignedUrlKey. See
    the method description for details.

    Attributes:
        backend_service (str):
            Name of the BackendService resource to which
            the Signed URL Key should be added. The name
            should conform to RFC1035.
        key_name (str):
            The name of the Signed URL Key to delete.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    backend_service = proto.Field(
        proto.STRING,
        number=306946058,
    )
    key_name = proto.Field(
        proto.STRING,
        number=500938859,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class DeleteSnapshotRequest(proto.Message):
    r"""A request message for Snapshots.Delete. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        snapshot (str):
            Name of the Snapshot resource to delete.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    snapshot = proto.Field(
        proto.STRING,
        number=284874180,
    )


class DeleteSslCertificateRequest(proto.Message):
    r"""A request message for SslCertificates.Delete. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        ssl_certificate (str):
            Name of the SslCertificate resource to
            delete.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    ssl_certificate = proto.Field(
        proto.STRING,
        number=46443492,
    )


class DeleteSslPolicyRequest(proto.Message):
    r"""A request message for SslPolicies.Delete. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        ssl_policy (str):
            Name of the SSL policy to delete. The name
            must be 1-63 characters long, and comply with
            RFC1035.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    ssl_policy = proto.Field(
        proto.STRING,
        number=295190213,
    )


class DeleteSubnetworkRequest(proto.Message):
    r"""A request message for Subnetworks.Delete. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        subnetwork (str):
            Name of the Subnetwork resource to delete.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    subnetwork = proto.Field(
        proto.STRING,
        number=307827694,
    )


class DeleteTargetGrpcProxyRequest(proto.Message):
    r"""A request message for TargetGrpcProxies.Delete. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_grpc_proxy (str):
            Name of the TargetGrpcProxy resource to
            delete.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_grpc_proxy = proto.Field(
        proto.STRING,
        number=5020283,
    )


class DeleteTargetHttpProxyRequest(proto.Message):
    r"""A request message for TargetHttpProxies.Delete. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_http_proxy (str):
            Name of the TargetHttpProxy resource to
            delete.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_http_proxy = proto.Field(
        proto.STRING,
        number=206872421,
    )


class DeleteTargetHttpsProxyRequest(proto.Message):
    r"""A request message for TargetHttpsProxies.Delete. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_https_proxy (str):
            Name of the TargetHttpsProxy resource to
            delete.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_https_proxy = proto.Field(
        proto.STRING,
        number=52336748,
    )


class DeleteTargetInstanceRequest(proto.Message):
    r"""A request message for TargetInstances.Delete. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_instance (str):
            Name of the TargetInstance resource to
            delete.
        zone (str):
            Name of the zone scoping this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_instance = proto.Field(
        proto.STRING,
        number=289769347,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class DeleteTargetPoolRequest(proto.Message):
    r"""A request message for TargetPools.Delete. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_pool (str):
            Name of the TargetPool resource to delete.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_pool = proto.Field(
        proto.STRING,
        number=62796298,
    )


class DeleteTargetSslProxyRequest(proto.Message):
    r"""A request message for TargetSslProxies.Delete. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_ssl_proxy (str):
            Name of the TargetSslProxy resource to
            delete.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_ssl_proxy = proto.Field(
        proto.STRING,
        number=338795853,
    )


class DeleteTargetTcpProxyRequest(proto.Message):
    r"""A request message for TargetTcpProxies.Delete. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_tcp_proxy (str):
            Name of the TargetTcpProxy resource to
            delete.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_tcp_proxy = proto.Field(
        proto.STRING,
        number=503065442,
    )


class DeleteTargetVpnGatewayRequest(proto.Message):
    r"""A request message for TargetVpnGateways.Delete. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_vpn_gateway (str):
            Name of the target VPN gateway to delete.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_vpn_gateway = proto.Field(
        proto.STRING,
        number=532512843,
    )


class DeleteUrlMapRequest(proto.Message):
    r"""A request message for UrlMaps.Delete. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        url_map (str):
            Name of the UrlMap resource to delete.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    url_map = proto.Field(
        proto.STRING,
        number=367020684,
    )


class DeleteVpnGatewayRequest(proto.Message):
    r"""A request message for VpnGateways.Delete. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        vpn_gateway (str):
            Name of the VPN gateway to delete.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    vpn_gateway = proto.Field(
        proto.STRING,
        number=406684153,
    )


class DeleteVpnTunnelRequest(proto.Message):
    r"""A request message for VpnTunnels.Delete. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        vpn_tunnel (str):
            Name of the VpnTunnel resource to delete.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    vpn_tunnel = proto.Field(
        proto.STRING,
        number=143821331,
    )


class DeleteZoneOperationRequest(proto.Message):
    r"""A request message for ZoneOperations.Delete. See the method
    description for details.

    Attributes:
        operation (str):
            Name of the Operations resource to delete.
        project (str):
            Project ID for this request.
        zone (str):
            Name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    operation = proto.Field(
        proto.STRING,
        number=52090215,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class DeprecateImageRequest(proto.Message):
    r"""A request message for Images.Deprecate. See the method
    description for details.

    Attributes:
        deprecation_status_resource (google.cloud.compute_v1.types.DeprecationStatus):
            The body resource for this request
        image (str):
            Image name.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    deprecation_status_resource = proto.Field(
        proto.MESSAGE,
        number=333006064,
        message="DeprecationStatus",
    )
    image = proto.Field(
        proto.STRING,
        number=100313435,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class DetachDiskInstanceRequest(proto.Message):
    r"""A request message for Instances.DetachDisk. See the method
    description for details.

    Attributes:
        device_name (str):
            The device name of the disk to detach. Make a
            get() request on the instance to view currently
            attached disks and device names.
        instance (str):
            Instance name for this request.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    device_name = proto.Field(
        proto.STRING,
        number=67541716,
    )
    instance = proto.Field(
        proto.STRING,
        number=18257045,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class DetachNetworkEndpointsGlobalNetworkEndpointGroupRequest(proto.Message):
    r"""A request message for
    GlobalNetworkEndpointGroups.DetachNetworkEndpoints. See the
    method description for details.

    Attributes:
        global_network_endpoint_groups_detach_endpoints_request_resource (google.cloud.compute_v1.types.GlobalNetworkEndpointGroupsDetachEndpointsRequest):
            The body resource for this request
        network_endpoint_group (str):
            The name of the network endpoint group where
            you are removing network endpoints. It should
            comply with RFC1035.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    global_network_endpoint_groups_detach_endpoints_request_resource = proto.Field(
        proto.MESSAGE,
        number=8898269,
        message="GlobalNetworkEndpointGroupsDetachEndpointsRequest",
    )
    network_endpoint_group = proto.Field(
        proto.STRING,
        number=433907078,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class DetachNetworkEndpointsNetworkEndpointGroupRequest(proto.Message):
    r"""A request message for
    NetworkEndpointGroups.DetachNetworkEndpoints. See the method
    description for details.

    Attributes:
        network_endpoint_group (str):
            The name of the network endpoint group where
            you are removing network endpoints. It should
            comply with RFC1035.
        network_endpoint_groups_detach_endpoints_request_resource (google.cloud.compute_v1.types.NetworkEndpointGroupsDetachEndpointsRequest):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone where the network
            endpoint group is located. It should comply with
            RFC1035.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    network_endpoint_group = proto.Field(
        proto.STRING,
        number=433907078,
    )
    network_endpoint_groups_detach_endpoints_request_resource = proto.Field(
        proto.MESSAGE,
        number=515608697,
        message="NetworkEndpointGroupsDetachEndpointsRequest",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class DisableXpnHostProjectRequest(proto.Message):
    r"""A request message for Projects.DisableXpnHost. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class DisableXpnResourceProjectRequest(proto.Message):
    r"""A request message for Projects.DisableXpnResource. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        projects_disable_xpn_resource_request_resource (google.cloud.compute_v1.types.ProjectsDisableXpnResourceRequest):
            The body resource for this request
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    projects_disable_xpn_resource_request_resource = proto.Field(
        proto.MESSAGE,
        number=209136170,
        message="ProjectsDisableXpnResourceRequest",
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class DiskMoveRequest(proto.Message):
    r"""

    Attributes:
        destination_zone (str):
            The URL of the destination zone to move the
            disk. This can be a full or partial URL. For
            example, the following are all valid URLs to a
            zone: -
            https://www.googleapis.com/compute/v1/projects/project/zones/zone
            - projects/project/zones/zone - zones/zone

            This field is a member of `oneof`_ ``_destination_zone``.
        target_disk (str):
            The URL of the target disk to move. This can
            be a full or partial URL. For example, the
            following are all valid URLs to a disk: -
            https://www.googleapis.com/compute/v1/projects/project/zones/zone
            /disks/disk -
            projects/project/zones/zone/disks/disk -
            zones/zone/disks/disk

            This field is a member of `oneof`_ ``_target_disk``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    destination_zone = proto.Field(
        proto.STRING,
        number=131854653,
        optional=True,
    )
    target_disk = proto.Field(
        proto.STRING,
        number=62433163,
        optional=True,
    )


class DisksAddResourcePoliciesRequest(proto.Message):
    r"""

    Attributes:
        resource_policies (Sequence[str]):
            Full or relative path to the resource policy
            to be added to this disk. You can only specify
            one resource policy.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    resource_policies = proto.RepeatedField(
        proto.STRING,
        number=22220385,
    )


class DisksRemoveResourcePoliciesRequest(proto.Message):
    r"""

    Attributes:
        resource_policies (Sequence[str]):
            Resource policies to be removed from this
            disk.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    resource_policies = proto.RepeatedField(
        proto.STRING,
        number=22220385,
    )


class DisksResizeRequest(proto.Message):
    r"""

    Attributes:
        size_gb (int):
            The new size of the persistent disk, which is
            specified in GB.

            This field is a member of `oneof`_ ``_size_gb``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    size_gb = proto.Field(
        proto.INT64,
        number=494929369,
        optional=True,
    )


class EnableXpnHostProjectRequest(proto.Message):
    r"""A request message for Projects.EnableXpnHost. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class EnableXpnResourceProjectRequest(proto.Message):
    r"""A request message for Projects.EnableXpnResource. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        projects_enable_xpn_resource_request_resource (google.cloud.compute_v1.types.ProjectsEnableXpnResourceRequest):
            The body resource for this request
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    projects_enable_xpn_resource_request_resource = proto.Field(
        proto.MESSAGE,
        number=421980207,
        message="ProjectsEnableXpnResourceRequest",
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class ExpandIpCidrRangeSubnetworkRequest(proto.Message):
    r"""A request message for Subnetworks.ExpandIpCidrRange. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        subnetwork (str):
            Name of the Subnetwork resource to update.
        subnetworks_expand_ip_cidr_range_request_resource (google.cloud.compute_v1.types.SubnetworksExpandIpCidrRangeRequest):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    subnetwork = proto.Field(
        proto.STRING,
        number=307827694,
    )
    subnetworks_expand_ip_cidr_range_request_resource = proto.Field(
        proto.MESSAGE,
        number=477014110,
        message="SubnetworksExpandIpCidrRangeRequest",
    )


class GetAcceleratorTypeRequest(proto.Message):
    r"""A request message for AcceleratorTypes.Get. See the method
    description for details.

    Attributes:
        accelerator_type (str):
            Name of the accelerator type to return.
        project (str):
            Project ID for this request.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    accelerator_type = proto.Field(
        proto.STRING,
        number=138031246,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class GetAddressRequest(proto.Message):
    r"""A request message for Addresses.Get. See the method
    description for details.

    Attributes:
        address (str):
            Name of the address resource to return.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    address = proto.Field(
        proto.STRING,
        number=462920692,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )


class GetAssociationFirewallPolicyRequest(proto.Message):
    r"""A request message for FirewallPolicies.GetAssociation. See
    the method description for details.

    Attributes:
        firewall_policy (str):
            Name of the firewall policy to which the
            queried rule belongs.
        name (str):
            The name of the association to get from the
            firewall policy.

            This field is a member of `oneof`_ ``_name``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    firewall_policy = proto.Field(
        proto.STRING,
        number=498173265,
    )
    name = proto.Field(
        proto.STRING,
        number=3373707,
        optional=True,
    )


class GetAssociationNetworkFirewallPolicyRequest(proto.Message):
    r"""A request message for NetworkFirewallPolicies.GetAssociation.
    See the method description for details.

    Attributes:
        firewall_policy (str):
            Name of the firewall policy to which the
            queried association belongs.
        name (str):
            The name of the association to get from the
            firewall policy.

            This field is a member of `oneof`_ ``_name``.
        project (str):
            Project ID for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    firewall_policy = proto.Field(
        proto.STRING,
        number=498173265,
    )
    name = proto.Field(
        proto.STRING,
        number=3373707,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )


class GetAssociationRegionNetworkFirewallPolicyRequest(proto.Message):
    r"""A request message for
    RegionNetworkFirewallPolicies.GetAssociation. See the method
    description for details.

    Attributes:
        firewall_policy (str):
            Name of the firewall policy to which the
            queried association belongs.
        name (str):
            The name of the association to get from the
            firewall policy.

            This field is a member of `oneof`_ ``_name``.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    firewall_policy = proto.Field(
        proto.STRING,
        number=498173265,
    )
    name = proto.Field(
        proto.STRING,
        number=3373707,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )


class GetAutoscalerRequest(proto.Message):
    r"""A request message for Autoscalers.Get. See the method
    description for details.

    Attributes:
        autoscaler (str):
            Name of the autoscaler to return.
        project (str):
            Project ID for this request.
        zone (str):
            Name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    autoscaler = proto.Field(
        proto.STRING,
        number=517258967,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class GetBackendBucketRequest(proto.Message):
    r"""A request message for BackendBuckets.Get. See the method
    description for details.

    Attributes:
        backend_bucket (str):
            Name of the BackendBucket resource to return.
        project (str):
            Project ID for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    backend_bucket = proto.Field(
        proto.STRING,
        number=91714037,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )


class GetBackendServiceRequest(proto.Message):
    r"""A request message for BackendServices.Get. See the method
    description for details.

    Attributes:
        backend_service (str):
            Name of the BackendService resource to
            return.
        project (str):
            Project ID for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    backend_service = proto.Field(
        proto.STRING,
        number=306946058,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )


class GetDiagnosticsInterconnectRequest(proto.Message):
    r"""A request message for Interconnects.GetDiagnostics. See the
    method description for details.

    Attributes:
        interconnect (str):
            Name of the interconnect resource to query.
        project (str):
            Project ID for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    interconnect = proto.Field(
        proto.STRING,
        number=224601230,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )


class GetDiskRequest(proto.Message):
    r"""A request message for Disks.Get. See the method description
    for details.

    Attributes:
        disk (str):
            Name of the persistent disk to return.
        project (str):
            Project ID for this request.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    disk = proto.Field(
        proto.STRING,
        number=3083677,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class GetDiskTypeRequest(proto.Message):
    r"""A request message for DiskTypes.Get. See the method
    description for details.

    Attributes:
        disk_type (str):
            Name of the disk type to return.
        project (str):
            Project ID for this request.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    disk_type = proto.Field(
        proto.STRING,
        number=93009052,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class GetEffectiveFirewallsInstanceRequest(proto.Message):
    r"""A request message for Instances.GetEffectiveFirewalls. See
    the method description for details.

    Attributes:
        instance (str):
            Name of the instance scoping this request.
        network_interface (str):
            The name of the network interface to get the
            effective firewalls.
        project (str):
            Project ID for this request.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance = proto.Field(
        proto.STRING,
        number=18257045,
    )
    network_interface = proto.Field(
        proto.STRING,
        number=365387880,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class GetEffectiveFirewallsNetworkRequest(proto.Message):
    r"""A request message for Networks.GetEffectiveFirewalls. See the
    method description for details.

    Attributes:
        network (str):
            Name of the network for this request.
        project (str):
            Project ID for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    network = proto.Field(
        proto.STRING,
        number=232872494,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )


class GetEffectiveFirewallsRegionNetworkFirewallPolicyRequest(proto.Message):
    r"""A request message for
    RegionNetworkFirewallPolicies.GetEffectiveFirewalls. See the
    method description for details.

    Attributes:
        network (str):
            Network reference
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    network = proto.Field(
        proto.STRING,
        number=232872494,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )


class GetExternalVpnGatewayRequest(proto.Message):
    r"""A request message for ExternalVpnGateways.Get. See the method
    description for details.

    Attributes:
        external_vpn_gateway (str):
            Name of the externalVpnGateway to return.
        project (str):
            Project ID for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    external_vpn_gateway = proto.Field(
        proto.STRING,
        number=109898629,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )


class GetFirewallPolicyRequest(proto.Message):
    r"""A request message for FirewallPolicies.Get. See the method
    description for details.

    Attributes:
        firewall_policy (str):
            Name of the firewall policy to get.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    firewall_policy = proto.Field(
        proto.STRING,
        number=498173265,
    )


class GetFirewallRequest(proto.Message):
    r"""A request message for Firewalls.Get. See the method
    description for details.

    Attributes:
        firewall (str):
            Name of the firewall rule to return.
        project (str):
            Project ID for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    firewall = proto.Field(
        proto.STRING,
        number=511016192,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )


class GetForwardingRuleRequest(proto.Message):
    r"""A request message for ForwardingRules.Get. See the method
    description for details.

    Attributes:
        forwarding_rule (str):
            Name of the ForwardingRule resource to
            return.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    forwarding_rule = proto.Field(
        proto.STRING,
        number=269964030,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )


class GetFromFamilyImageRequest(proto.Message):
    r"""A request message for Images.GetFromFamily. See the method
    description for details.

    Attributes:
        family (str):
            Name of the image family to search for.
        project (str):
            Project ID for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    family = proto.Field(
        proto.STRING,
        number=328751972,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )


class GetGlobalAddressRequest(proto.Message):
    r"""A request message for GlobalAddresses.Get. See the method
    description for details.

    Attributes:
        address (str):
            Name of the address resource to return.
        project (str):
            Project ID for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    address = proto.Field(
        proto.STRING,
        number=462920692,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )


class GetGlobalForwardingRuleRequest(proto.Message):
    r"""A request message for GlobalForwardingRules.Get. See the
    method description for details.

    Attributes:
        forwarding_rule (str):
            Name of the ForwardingRule resource to
            return.
        project (str):
            Project ID for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    forwarding_rule = proto.Field(
        proto.STRING,
        number=269964030,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )


class GetGlobalNetworkEndpointGroupRequest(proto.Message):
    r"""A request message for GlobalNetworkEndpointGroups.Get. See
    the method description for details.

    Attributes:
        network_endpoint_group (str):
            The name of the network endpoint group. It
            should comply with RFC1035.
        project (str):
            Project ID for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    network_endpoint_group = proto.Field(
        proto.STRING,
        number=433907078,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )


class GetGlobalOperationRequest(proto.Message):
    r"""A request message for GlobalOperations.Get. See the method
    description for details.

    Attributes:
        operation (str):
            Name of the Operations resource to return.
        project (str):
            Project ID for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    operation = proto.Field(
        proto.STRING,
        number=52090215,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )


class GetGlobalOrganizationOperationRequest(proto.Message):
    r"""A request message for GlobalOrganizationOperations.Get. See
    the method description for details.

    Attributes:
        operation (str):
            Name of the Operations resource to return.
        parent_id (str):
            Parent ID for this request.

            This field is a member of `oneof`_ ``_parent_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    operation = proto.Field(
        proto.STRING,
        number=52090215,
    )
    parent_id = proto.Field(
        proto.STRING,
        number=459714768,
        optional=True,
    )


class GetGlobalPublicDelegatedPrefixeRequest(proto.Message):
    r"""A request message for GlobalPublicDelegatedPrefixes.Get. See
    the method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        public_delegated_prefix (str):
            Name of the PublicDelegatedPrefix resource to
            return.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    public_delegated_prefix = proto.Field(
        proto.STRING,
        number=204238440,
    )


class GetGuestAttributesInstanceRequest(proto.Message):
    r"""A request message for Instances.GetGuestAttributes. See the
    method description for details.

    Attributes:
        instance (str):
            Name of the instance scoping this request.
        project (str):
            Project ID for this request.
        query_path (str):
            Specifies the guest attributes path to be
            queried.

            This field is a member of `oneof`_ ``_query_path``.
        variable_key (str):
            Specifies the key for the guest attributes
            entry.

            This field is a member of `oneof`_ ``_variable_key``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance = proto.Field(
        proto.STRING,
        number=18257045,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    query_path = proto.Field(
        proto.STRING,
        number=368591164,
        optional=True,
    )
    variable_key = proto.Field(
        proto.STRING,
        number=164364828,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class GetHealthBackendServiceRequest(proto.Message):
    r"""A request message for BackendServices.GetHealth. See the
    method description for details.

    Attributes:
        backend_service (str):
            Name of the BackendService resource to which
            the queried instance belongs.
        project (str):

        resource_group_reference_resource (google.cloud.compute_v1.types.ResourceGroupReference):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    backend_service = proto.Field(
        proto.STRING,
        number=306946058,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    resource_group_reference_resource = proto.Field(
        proto.MESSAGE,
        number=112951123,
        message="ResourceGroupReference",
    )


class GetHealthCheckRequest(proto.Message):
    r"""A request message for HealthChecks.Get. See the method
    description for details.

    Attributes:
        health_check (str):
            Name of the HealthCheck resource to return.
        project (str):
            Project ID for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    health_check = proto.Field(
        proto.STRING,
        number=308876645,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )


class GetHealthRegionBackendServiceRequest(proto.Message):
    r"""A request message for RegionBackendServices.GetHealth. See
    the method description for details.

    Attributes:
        backend_service (str):
            Name of the BackendService resource for which
            to get health.
        project (str):

        region (str):
            Name of the region scoping this request.
        resource_group_reference_resource (google.cloud.compute_v1.types.ResourceGroupReference):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    backend_service = proto.Field(
        proto.STRING,
        number=306946058,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    resource_group_reference_resource = proto.Field(
        proto.MESSAGE,
        number=112951123,
        message="ResourceGroupReference",
    )


class GetHealthTargetPoolRequest(proto.Message):
    r"""A request message for TargetPools.GetHealth. See the method
    description for details.

    Attributes:
        instance_reference_resource (google.cloud.compute_v1.types.InstanceReference):
            The body resource for this request
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        target_pool (str):
            Name of the TargetPool resource to which the
            queried instance belongs.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_reference_resource = proto.Field(
        proto.MESSAGE,
        number=292926060,
        message="InstanceReference",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    target_pool = proto.Field(
        proto.STRING,
        number=62796298,
    )


class GetIamPolicyDiskRequest(proto.Message):
    r"""A request message for Disks.GetIamPolicy. See the method
    description for details.

    Attributes:
        options_requested_policy_version (int):
            Requested IAM Policy version.

            This field is a member of `oneof`_ ``_options_requested_policy_version``.
        project (str):
            Project ID for this request.
        resource (str):
            Name or id of the resource for this request.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    options_requested_policy_version = proto.Field(
        proto.INT32,
        number=499220029,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class GetIamPolicyFirewallPolicyRequest(proto.Message):
    r"""A request message for FirewallPolicies.GetIamPolicy. See the
    method description for details.

    Attributes:
        options_requested_policy_version (int):
            Requested IAM Policy version.

            This field is a member of `oneof`_ ``_options_requested_policy_version``.
        resource (str):
            Name or id of the resource for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    options_requested_policy_version = proto.Field(
        proto.INT32,
        number=499220029,
        optional=True,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )


class GetIamPolicyImageRequest(proto.Message):
    r"""A request message for Images.GetIamPolicy. See the method
    description for details.

    Attributes:
        options_requested_policy_version (int):
            Requested IAM Policy version.

            This field is a member of `oneof`_ ``_options_requested_policy_version``.
        project (str):
            Project ID for this request.
        resource (str):
            Name or id of the resource for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    options_requested_policy_version = proto.Field(
        proto.INT32,
        number=499220029,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )


class GetIamPolicyInstanceRequest(proto.Message):
    r"""A request message for Instances.GetIamPolicy. See the method
    description for details.

    Attributes:
        options_requested_policy_version (int):
            Requested IAM Policy version.

            This field is a member of `oneof`_ ``_options_requested_policy_version``.
        project (str):
            Project ID for this request.
        resource (str):
            Name or id of the resource for this request.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    options_requested_policy_version = proto.Field(
        proto.INT32,
        number=499220029,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class GetIamPolicyInstanceTemplateRequest(proto.Message):
    r"""A request message for InstanceTemplates.GetIamPolicy. See the
    method description for details.

    Attributes:
        options_requested_policy_version (int):
            Requested IAM Policy version.

            This field is a member of `oneof`_ ``_options_requested_policy_version``.
        project (str):
            Project ID for this request.
        resource (str):
            Name or id of the resource for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    options_requested_policy_version = proto.Field(
        proto.INT32,
        number=499220029,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )


class GetIamPolicyLicenseRequest(proto.Message):
    r"""A request message for Licenses.GetIamPolicy. See the method
    description for details.

    Attributes:
        options_requested_policy_version (int):
            Requested IAM Policy version.

            This field is a member of `oneof`_ ``_options_requested_policy_version``.
        project (str):
            Project ID for this request.
        resource (str):
            Name or id of the resource for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    options_requested_policy_version = proto.Field(
        proto.INT32,
        number=499220029,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )


class GetIamPolicyMachineImageRequest(proto.Message):
    r"""A request message for MachineImages.GetIamPolicy. See the
    method description for details.

    Attributes:
        options_requested_policy_version (int):
            Requested IAM Policy version.

            This field is a member of `oneof`_ ``_options_requested_policy_version``.
        project (str):
            Project ID for this request.
        resource (str):
            Name or id of the resource for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    options_requested_policy_version = proto.Field(
        proto.INT32,
        number=499220029,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )


class GetIamPolicyNetworkFirewallPolicyRequest(proto.Message):
    r"""A request message for NetworkFirewallPolicies.GetIamPolicy.
    See the method description for details.

    Attributes:
        options_requested_policy_version (int):
            Requested IAM Policy version.

            This field is a member of `oneof`_ ``_options_requested_policy_version``.
        project (str):
            Project ID for this request.
        resource (str):
            Name or id of the resource for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    options_requested_policy_version = proto.Field(
        proto.INT32,
        number=499220029,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )


class GetIamPolicyNodeGroupRequest(proto.Message):
    r"""A request message for NodeGroups.GetIamPolicy. See the method
    description for details.

    Attributes:
        options_requested_policy_version (int):
            Requested IAM Policy version.

            This field is a member of `oneof`_ ``_options_requested_policy_version``.
        project (str):
            Project ID for this request.
        resource (str):
            Name or id of the resource for this request.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    options_requested_policy_version = proto.Field(
        proto.INT32,
        number=499220029,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class GetIamPolicyNodeTemplateRequest(proto.Message):
    r"""A request message for NodeTemplates.GetIamPolicy. See the
    method description for details.

    Attributes:
        options_requested_policy_version (int):
            Requested IAM Policy version.

            This field is a member of `oneof`_ ``_options_requested_policy_version``.
        project (str):
            Project ID for this request.
        region (str):
            The name of the region for this request.
        resource (str):
            Name or id of the resource for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    options_requested_policy_version = proto.Field(
        proto.INT32,
        number=499220029,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )


class GetIamPolicyRegionDiskRequest(proto.Message):
    r"""A request message for RegionDisks.GetIamPolicy. See the
    method description for details.

    Attributes:
        options_requested_policy_version (int):
            Requested IAM Policy version.

            This field is a member of `oneof`_ ``_options_requested_policy_version``.
        project (str):
            Project ID for this request.
        region (str):
            The name of the region for this request.
        resource (str):
            Name or id of the resource for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    options_requested_policy_version = proto.Field(
        proto.INT32,
        number=499220029,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )


class GetIamPolicyRegionNetworkFirewallPolicyRequest(proto.Message):
    r"""A request message for
    RegionNetworkFirewallPolicies.GetIamPolicy. See the method
    description for details.

    Attributes:
        options_requested_policy_version (int):
            Requested IAM Policy version.

            This field is a member of `oneof`_ ``_options_requested_policy_version``.
        project (str):
            Project ID for this request.
        region (str):
            The name of the region for this request.
        resource (str):
            Name or id of the resource for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    options_requested_policy_version = proto.Field(
        proto.INT32,
        number=499220029,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )


class GetIamPolicyReservationRequest(proto.Message):
    r"""A request message for Reservations.GetIamPolicy. See the
    method description for details.

    Attributes:
        options_requested_policy_version (int):
            Requested IAM Policy version.

            This field is a member of `oneof`_ ``_options_requested_policy_version``.
        project (str):
            Project ID for this request.
        resource (str):
            Name or id of the resource for this request.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    options_requested_policy_version = proto.Field(
        proto.INT32,
        number=499220029,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class GetIamPolicyResourcePolicyRequest(proto.Message):
    r"""A request message for ResourcePolicies.GetIamPolicy. See the
    method description for details.

    Attributes:
        options_requested_policy_version (int):
            Requested IAM Policy version.

            This field is a member of `oneof`_ ``_options_requested_policy_version``.
        project (str):
            Project ID for this request.
        region (str):
            The name of the region for this request.
        resource (str):
            Name or id of the resource for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    options_requested_policy_version = proto.Field(
        proto.INT32,
        number=499220029,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )


class GetIamPolicyServiceAttachmentRequest(proto.Message):
    r"""A request message for ServiceAttachments.GetIamPolicy. See
    the method description for details.

    Attributes:
        options_requested_policy_version (int):
            Requested IAM Policy version.

            This field is a member of `oneof`_ ``_options_requested_policy_version``.
        project (str):
            Project ID for this request.
        region (str):
            The name of the region for this request.
        resource (str):
            Name or id of the resource for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    options_requested_policy_version = proto.Field(
        proto.INT32,
        number=499220029,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )


class GetIamPolicySnapshotRequest(proto.Message):
    r"""A request message for Snapshots.GetIamPolicy. See the method
    description for details.

    Attributes:
        options_requested_policy_version (int):
            Requested IAM Policy version.

            This field is a member of `oneof`_ ``_options_requested_policy_version``.
        project (str):
            Project ID for this request.
        resource (str):
            Name or id of the resource for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    options_requested_policy_version = proto.Field(
        proto.INT32,
        number=499220029,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )


class GetIamPolicySubnetworkRequest(proto.Message):
    r"""A request message for Subnetworks.GetIamPolicy. See the
    method description for details.

    Attributes:
        options_requested_policy_version (int):
            Requested IAM Policy version.

            This field is a member of `oneof`_ ``_options_requested_policy_version``.
        project (str):
            Project ID for this request.
        region (str):
            The name of the region for this request.
        resource (str):
            Name or id of the resource for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    options_requested_policy_version = proto.Field(
        proto.INT32,
        number=499220029,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )


class GetImageFamilyViewRequest(proto.Message):
    r"""A request message for ImageFamilyViews.Get. See the method
    description for details.

    Attributes:
        family (str):
            Name of the image family to search for.
        project (str):
            Project ID for this request.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    family = proto.Field(
        proto.STRING,
        number=328751972,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class GetImageRequest(proto.Message):
    r"""A request message for Images.Get. See the method description
    for details.

    Attributes:
        image (str):
            Name of the image resource to return.
        project (str):
            Project ID for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    image = proto.Field(
        proto.STRING,
        number=100313435,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )


class GetInstanceGroupManagerRequest(proto.Message):
    r"""A request message for InstanceGroupManagers.Get. See the
    method description for details.

    Attributes:
        instance_group_manager (str):
            The name of the managed instance group.
        project (str):
            Project ID for this request.
        zone (str):
            The name of the zone where the managed
            instance group is located.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_group_manager = proto.Field(
        proto.STRING,
        number=249363395,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class GetInstanceGroupRequest(proto.Message):
    r"""A request message for InstanceGroups.Get. See the method
    description for details.

    Attributes:
        instance_group (str):
            The name of the instance group.
        project (str):
            Project ID for this request.
        zone (str):
            The name of the zone where the instance group
            is located.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_group = proto.Field(
        proto.STRING,
        number=81095253,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class GetInstanceRequest(proto.Message):
    r"""A request message for Instances.Get. See the method
    description for details.

    Attributes:
        instance (str):
            Name of the instance resource to return.
        project (str):
            Project ID for this request.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance = proto.Field(
        proto.STRING,
        number=18257045,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class GetInstanceTemplateRequest(proto.Message):
    r"""A request message for InstanceTemplates.Get. See the method
    description for details.

    Attributes:
        instance_template (str):
            The name of the instance template.
        project (str):
            Project ID for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_template = proto.Field(
        proto.STRING,
        number=309248228,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )


class GetInterconnectAttachmentRequest(proto.Message):
    r"""A request message for InterconnectAttachments.Get. See the
    method description for details.

    Attributes:
        interconnect_attachment (str):
            Name of the interconnect attachment to
            return.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    interconnect_attachment = proto.Field(
        proto.STRING,
        number=308135284,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )


class GetInterconnectLocationRequest(proto.Message):
    r"""A request message for InterconnectLocations.Get. See the
    method description for details.

    Attributes:
        interconnect_location (str):
            Name of the interconnect location to return.
        project (str):
            Project ID for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    interconnect_location = proto.Field(
        proto.STRING,
        number=492235846,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )


class GetInterconnectRequest(proto.Message):
    r"""A request message for Interconnects.Get. See the method
    description for details.

    Attributes:
        interconnect (str):
            Name of the interconnect to return.
        project (str):
            Project ID for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    interconnect = proto.Field(
        proto.STRING,
        number=224601230,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )


class GetLicenseCodeRequest(proto.Message):
    r"""A request message for LicenseCodes.Get. See the method
    description for details.

    Attributes:
        license_code (str):
            Number corresponding to the License code
            resource to return.
        project (str):
            Project ID for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    license_code = proto.Field(
        proto.STRING,
        number=1467179,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )


class GetLicenseRequest(proto.Message):
    r"""A request message for Licenses.Get. See the method
    description for details.

    Attributes:
        license_ (str):
            Name of the License resource to return.
        project (str):
            Project ID for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    license_ = proto.Field(
        proto.STRING,
        number=166757441,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )


class GetMachineImageRequest(proto.Message):
    r"""A request message for MachineImages.Get. See the method
    description for details.

    Attributes:
        machine_image (str):
            The name of the machine image.
        project (str):
            Project ID for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    machine_image = proto.Field(
        proto.STRING,
        number=69189475,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )


class GetMachineTypeRequest(proto.Message):
    r"""A request message for MachineTypes.Get. See the method
    description for details.

    Attributes:
        machine_type (str):
            Name of the machine type to return.
        project (str):
            Project ID for this request.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    machine_type = proto.Field(
        proto.STRING,
        number=227711026,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class GetNatMappingInfoRoutersRequest(proto.Message):
    r"""A request message for Routers.GetNatMappingInfo. See the
    method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
        router (str):
            Name of the Router resource to query for Nat
            Mapping information of VM endpoints.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )
    router = proto.Field(
        proto.STRING,
        number=148608841,
    )


class GetNetworkEdgeSecurityServiceRequest(proto.Message):
    r"""A request message for NetworkEdgeSecurityServices.Get. See
    the method description for details.

    Attributes:
        network_edge_security_service (str):
            Name of the network edge security service to
            get.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    network_edge_security_service = proto.Field(
        proto.STRING,
        number=157011879,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )


class GetNetworkEndpointGroupRequest(proto.Message):
    r"""A request message for NetworkEndpointGroups.Get. See the
    method description for details.

    Attributes:
        network_endpoint_group (str):
            The name of the network endpoint group. It
            should comply with RFC1035.
        project (str):
            Project ID for this request.
        zone (str):
            The name of the zone where the network
            endpoint group is located. It should comply with
            RFC1035.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    network_endpoint_group = proto.Field(
        proto.STRING,
        number=433907078,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class GetNetworkFirewallPolicyRequest(proto.Message):
    r"""A request message for NetworkFirewallPolicies.Get. See the
    method description for details.

    Attributes:
        firewall_policy (str):
            Name of the firewall policy to get.
        project (str):
            Project ID for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    firewall_policy = proto.Field(
        proto.STRING,
        number=498173265,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )


class GetNetworkRequest(proto.Message):
    r"""A request message for Networks.Get. See the method
    description for details.

    Attributes:
        network (str):
            Name of the network to return.
        project (str):
            Project ID for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    network = proto.Field(
        proto.STRING,
        number=232872494,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )


class GetNodeGroupRequest(proto.Message):
    r"""A request message for NodeGroups.Get. See the method
    description for details.

    Attributes:
        node_group (str):
            Name of the node group to return.
        project (str):
            Project ID for this request.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    node_group = proto.Field(
        proto.STRING,
        number=469958146,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class GetNodeTemplateRequest(proto.Message):
    r"""A request message for NodeTemplates.Get. See the method
    description for details.

    Attributes:
        node_template (str):
            Name of the node template to return.
        project (str):
            Project ID for this request.
        region (str):
            The name of the region for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    node_template = proto.Field(
        proto.STRING,
        number=323154455,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )


class GetNodeTypeRequest(proto.Message):
    r"""A request message for NodeTypes.Get. See the method
    description for details.

    Attributes:
        node_type (str):
            Name of the node type to return.
        project (str):
            Project ID for this request.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    node_type = proto.Field(
        proto.STRING,
        number=465832791,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class GetPacketMirroringRequest(proto.Message):
    r"""A request message for PacketMirrorings.Get. See the method
    description for details.

    Attributes:
        packet_mirroring (str):
            Name of the PacketMirroring resource to
            return.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    packet_mirroring = proto.Field(
        proto.STRING,
        number=22305996,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )


class GetProjectRequest(proto.Message):
    r"""A request message for Projects.Get. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )


class GetPublicAdvertisedPrefixeRequest(proto.Message):
    r"""A request message for PublicAdvertisedPrefixes.Get. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        public_advertised_prefix (str):
            Name of the PublicAdvertisedPrefix resource
            to return.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    public_advertised_prefix = proto.Field(
        proto.STRING,
        number=101874590,
    )


class GetPublicDelegatedPrefixeRequest(proto.Message):
    r"""A request message for PublicDelegatedPrefixes.Get. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        public_delegated_prefix (str):
            Name of the PublicDelegatedPrefix resource to
            return.
        region (str):
            Name of the region of this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    public_delegated_prefix = proto.Field(
        proto.STRING,
        number=204238440,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )


class GetRegionAutoscalerRequest(proto.Message):
    r"""A request message for RegionAutoscalers.Get. See the method
    description for details.

    Attributes:
        autoscaler (str):
            Name of the autoscaler to return.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    autoscaler = proto.Field(
        proto.STRING,
        number=517258967,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )


class GetRegionBackendServiceRequest(proto.Message):
    r"""A request message for RegionBackendServices.Get. See the
    method description for details.

    Attributes:
        backend_service (str):
            Name of the BackendService resource to
            return.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    backend_service = proto.Field(
        proto.STRING,
        number=306946058,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )


class GetRegionCommitmentRequest(proto.Message):
    r"""A request message for RegionCommitments.Get. See the method
    description for details.

    Attributes:
        commitment (str):
            Name of the commitment to return.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    commitment = proto.Field(
        proto.STRING,
        number=482134805,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )


class GetRegionDiskRequest(proto.Message):
    r"""A request message for RegionDisks.Get. See the method
    description for details.

    Attributes:
        disk (str):
            Name of the regional persistent disk to
            return.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    disk = proto.Field(
        proto.STRING,
        number=3083677,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )


class GetRegionDiskTypeRequest(proto.Message):
    r"""A request message for RegionDiskTypes.Get. See the method
    description for details.

    Attributes:
        disk_type (str):
            Name of the disk type to return.
        project (str):
            Project ID for this request.
        region (str):
            The name of the region for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    disk_type = proto.Field(
        proto.STRING,
        number=93009052,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )


class GetRegionHealthCheckRequest(proto.Message):
    r"""A request message for RegionHealthChecks.Get. See the method
    description for details.

    Attributes:
        health_check (str):
            Name of the HealthCheck resource to return.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    health_check = proto.Field(
        proto.STRING,
        number=308876645,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )


class GetRegionHealthCheckServiceRequest(proto.Message):
    r"""A request message for RegionHealthCheckServices.Get. See the
    method description for details.

    Attributes:
        health_check_service (str):
            Name of the HealthCheckService to update. The
            name must be 1-63 characters long, and comply
            with RFC1035.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    health_check_service = proto.Field(
        proto.STRING,
        number=408374747,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )


class GetRegionInstanceGroupManagerRequest(proto.Message):
    r"""A request message for RegionInstanceGroupManagers.Get. See
    the method description for details.

    Attributes:
        instance_group_manager (str):
            Name of the managed instance group to return.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_group_manager = proto.Field(
        proto.STRING,
        number=249363395,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )


class GetRegionInstanceGroupRequest(proto.Message):
    r"""A request message for RegionInstanceGroups.Get. See the
    method description for details.

    Attributes:
        instance_group (str):
            Name of the instance group resource to
            return.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_group = proto.Field(
        proto.STRING,
        number=81095253,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )


class GetRegionNetworkEndpointGroupRequest(proto.Message):
    r"""A request message for RegionNetworkEndpointGroups.Get. See
    the method description for details.

    Attributes:
        network_endpoint_group (str):
            The name of the network endpoint group. It
            should comply with RFC1035.
        project (str):
            Project ID for this request.
        region (str):
            The name of the region where the network
            endpoint group is located. It should comply with
            RFC1035.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    network_endpoint_group = proto.Field(
        proto.STRING,
        number=433907078,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )


class GetRegionNetworkFirewallPolicyRequest(proto.Message):
    r"""A request message for RegionNetworkFirewallPolicies.Get. See
    the method description for details.

    Attributes:
        firewall_policy (str):
            Name of the firewall policy to get.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    firewall_policy = proto.Field(
        proto.STRING,
        number=498173265,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )


class GetRegionNotificationEndpointRequest(proto.Message):
    r"""A request message for RegionNotificationEndpoints.Get. See
    the method description for details.

    Attributes:
        notification_endpoint (str):
            Name of the NotificationEndpoint resource to
            return.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    notification_endpoint = proto.Field(
        proto.STRING,
        number=376807017,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )


class GetRegionOperationRequest(proto.Message):
    r"""A request message for RegionOperations.Get. See the method
    description for details.

    Attributes:
        operation (str):
            Name of the Operations resource to return.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    operation = proto.Field(
        proto.STRING,
        number=52090215,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )


class GetRegionRequest(proto.Message):
    r"""A request message for Regions.Get. See the method description
    for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region resource to return.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )


class GetRegionSecurityPolicyRequest(proto.Message):
    r"""A request message for RegionSecurityPolicies.Get. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        security_policy (str):
            Name of the security policy to get.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    security_policy = proto.Field(
        proto.STRING,
        number=171082513,
    )


class GetRegionSslCertificateRequest(proto.Message):
    r"""A request message for RegionSslCertificates.Get. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        ssl_certificate (str):
            Name of the SslCertificate resource to
            return.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    ssl_certificate = proto.Field(
        proto.STRING,
        number=46443492,
    )


class GetRegionTargetHttpProxyRequest(proto.Message):
    r"""A request message for RegionTargetHttpProxies.Get. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        target_http_proxy (str):
            Name of the TargetHttpProxy resource to
            return.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    target_http_proxy = proto.Field(
        proto.STRING,
        number=206872421,
    )


class GetRegionTargetHttpsProxyRequest(proto.Message):
    r"""A request message for RegionTargetHttpsProxies.Get. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        target_https_proxy (str):
            Name of the TargetHttpsProxy resource to
            return.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    target_https_proxy = proto.Field(
        proto.STRING,
        number=52336748,
    )


class GetRegionUrlMapRequest(proto.Message):
    r"""A request message for RegionUrlMaps.Get. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        url_map (str):
            Name of the UrlMap resource to return.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    url_map = proto.Field(
        proto.STRING,
        number=367020684,
    )


class GetReservationRequest(proto.Message):
    r"""A request message for Reservations.Get. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        reservation (str):
            Name of the reservation to retrieve.
        zone (str):
            Name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    reservation = proto.Field(
        proto.STRING,
        number=47530956,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class GetResourcePolicyRequest(proto.Message):
    r"""A request message for ResourcePolicies.Get. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        resource_policy (str):
            Name of the resource policy to retrieve.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    resource_policy = proto.Field(
        proto.STRING,
        number=159240835,
    )


class GetRouteRequest(proto.Message):
    r"""A request message for Routes.Get. See the method description
    for details.

    Attributes:
        project (str):
            Project ID for this request.
        route (str):
            Name of the Route resource to return.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    route = proto.Field(
        proto.STRING,
        number=108704329,
    )


class GetRouterRequest(proto.Message):
    r"""A request message for Routers.Get. See the method description
    for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        router (str):
            Name of the Router resource to return.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    router = proto.Field(
        proto.STRING,
        number=148608841,
    )


class GetRouterStatusRouterRequest(proto.Message):
    r"""A request message for Routers.GetRouterStatus. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        router (str):
            Name of the Router resource to query.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    router = proto.Field(
        proto.STRING,
        number=148608841,
    )


class GetRuleFirewallPolicyRequest(proto.Message):
    r"""A request message for FirewallPolicies.GetRule. See the
    method description for details.

    Attributes:
        firewall_policy (str):
            Name of the firewall policy to which the
            queried rule belongs.
        priority (int):
            The priority of the rule to get from the
            firewall policy.

            This field is a member of `oneof`_ ``_priority``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    firewall_policy = proto.Field(
        proto.STRING,
        number=498173265,
    )
    priority = proto.Field(
        proto.INT32,
        number=445151652,
        optional=True,
    )


class GetRuleNetworkFirewallPolicyRequest(proto.Message):
    r"""A request message for NetworkFirewallPolicies.GetRule. See
    the method description for details.

    Attributes:
        firewall_policy (str):
            Name of the firewall policy to which the
            queried rule belongs.
        priority (int):
            The priority of the rule to get from the
            firewall policy.

            This field is a member of `oneof`_ ``_priority``.
        project (str):
            Project ID for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    firewall_policy = proto.Field(
        proto.STRING,
        number=498173265,
    )
    priority = proto.Field(
        proto.INT32,
        number=445151652,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )


class GetRuleRegionNetworkFirewallPolicyRequest(proto.Message):
    r"""A request message for RegionNetworkFirewallPolicies.GetRule.
    See the method description for details.

    Attributes:
        firewall_policy (str):
            Name of the firewall policy to which the
            queried rule belongs.
        priority (int):
            The priority of the rule to get from the
            firewall policy.

            This field is a member of `oneof`_ ``_priority``.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    firewall_policy = proto.Field(
        proto.STRING,
        number=498173265,
    )
    priority = proto.Field(
        proto.INT32,
        number=445151652,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )


class GetRuleSecurityPolicyRequest(proto.Message):
    r"""A request message for SecurityPolicies.GetRule. See the
    method description for details.

    Attributes:
        priority (int):
            The priority of the rule to get from the
            security policy.

            This field is a member of `oneof`_ ``_priority``.
        project (str):
            Project ID for this request.
        security_policy (str):
            Name of the security policy to which the
            queried rule belongs.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    priority = proto.Field(
        proto.INT32,
        number=445151652,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    security_policy = proto.Field(
        proto.STRING,
        number=171082513,
    )


class GetScreenshotInstanceRequest(proto.Message):
    r"""A request message for Instances.GetScreenshot. See the method
    description for details.

    Attributes:
        instance (str):
            Name of the instance scoping this request.
        project (str):
            Project ID for this request.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance = proto.Field(
        proto.STRING,
        number=18257045,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class GetSecurityPolicyRequest(proto.Message):
    r"""A request message for SecurityPolicies.Get. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        security_policy (str):
            Name of the security policy to get.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    security_policy = proto.Field(
        proto.STRING,
        number=171082513,
    )


class GetSerialPortOutputInstanceRequest(proto.Message):
    r"""A request message for Instances.GetSerialPortOutput. See the
    method description for details.

    Attributes:
        instance (str):
            Name of the instance for this request.
        port (int):
            Specifies which COM or serial port to
            retrieve data from.

            This field is a member of `oneof`_ ``_port``.
        project (str):
            Project ID for this request.
        start (int):
            Specifies the starting byte position of the output to
            return. To start with the first byte of output to the
            specified port, omit this field or set it to ``0``. If the
            output for that byte position is available, this field
            matches the ``start`` parameter sent with the request. If
            the amount of serial console output exceeds the size of the
            buffer (1 MB), the oldest output is discarded and is no
            longer available. If the requested start position refers to
            discarded output, the start position is adjusted to the
            oldest output still available, and the adjusted start
            position is returned as the ``start`` property value. You
            can also provide a negative start position, which translates
            to the most recent number of bytes written to the serial
            port. For example, -3 is interpreted as the most recent 3
            bytes written to the serial console.

            This field is a member of `oneof`_ ``_start``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance = proto.Field(
        proto.STRING,
        number=18257045,
    )
    port = proto.Field(
        proto.INT32,
        number=3446913,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    start = proto.Field(
        proto.INT64,
        number=109757538,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class GetServiceAttachmentRequest(proto.Message):
    r"""A request message for ServiceAttachments.Get. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region of this request.
        service_attachment (str):
            Name of the ServiceAttachment resource to
            return.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    service_attachment = proto.Field(
        proto.STRING,
        number=338957549,
    )


class GetShieldedInstanceIdentityInstanceRequest(proto.Message):
    r"""A request message for Instances.GetShieldedInstanceIdentity.
    See the method description for details.

    Attributes:
        instance (str):
            Name or id of the instance scoping this
            request.
        project (str):
            Project ID for this request.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance = proto.Field(
        proto.STRING,
        number=18257045,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class GetSnapshotRequest(proto.Message):
    r"""A request message for Snapshots.Get. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        snapshot (str):
            Name of the Snapshot resource to return.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    snapshot = proto.Field(
        proto.STRING,
        number=284874180,
    )


class GetSslCertificateRequest(proto.Message):
    r"""A request message for SslCertificates.Get. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        ssl_certificate (str):
            Name of the SslCertificate resource to
            return.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    ssl_certificate = proto.Field(
        proto.STRING,
        number=46443492,
    )


class GetSslPolicyRequest(proto.Message):
    r"""A request message for SslPolicies.Get. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        ssl_policy (str):
            Name of the SSL policy to update. The name
            must be 1-63 characters long, and comply with
            RFC1035.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    ssl_policy = proto.Field(
        proto.STRING,
        number=295190213,
    )


class GetStatusVpnGatewayRequest(proto.Message):
    r"""A request message for VpnGateways.GetStatus. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        vpn_gateway (str):
            Name of the VPN gateway to return.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    vpn_gateway = proto.Field(
        proto.STRING,
        number=406684153,
    )


class GetSubnetworkRequest(proto.Message):
    r"""A request message for Subnetworks.Get. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        subnetwork (str):
            Name of the Subnetwork resource to return.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    subnetwork = proto.Field(
        proto.STRING,
        number=307827694,
    )


class GetTargetGrpcProxyRequest(proto.Message):
    r"""A request message for TargetGrpcProxies.Get. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        target_grpc_proxy (str):
            Name of the TargetGrpcProxy resource to
            return.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    target_grpc_proxy = proto.Field(
        proto.STRING,
        number=5020283,
    )


class GetTargetHttpProxyRequest(proto.Message):
    r"""A request message for TargetHttpProxies.Get. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        target_http_proxy (str):
            Name of the TargetHttpProxy resource to
            return.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    target_http_proxy = proto.Field(
        proto.STRING,
        number=206872421,
    )


class GetTargetHttpsProxyRequest(proto.Message):
    r"""A request message for TargetHttpsProxies.Get. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        target_https_proxy (str):
            Name of the TargetHttpsProxy resource to
            return.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    target_https_proxy = proto.Field(
        proto.STRING,
        number=52336748,
    )


class GetTargetInstanceRequest(proto.Message):
    r"""A request message for TargetInstances.Get. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        target_instance (str):
            Name of the TargetInstance resource to
            return.
        zone (str):
            Name of the zone scoping this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    target_instance = proto.Field(
        proto.STRING,
        number=289769347,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class GetTargetPoolRequest(proto.Message):
    r"""A request message for TargetPools.Get. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        target_pool (str):
            Name of the TargetPool resource to return.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    target_pool = proto.Field(
        proto.STRING,
        number=62796298,
    )


class GetTargetSslProxyRequest(proto.Message):
    r"""A request message for TargetSslProxies.Get. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        target_ssl_proxy (str):
            Name of the TargetSslProxy resource to
            return.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    target_ssl_proxy = proto.Field(
        proto.STRING,
        number=338795853,
    )


class GetTargetTcpProxyRequest(proto.Message):
    r"""A request message for TargetTcpProxies.Get. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        target_tcp_proxy (str):
            Name of the TargetTcpProxy resource to
            return.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    target_tcp_proxy = proto.Field(
        proto.STRING,
        number=503065442,
    )


class GetTargetVpnGatewayRequest(proto.Message):
    r"""A request message for TargetVpnGateways.Get. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        target_vpn_gateway (str):
            Name of the target VPN gateway to return.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    target_vpn_gateway = proto.Field(
        proto.STRING,
        number=532512843,
    )


class GetUrlMapRequest(proto.Message):
    r"""A request message for UrlMaps.Get. See the method description
    for details.

    Attributes:
        project (str):
            Project ID for this request.
        url_map (str):
            Name of the UrlMap resource to return.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    url_map = proto.Field(
        proto.STRING,
        number=367020684,
    )


class GetVpnGatewayRequest(proto.Message):
    r"""A request message for VpnGateways.Get. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        vpn_gateway (str):
            Name of the VPN gateway to return.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    vpn_gateway = proto.Field(
        proto.STRING,
        number=406684153,
    )


class GetVpnTunnelRequest(proto.Message):
    r"""A request message for VpnTunnels.Get. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        vpn_tunnel (str):
            Name of the VpnTunnel resource to return.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    vpn_tunnel = proto.Field(
        proto.STRING,
        number=143821331,
    )


class GetXpnHostProjectRequest(proto.Message):
    r"""A request message for Projects.GetXpnHost. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )


class GetXpnResourcesProjectsRequest(proto.Message):
    r"""A request message for Projects.GetXpnResources. See the
    method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class GetZoneOperationRequest(proto.Message):
    r"""A request message for ZoneOperations.Get. See the method
    description for details.

    Attributes:
        operation (str):
            Name of the Operations resource to return.
        project (str):
            Project ID for this request.
        zone (str):
            Name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    operation = proto.Field(
        proto.STRING,
        number=52090215,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class GetZoneRequest(proto.Message):
    r"""A request message for Zones.Get. See the method description
    for details.

    Attributes:
        project (str):
            Project ID for this request.
        zone (str):
            Name of the zone resource to return.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class GlobalNetworkEndpointGroupsAttachEndpointsRequest(proto.Message):
    r"""

    Attributes:
        network_endpoints (Sequence[google.cloud.compute_v1.types.NetworkEndpoint]):
            The list of network endpoints to be attached.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    network_endpoints = proto.RepeatedField(
        proto.MESSAGE,
        number=149850285,
        message="NetworkEndpoint",
    )


class GlobalNetworkEndpointGroupsDetachEndpointsRequest(proto.Message):
    r"""

    Attributes:
        network_endpoints (Sequence[google.cloud.compute_v1.types.NetworkEndpoint]):
            The list of network endpoints to be detached.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    network_endpoints = proto.RepeatedField(
        proto.MESSAGE,
        number=149850285,
        message="NetworkEndpoint",
    )


class GlobalOrganizationSetPolicyRequest(proto.Message):
    r"""

    Attributes:
        bindings (Sequence[google.cloud.compute_v1.types.Binding]):
            Flatten Policy to create a backward
            compatible wire-format. Deprecated. Use 'policy'
            to specify bindings.
        etag (str):
            Flatten Policy to create a backward
            compatible wire-format. Deprecated. Use 'policy'
            to specify the etag.

            This field is a member of `oneof`_ ``_etag``.
        policy (google.cloud.compute_v1.types.Policy):
            REQUIRED: The complete policy to be applied
            to the 'resource'. The size of the policy is
            limited to a few 10s of KB. An empty policy is
            in general a valid policy but certain services
            (like Projects) might reject them.

            This field is a member of `oneof`_ ``_policy``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    bindings = proto.RepeatedField(
        proto.MESSAGE,
        number=403251854,
        message="Binding",
    )
    etag = proto.Field(
        proto.STRING,
        number=3123477,
        optional=True,
    )
    policy = proto.Field(
        proto.MESSAGE,
        number=91071794,
        optional=True,
        message="Policy",
    )


class GlobalSetLabelsRequest(proto.Message):
    r"""

    Attributes:
        label_fingerprint (str):
            The fingerprint of the previous set of labels
            for this resource, used to detect conflicts. The
            fingerprint is initially generated by Compute
            Engine and changes after every request to modify
            or update labels. You must always provide an
            up-to-date fingerprint hash when updating or
            changing labels, otherwise the request will fail
            with error 412 conditionNotMet. Make a get()
            request to the resource to get the latest
            fingerprint.

            This field is a member of `oneof`_ ``_label_fingerprint``.
        labels (Mapping[str, str]):
            A list of labels to apply for this resource.
            Each label must comply with the requirements for
            labels. For example, "webserver-frontend":
            "images". A label value can also be empty (e.g.
            "my-label": "").
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    label_fingerprint = proto.Field(
        proto.STRING,
        number=178124825,
        optional=True,
    )
    labels = proto.MapField(
        proto.STRING,
        proto.STRING,
        number=500195327,
    )


class GlobalSetPolicyRequest(proto.Message):
    r"""

    Attributes:
        bindings (Sequence[google.cloud.compute_v1.types.Binding]):
            Flatten Policy to create a backward
            compatible wire-format. Deprecated. Use 'policy'
            to specify bindings.
        etag (str):
            Flatten Policy to create a backward
            compatible wire-format. Deprecated. Use 'policy'
            to specify the etag.

            This field is a member of `oneof`_ ``_etag``.
        policy (google.cloud.compute_v1.types.Policy):
            REQUIRED: The complete policy to be applied
            to the 'resource'. The size of the policy is
            limited to a few 10s of KB. An empty policy is
            in general a valid policy but certain services
            (like Projects) might reject them.

            This field is a member of `oneof`_ ``_policy``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    bindings = proto.RepeatedField(
        proto.MESSAGE,
        number=403251854,
        message="Binding",
    )
    etag = proto.Field(
        proto.STRING,
        number=3123477,
        optional=True,
    )
    policy = proto.Field(
        proto.MESSAGE,
        number=91071794,
        optional=True,
        message="Policy",
    )


class InsertAddressRequest(proto.Message):
    r"""A request message for Addresses.Insert. See the method
    description for details.

    Attributes:
        address_resource (google.cloud.compute_v1.types.Address):
            The body resource for this request
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    address_resource = proto.Field(
        proto.MESSAGE,
        number=483888121,
        message="Address",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class InsertAutoscalerRequest(proto.Message):
    r"""A request message for Autoscalers.Insert. See the method
    description for details.

    Attributes:
        autoscaler_resource (google.cloud.compute_v1.types.Autoscaler):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            Name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    autoscaler_resource = proto.Field(
        proto.MESSAGE,
        number=207616118,
        message="Autoscaler",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class InsertBackendBucketRequest(proto.Message):
    r"""A request message for BackendBuckets.Insert. See the method
    description for details.

    Attributes:
        backend_bucket_resource (google.cloud.compute_v1.types.BackendBucket):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    backend_bucket_resource = proto.Field(
        proto.MESSAGE,
        number=380757784,
        message="BackendBucket",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class InsertBackendServiceRequest(proto.Message):
    r"""A request message for BackendServices.Insert. See the method
    description for details.

    Attributes:
        backend_service_resource (google.cloud.compute_v1.types.BackendService):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    backend_service_resource = proto.Field(
        proto.MESSAGE,
        number=347586723,
        message="BackendService",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class InsertDiskRequest(proto.Message):
    r"""A request message for Disks.Insert. See the method
    description for details.

    Attributes:
        disk_resource (google.cloud.compute_v1.types.Disk):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        source_image (str):
            Source image to restore onto a disk. This
            field is optional.

            This field is a member of `oneof`_ ``_source_image``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    disk_resource = proto.Field(
        proto.MESSAGE,
        number=25880688,
        message="Disk",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    source_image = proto.Field(
        proto.STRING,
        number=50443319,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class InsertExternalVpnGatewayRequest(proto.Message):
    r"""A request message for ExternalVpnGateways.Insert. See the
    method description for details.

    Attributes:
        external_vpn_gateway_resource (google.cloud.compute_v1.types.ExternalVpnGateway):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    external_vpn_gateway_resource = proto.Field(
        proto.MESSAGE,
        number=486813576,
        message="ExternalVpnGateway",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class InsertFirewallPolicyRequest(proto.Message):
    r"""A request message for FirewallPolicies.Insert. See the method
    description for details.

    Attributes:
        firewall_policy_resource (google.cloud.compute_v1.types.FirewallPolicy):
            The body resource for this request
        parent_id (str):
            Parent ID for this request. The ID can be either be
            "folders/[FOLDER_ID]" if the parent is a folder or
            "organizations/[ORGANIZATION_ID]" if the parent is an
            organization.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    firewall_policy_resource = proto.Field(
        proto.MESSAGE,
        number=495049532,
        message="FirewallPolicy",
    )
    parent_id = proto.Field(
        proto.STRING,
        number=459714768,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class InsertFirewallRequest(proto.Message):
    r"""A request message for Firewalls.Insert. See the method
    description for details.

    Attributes:
        firewall_resource (google.cloud.compute_v1.types.Firewall):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    firewall_resource = proto.Field(
        proto.MESSAGE,
        number=41425005,
        message="Firewall",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class InsertForwardingRuleRequest(proto.Message):
    r"""A request message for ForwardingRules.Insert. See the method
    description for details.

    Attributes:
        forwarding_rule_resource (google.cloud.compute_v1.types.ForwardingRule):
            The body resource for this request
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    forwarding_rule_resource = proto.Field(
        proto.MESSAGE,
        number=301211695,
        message="ForwardingRule",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class InsertGlobalAddressRequest(proto.Message):
    r"""A request message for GlobalAddresses.Insert. See the method
    description for details.

    Attributes:
        address_resource (google.cloud.compute_v1.types.Address):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    address_resource = proto.Field(
        proto.MESSAGE,
        number=483888121,
        message="Address",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class InsertGlobalForwardingRuleRequest(proto.Message):
    r"""A request message for GlobalForwardingRules.Insert. See the
    method description for details.

    Attributes:
        forwarding_rule_resource (google.cloud.compute_v1.types.ForwardingRule):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    forwarding_rule_resource = proto.Field(
        proto.MESSAGE,
        number=301211695,
        message="ForwardingRule",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class InsertGlobalNetworkEndpointGroupRequest(proto.Message):
    r"""A request message for GlobalNetworkEndpointGroups.Insert. See
    the method description for details.

    Attributes:
        network_endpoint_group_resource (google.cloud.compute_v1.types.NetworkEndpointGroup):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    network_endpoint_group_resource = proto.Field(
        proto.MESSAGE,
        number=525788839,
        message="NetworkEndpointGroup",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class InsertGlobalPublicDelegatedPrefixeRequest(proto.Message):
    r"""A request message for GlobalPublicDelegatedPrefixes.Insert.
    See the method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        public_delegated_prefix_resource (google.cloud.compute_v1.types.PublicDelegatedPrefix):
            The body resource for this request
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    public_delegated_prefix_resource = proto.Field(
        proto.MESSAGE,
        number=47594501,
        message="PublicDelegatedPrefix",
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class InsertHealthCheckRequest(proto.Message):
    r"""A request message for HealthChecks.Insert. See the method
    description for details.

    Attributes:
        health_check_resource (google.cloud.compute_v1.types.HealthCheck):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    health_check_resource = proto.Field(
        proto.MESSAGE,
        number=201925032,
        message="HealthCheck",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class InsertImageRequest(proto.Message):
    r"""A request message for Images.Insert. See the method
    description for details.

    Attributes:
        force_create (bool):
            Force image creation if true.

            This field is a member of `oneof`_ ``_force_create``.
        image_resource (google.cloud.compute_v1.types.Image):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    force_create = proto.Field(
        proto.BOOL,
        number=197723344,
        optional=True,
    )
    image_resource = proto.Field(
        proto.MESSAGE,
        number=371171954,
        message="Image",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class InsertInstanceGroupManagerRequest(proto.Message):
    r"""A request message for InstanceGroupManagers.Insert. See the
    method description for details.

    Attributes:
        instance_group_manager_resource (google.cloud.compute_v1.types.InstanceGroupManager):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone where you want to create
            the managed instance group.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_group_manager_resource = proto.Field(
        proto.MESSAGE,
        number=261063946,
        message="InstanceGroupManager",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class InsertInstanceGroupRequest(proto.Message):
    r"""A request message for InstanceGroups.Insert. See the method
    description for details.

    Attributes:
        instance_group_resource (google.cloud.compute_v1.types.InstanceGroup):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone where you want to create
            the instance group.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_group_resource = proto.Field(
        proto.MESSAGE,
        number=286612152,
        message="InstanceGroup",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class InsertInstanceRequest(proto.Message):
    r"""A request message for Instances.Insert. See the method
    description for details.

    Attributes:
        instance_resource (google.cloud.compute_v1.types.Instance):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        source_instance_template (str):
            Specifies instance template to create the
            instance. This field is optional. It can be a
            full or partial URL. For example, the following
            are all valid URLs to an instance template: -
            https://www.googleapis.com/compute/v1/projects/project
            /global/instanceTemplates/instanceTemplate -
            projects/project/global/instanceTemplates/instanceTemplate
            - global/instanceTemplates/instanceTemplate

            This field is a member of `oneof`_ ``_source_instance_template``.
        source_machine_image (str):
            Specifies the machine image to use to create
            the instance. This field is optional. It can be
            a full or partial URL. For example, the
            following are all valid URLs to a machine image:
            -
            https://www.googleapis.com/compute/v1/projects/project/global/global
            /machineImages/machineImage -
            projects/project/global/global/machineImages/machineImage
            - global/machineImages/machineImage

            This field is a member of `oneof`_ ``_source_machine_image``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_resource = proto.Field(
        proto.MESSAGE,
        number=215988344,
        message="Instance",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    source_instance_template = proto.Field(
        proto.STRING,
        number=332423616,
        optional=True,
    )
    source_machine_image = proto.Field(
        proto.STRING,
        number=21769791,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class InsertInstanceTemplateRequest(proto.Message):
    r"""A request message for InstanceTemplates.Insert. See the
    method description for details.

    Attributes:
        instance_template_resource (google.cloud.compute_v1.types.InstanceTemplate):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_template_resource = proto.Field(
        proto.MESSAGE,
        number=10679561,
        message="InstanceTemplate",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class InsertInterconnectAttachmentRequest(proto.Message):
    r"""A request message for InterconnectAttachments.Insert. See the
    method description for details.

    Attributes:
        interconnect_attachment_resource (google.cloud.compute_v1.types.InterconnectAttachment):
            The body resource for this request
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        validate_only (bool):
            If true, the request will not be committed.

            This field is a member of `oneof`_ ``_validate_only``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    interconnect_attachment_resource = proto.Field(
        proto.MESSAGE,
        number=212341369,
        message="InterconnectAttachment",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    validate_only = proto.Field(
        proto.BOOL,
        number=242744629,
        optional=True,
    )


class InsertInterconnectRequest(proto.Message):
    r"""A request message for Interconnects.Insert. See the method
    description for details.

    Attributes:
        interconnect_resource (google.cloud.compute_v1.types.Interconnect):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    interconnect_resource = proto.Field(
        proto.MESSAGE,
        number=397611167,
        message="Interconnect",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class InsertLicenseRequest(proto.Message):
    r"""A request message for Licenses.Insert. See the method
    description for details.

    Attributes:
        license_resource (google.cloud.compute_v1.types.License):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    license_resource = proto.Field(
        proto.MESSAGE,
        number=437955148,
        message="License",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class InsertMachineImageRequest(proto.Message):
    r"""A request message for MachineImages.Insert. See the method
    description for details.

    Attributes:
        machine_image_resource (google.cloud.compute_v1.types.MachineImage):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        source_instance (str):
            Required. Source instance that is used to
            create the machine image from.

            This field is a member of `oneof`_ ``_source_instance``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    machine_image_resource = proto.Field(
        proto.MESSAGE,
        number=60740970,
        message="MachineImage",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    source_instance = proto.Field(
        proto.STRING,
        number=396315705,
        optional=True,
    )


class InsertNetworkEdgeSecurityServiceRequest(proto.Message):
    r"""A request message for NetworkEdgeSecurityServices.Insert. See
    the method description for details.

    Attributes:
        network_edge_security_service_resource (google.cloud.compute_v1.types.NetworkEdgeSecurityService):
            The body resource for this request
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        validate_only (bool):
            If true, the request will not be committed.

            This field is a member of `oneof`_ ``_validate_only``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    network_edge_security_service_resource = proto.Field(
        proto.MESSAGE,
        number=477548966,
        message="NetworkEdgeSecurityService",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    validate_only = proto.Field(
        proto.BOOL,
        number=242744629,
        optional=True,
    )


class InsertNetworkEndpointGroupRequest(proto.Message):
    r"""A request message for NetworkEndpointGroups.Insert. See the
    method description for details.

    Attributes:
        network_endpoint_group_resource (google.cloud.compute_v1.types.NetworkEndpointGroup):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone where you want to create
            the network endpoint group. It should comply
            with RFC1035.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    network_endpoint_group_resource = proto.Field(
        proto.MESSAGE,
        number=525788839,
        message="NetworkEndpointGroup",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class InsertNetworkFirewallPolicyRequest(proto.Message):
    r"""A request message for NetworkFirewallPolicies.Insert. See the
    method description for details.

    Attributes:
        firewall_policy_resource (google.cloud.compute_v1.types.FirewallPolicy):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    firewall_policy_resource = proto.Field(
        proto.MESSAGE,
        number=495049532,
        message="FirewallPolicy",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class InsertNetworkRequest(proto.Message):
    r"""A request message for Networks.Insert. See the method
    description for details.

    Attributes:
        network_resource (google.cloud.compute_v1.types.Network):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    network_resource = proto.Field(
        proto.MESSAGE,
        number=122105599,
        message="Network",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class InsertNodeGroupRequest(proto.Message):
    r"""A request message for NodeGroups.Insert. See the method
    description for details.

    Attributes:
        initial_node_count (int):
            Initial count of nodes in the node group.
        node_group_resource (google.cloud.compute_v1.types.NodeGroup):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    initial_node_count = proto.Field(
        proto.INT32,
        number=71951469,
    )
    node_group_resource = proto.Field(
        proto.MESSAGE,
        number=505321899,
        message="NodeGroup",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class InsertNodeTemplateRequest(proto.Message):
    r"""A request message for NodeTemplates.Insert. See the method
    description for details.

    Attributes:
        node_template_resource (google.cloud.compute_v1.types.NodeTemplate):
            The body resource for this request
        project (str):
            Project ID for this request.
        region (str):
            The name of the region for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    node_template_resource = proto.Field(
        proto.MESSAGE,
        number=127364406,
        message="NodeTemplate",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class InsertPacketMirroringRequest(proto.Message):
    r"""A request message for PacketMirrorings.Insert. See the method
    description for details.

    Attributes:
        packet_mirroring_resource (google.cloud.compute_v1.types.PacketMirroring):
            The body resource for this request
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    packet_mirroring_resource = proto.Field(
        proto.MESSAGE,
        number=493501985,
        message="PacketMirroring",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class InsertPublicAdvertisedPrefixeRequest(proto.Message):
    r"""A request message for PublicAdvertisedPrefixes.Insert. See
    the method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        public_advertised_prefix_resource (google.cloud.compute_v1.types.PublicAdvertisedPrefix):
            The body resource for this request
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    public_advertised_prefix_resource = proto.Field(
        proto.MESSAGE,
        number=233614223,
        message="PublicAdvertisedPrefix",
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class InsertPublicDelegatedPrefixeRequest(proto.Message):
    r"""A request message for PublicDelegatedPrefixes.Insert. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        public_delegated_prefix_resource (google.cloud.compute_v1.types.PublicDelegatedPrefix):
            The body resource for this request
        region (str):
            Name of the region of this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    public_delegated_prefix_resource = proto.Field(
        proto.MESSAGE,
        number=47594501,
        message="PublicDelegatedPrefix",
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class InsertRegionAutoscalerRequest(proto.Message):
    r"""A request message for RegionAutoscalers.Insert. See the
    method description for details.

    Attributes:
        autoscaler_resource (google.cloud.compute_v1.types.Autoscaler):
            The body resource for this request
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    autoscaler_resource = proto.Field(
        proto.MESSAGE,
        number=207616118,
        message="Autoscaler",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class InsertRegionBackendServiceRequest(proto.Message):
    r"""A request message for RegionBackendServices.Insert. See the
    method description for details.

    Attributes:
        backend_service_resource (google.cloud.compute_v1.types.BackendService):
            The body resource for this request
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    backend_service_resource = proto.Field(
        proto.MESSAGE,
        number=347586723,
        message="BackendService",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class InsertRegionCommitmentRequest(proto.Message):
    r"""A request message for RegionCommitments.Insert. See the
    method description for details.

    Attributes:
        commitment_resource (google.cloud.compute_v1.types.Commitment):
            The body resource for this request
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    commitment_resource = proto.Field(
        proto.MESSAGE,
        number=244240888,
        message="Commitment",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class InsertRegionDiskRequest(proto.Message):
    r"""A request message for RegionDisks.Insert. See the method
    description for details.

    Attributes:
        disk_resource (google.cloud.compute_v1.types.Disk):
            The body resource for this request
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        source_image (str):
            Source image to restore onto a disk. This
            field is optional.

            This field is a member of `oneof`_ ``_source_image``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    disk_resource = proto.Field(
        proto.MESSAGE,
        number=25880688,
        message="Disk",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    source_image = proto.Field(
        proto.STRING,
        number=50443319,
        optional=True,
    )


class InsertRegionHealthCheckRequest(proto.Message):
    r"""A request message for RegionHealthChecks.Insert. See the
    method description for details.

    Attributes:
        health_check_resource (google.cloud.compute_v1.types.HealthCheck):
            The body resource for this request
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    health_check_resource = proto.Field(
        proto.MESSAGE,
        number=201925032,
        message="HealthCheck",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class InsertRegionHealthCheckServiceRequest(proto.Message):
    r"""A request message for RegionHealthCheckServices.Insert. See
    the method description for details.

    Attributes:
        health_check_service_resource (google.cloud.compute_v1.types.HealthCheckService):
            The body resource for this request
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    health_check_service_resource = proto.Field(
        proto.MESSAGE,
        number=477367794,
        message="HealthCheckService",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class InsertRegionInstanceGroupManagerRequest(proto.Message):
    r"""A request message for RegionInstanceGroupManagers.Insert. See
    the method description for details.

    Attributes:
        instance_group_manager_resource (google.cloud.compute_v1.types.InstanceGroupManager):
            The body resource for this request
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_group_manager_resource = proto.Field(
        proto.MESSAGE,
        number=261063946,
        message="InstanceGroupManager",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class InsertRegionNetworkEndpointGroupRequest(proto.Message):
    r"""A request message for RegionNetworkEndpointGroups.Insert. See
    the method description for details.

    Attributes:
        network_endpoint_group_resource (google.cloud.compute_v1.types.NetworkEndpointGroup):
            The body resource for this request
        project (str):
            Project ID for this request.
        region (str):
            The name of the region where you want to
            create the network endpoint group. It should
            comply with RFC1035.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    network_endpoint_group_resource = proto.Field(
        proto.MESSAGE,
        number=525788839,
        message="NetworkEndpointGroup",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class InsertRegionNetworkFirewallPolicyRequest(proto.Message):
    r"""A request message for RegionNetworkFirewallPolicies.Insert.
    See the method description for details.

    Attributes:
        firewall_policy_resource (google.cloud.compute_v1.types.FirewallPolicy):
            The body resource for this request
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    firewall_policy_resource = proto.Field(
        proto.MESSAGE,
        number=495049532,
        message="FirewallPolicy",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class InsertRegionNotificationEndpointRequest(proto.Message):
    r"""A request message for RegionNotificationEndpoints.Insert. See
    the method description for details.

    Attributes:
        notification_endpoint_resource (google.cloud.compute_v1.types.NotificationEndpoint):
            The body resource for this request
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    notification_endpoint_resource = proto.Field(
        proto.MESSAGE,
        number=338459940,
        message="NotificationEndpoint",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class InsertRegionSecurityPolicyRequest(proto.Message):
    r"""A request message for RegionSecurityPolicies.Insert. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        security_policy_resource (google.cloud.compute_v1.types.SecurityPolicy):
            The body resource for this request
        validate_only (bool):
            If true, the request will not be committed.

            This field is a member of `oneof`_ ``_validate_only``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    security_policy_resource = proto.Field(
        proto.MESSAGE,
        number=216159612,
        message="SecurityPolicy",
    )
    validate_only = proto.Field(
        proto.BOOL,
        number=242744629,
        optional=True,
    )


class InsertRegionSslCertificateRequest(proto.Message):
    r"""A request message for RegionSslCertificates.Insert. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        ssl_certificate_resource (google.cloud.compute_v1.types.SslCertificate):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    ssl_certificate_resource = proto.Field(
        proto.MESSAGE,
        number=180709897,
        message="SslCertificate",
    )


class InsertRegionTargetHttpProxyRequest(proto.Message):
    r"""A request message for RegionTargetHttpProxies.Insert. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_http_proxy_resource (google.cloud.compute_v1.types.TargetHttpProxy):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_http_proxy_resource = proto.Field(
        proto.MESSAGE,
        number=24696744,
        message="TargetHttpProxy",
    )


class InsertRegionTargetHttpsProxyRequest(proto.Message):
    r"""A request message for RegionTargetHttpsProxies.Insert. See
    the method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_https_proxy_resource (google.cloud.compute_v1.types.TargetHttpsProxy):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_https_proxy_resource = proto.Field(
        proto.MESSAGE,
        number=433657473,
        message="TargetHttpsProxy",
    )


class InsertRegionUrlMapRequest(proto.Message):
    r"""A request message for RegionUrlMaps.Insert. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            begin_interface: MixerMutationRequestBuilder Request ID to
            support idempotency.

            This field is a member of `oneof`_ ``_request_id``.
        url_map_resource (google.cloud.compute_v1.types.UrlMap):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    url_map_resource = proto.Field(
        proto.MESSAGE,
        number=168675425,
        message="UrlMap",
    )


class InsertReservationRequest(proto.Message):
    r"""A request message for Reservations.Insert. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        reservation_resource (google.cloud.compute_v1.types.Reservation):
            The body resource for this request
        zone (str):
            Name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    reservation_resource = proto.Field(
        proto.MESSAGE,
        number=285030177,
        message="Reservation",
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class InsertResourcePolicyRequest(proto.Message):
    r"""A request message for ResourcePolicies.Insert. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        resource_policy_resource (google.cloud.compute_v1.types.ResourcePolicy):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    resource_policy_resource = proto.Field(
        proto.MESSAGE,
        number=76826186,
        message="ResourcePolicy",
    )


class InsertRouteRequest(proto.Message):
    r"""A request message for Routes.Insert. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        route_resource (google.cloud.compute_v1.types.Route):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    route_resource = proto.Field(
        proto.MESSAGE,
        number=225428804,
        message="Route",
    )


class InsertRouterRequest(proto.Message):
    r"""A request message for Routers.Insert. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        router_resource (google.cloud.compute_v1.types.Router):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    router_resource = proto.Field(
        proto.MESSAGE,
        number=155222084,
        message="Router",
    )


class InsertSecurityPolicyRequest(proto.Message):
    r"""A request message for SecurityPolicies.Insert. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        security_policy_resource (google.cloud.compute_v1.types.SecurityPolicy):
            The body resource for this request
        validate_only (bool):
            If true, the request will not be committed.

            This field is a member of `oneof`_ ``_validate_only``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    security_policy_resource = proto.Field(
        proto.MESSAGE,
        number=216159612,
        message="SecurityPolicy",
    )
    validate_only = proto.Field(
        proto.BOOL,
        number=242744629,
        optional=True,
    )


class InsertServiceAttachmentRequest(proto.Message):
    r"""A request message for ServiceAttachments.Insert. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region of this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        service_attachment_resource (google.cloud.compute_v1.types.ServiceAttachment):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    service_attachment_resource = proto.Field(
        proto.MESSAGE,
        number=472980256,
        message="ServiceAttachment",
    )


class InsertSnapshotRequest(proto.Message):
    r"""A request message for Snapshots.Insert. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        snapshot_resource (google.cloud.compute_v1.types.Snapshot):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    snapshot_resource = proto.Field(
        proto.MESSAGE,
        number=481319977,
        message="Snapshot",
    )


class InsertSslCertificateRequest(proto.Message):
    r"""A request message for SslCertificates.Insert. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        ssl_certificate_resource (google.cloud.compute_v1.types.SslCertificate):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    ssl_certificate_resource = proto.Field(
        proto.MESSAGE,
        number=180709897,
        message="SslCertificate",
    )


class InsertSslPolicyRequest(proto.Message):
    r"""A request message for SslPolicies.Insert. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        ssl_policy_resource (google.cloud.compute_v1.types.SslPolicy):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    ssl_policy_resource = proto.Field(
        proto.MESSAGE,
        number=274891848,
        message="SslPolicy",
    )


class InsertSubnetworkRequest(proto.Message):
    r"""A request message for Subnetworks.Insert. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        subnetwork_resource (google.cloud.compute_v1.types.Subnetwork):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    subnetwork_resource = proto.Field(
        proto.MESSAGE,
        number=42233151,
        message="Subnetwork",
    )


class InsertTargetGrpcProxyRequest(proto.Message):
    r"""A request message for TargetGrpcProxies.Insert. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_grpc_proxy_resource (google.cloud.compute_v1.types.TargetGrpcProxy):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_grpc_proxy_resource = proto.Field(
        proto.MESSAGE,
        number=328922450,
        message="TargetGrpcProxy",
    )


class InsertTargetHttpProxyRequest(proto.Message):
    r"""A request message for TargetHttpProxies.Insert. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_http_proxy_resource (google.cloud.compute_v1.types.TargetHttpProxy):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_http_proxy_resource = proto.Field(
        proto.MESSAGE,
        number=24696744,
        message="TargetHttpProxy",
    )


class InsertTargetHttpsProxyRequest(proto.Message):
    r"""A request message for TargetHttpsProxies.Insert. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_https_proxy_resource (google.cloud.compute_v1.types.TargetHttpsProxy):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_https_proxy_resource = proto.Field(
        proto.MESSAGE,
        number=433657473,
        message="TargetHttpsProxy",
    )


class InsertTargetInstanceRequest(proto.Message):
    r"""A request message for TargetInstances.Insert. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_instance_resource (google.cloud.compute_v1.types.TargetInstance):
            The body resource for this request
        zone (str):
            Name of the zone scoping this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_instance_resource = proto.Field(
        proto.MESSAGE,
        number=430453066,
        message="TargetInstance",
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class InsertTargetPoolRequest(proto.Message):
    r"""A request message for TargetPools.Insert. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_pool_resource (google.cloud.compute_v1.types.TargetPool):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_pool_resource = proto.Field(
        proto.MESSAGE,
        number=101281443,
        message="TargetPool",
    )


class InsertTargetSslProxyRequest(proto.Message):
    r"""A request message for TargetSslProxies.Insert. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_ssl_proxy_resource (google.cloud.compute_v1.types.TargetSslProxy):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_ssl_proxy_resource = proto.Field(
        proto.MESSAGE,
        number=142016192,
        message="TargetSslProxy",
    )


class InsertTargetTcpProxyRequest(proto.Message):
    r"""A request message for TargetTcpProxies.Insert. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_tcp_proxy_resource (google.cloud.compute_v1.types.TargetTcpProxy):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_tcp_proxy_resource = proto.Field(
        proto.MESSAGE,
        number=145913931,
        message="TargetTcpProxy",
    )


class InsertTargetVpnGatewayRequest(proto.Message):
    r"""A request message for TargetVpnGateways.Insert. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_vpn_gateway_resource (google.cloud.compute_v1.types.TargetVpnGateway):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_vpn_gateway_resource = proto.Field(
        proto.MESSAGE,
        number=498050,
        message="TargetVpnGateway",
    )


class InsertUrlMapRequest(proto.Message):
    r"""A request message for UrlMaps.Insert. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        url_map_resource (google.cloud.compute_v1.types.UrlMap):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    url_map_resource = proto.Field(
        proto.MESSAGE,
        number=168675425,
        message="UrlMap",
    )


class InsertVpnGatewayRequest(proto.Message):
    r"""A request message for VpnGateways.Insert. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        vpn_gateway_resource (google.cloud.compute_v1.types.VpnGateway):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    vpn_gateway_resource = proto.Field(
        proto.MESSAGE,
        number=182688660,
        message="VpnGateway",
    )


class InsertVpnTunnelRequest(proto.Message):
    r"""A request message for VpnTunnels.Insert. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        vpn_tunnel_resource (google.cloud.compute_v1.types.VpnTunnel):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    vpn_tunnel_resource = proto.Field(
        proto.MESSAGE,
        number=86839482,
        message="VpnTunnel",
    )


class InstanceGroupManagersAbandonInstancesRequest(proto.Message):
    r"""

    Attributes:
        instances (Sequence[str]):
            The URLs of one or more instances to abandon. This can be a
            full URL or a partial URL, such as
            zones/[ZONE]/instances/[INSTANCE_NAME].
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instances = proto.RepeatedField(
        proto.STRING,
        number=29097598,
    )


class InstanceGroupManagersApplyUpdatesRequest(proto.Message):
    r"""InstanceGroupManagers.applyUpdatesToInstances

    Attributes:
        all_instances (bool):
            Flag to update all instances instead of
            specified list of ���instances���. If the flag
            is set to true then the instances may not be
            specified in the request.

            This field is a member of `oneof`_ ``_all_instances``.
        instances (Sequence[str]):
            The list of URLs of one or more instances for which you want
            to apply updates. Each URL can be a full URL or a partial
            URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].
        minimal_action (str):
            The minimal action that you want to perform
            on each instance during the update: - REPLACE:
            At minimum, delete the instance and create it
            again. - RESTART: Stop the instance and start it
            again. - REFRESH: Do not stop the instance. -
            NONE: Do not disrupt the instance at all. By
            default, the minimum action is NONE. If your
            update requires a more disruptive action than
            you set with this flag, the necessary action is
            performed to execute the update. Check the
            MinimalAction enum for the list of possible
            values.

            This field is a member of `oneof`_ ``_minimal_action``.
        most_disruptive_allowed_action (str):
            The most disruptive action that you want to
            perform on each instance during the update: -
            REPLACE: Delete the instance and create it
            again. - RESTART: Stop the instance and start it
            again. - REFRESH: Do not stop the instance. -
            NONE: Do not disrupt the instance at all. By
            default, the most disruptive allowed action is
            REPLACE. If your update requires a more
            disruptive action than you set with this flag,
            the update request will fail. Check the
            MostDisruptiveAllowedAction enum for the list of
            possible values.

            This field is a member of `oneof`_ ``_most_disruptive_allowed_action``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    class MinimalAction(proto.Enum):
        r"""The minimal action that you want to perform on each instance
        during the update: - REPLACE: At minimum, delete the instance
        and create it again. - RESTART: Stop the instance and start it
        again. - REFRESH: Do not stop the instance. - NONE: Do not
        disrupt the instance at all. By default, the minimum action is
        NONE. If your update requires a more disruptive action than you
        set with this flag, the necessary action is performed to execute
        the update. Additional supported values which may be not listed
        in the enum directly due to technical reasons: NONE
        REFRESH
        REPLACE
        RESTART
        """
        __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore
        UNDEFINED_MINIMAL_ACTION = 0

    class MostDisruptiveAllowedAction(proto.Enum):
        r"""The most disruptive action that you want to perform on each
        instance during the update: - REPLACE: Delete the instance and
        create it again. - RESTART: Stop the instance and start it
        again. - REFRESH: Do not stop the instance. - NONE: Do not
        disrupt the instance at all. By default, the most disruptive
        allowed action is REPLACE. If your update requires a more
        disruptive action than you set with this flag, the update
        request will fail. Additional supported values which may be not
        listed in the enum directly due to technical reasons: NONE
        REFRESH
        REPLACE
        RESTART
        """
        __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore
        UNDEFINED_MOST_DISRUPTIVE_ALLOWED_ACTION = 0

    all_instances = proto.Field(
        proto.BOOL,
        number=403676512,
        optional=True,
    )
    instances = proto.RepeatedField(
        proto.STRING,
        number=29097598,
    )
    minimal_action = proto.Field(
        proto.STRING,
        number=270567060,
        optional=True,
    )
    most_disruptive_allowed_action = proto.Field(
        proto.STRING,
        number=66103053,
        optional=True,
    )


class InstanceGroupManagersCreateInstancesRequest(proto.Message):
    r"""InstanceGroupManagers.createInstances

    Attributes:
        instances (Sequence[google.cloud.compute_v1.types.PerInstanceConfig]):
            [Required] List of specifications of per-instance configs.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instances = proto.RepeatedField(
        proto.MESSAGE,
        number=29097598,
        message="PerInstanceConfig",
    )


class InstanceGroupManagersDeleteInstancesRequest(proto.Message):
    r"""

    Attributes:
        instances (Sequence[str]):
            The URLs of one or more instances to delete. This can be a
            full URL or a partial URL, such as
            zones/[ZONE]/instances/[INSTANCE_NAME].
        skip_instances_on_validation_error (bool):
            Specifies whether the request should proceed despite the
            inclusion of instances that are not members of the group or
            that are already in the process of being deleted or
            abandoned. If this field is set to ``false`` and such an
            instance is specified in the request, the operation fails.
            The operation always fails if the request contains a
            malformed instance URL or a reference to an instance that
            exists in a zone or region other than the group's zone or
            region.

            This field is a member of `oneof`_ ``_skip_instances_on_validation_error``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instances = proto.RepeatedField(
        proto.STRING,
        number=29097598,
    )
    skip_instances_on_validation_error = proto.Field(
        proto.BOOL,
        number=40631073,
        optional=True,
    )


class InstanceGroupManagersRecreateInstancesRequest(proto.Message):
    r"""

    Attributes:
        instances (Sequence[str]):
            The URLs of one or more instances to recreate. This can be a
            full URL or a partial URL, such as
            zones/[ZONE]/instances/[INSTANCE_NAME].
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instances = proto.RepeatedField(
        proto.STRING,
        number=29097598,
    )


class InstanceGroupManagersSetInstanceTemplateRequest(proto.Message):
    r"""

    Attributes:
        instance_template (str):
            The URL of the instance template that is
            specified for this managed instance group. The
            group uses this template to create all new
            instances in the managed instance group. The
            templates for existing instances in the group do
            not change unless you run recreateInstances, run
            applyUpdatesToInstances, or set the group's
            updatePolicy.type to PROACTIVE.

            This field is a member of `oneof`_ ``_instance_template``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_template = proto.Field(
        proto.STRING,
        number=309248228,
        optional=True,
    )


class InstanceGroupManagersSetTargetPoolsRequest(proto.Message):
    r"""

    Attributes:
        fingerprint (str):
            The fingerprint of the target pools
            information. Use this optional property to
            prevent conflicts when multiple users change the
            target pools settings concurrently. Obtain the
            fingerprint with the instanceGroupManagers.get
            method. Then, include the fingerprint in your
            request to ensure that you do not overwrite
            changes that were applied from another
            concurrent request.

            This field is a member of `oneof`_ ``_fingerprint``.
        target_pools (Sequence[str]):
            The list of target pool URLs that instances
            in this managed instance group belong to. The
            managed instance group applies these target
            pools to all of the instances in the group.
            Existing instances and new instances in the
            group all receive these target pool settings.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    fingerprint = proto.Field(
        proto.STRING,
        number=234678500,
        optional=True,
    )
    target_pools = proto.RepeatedField(
        proto.STRING,
        number=336072617,
    )


class InstanceGroupsAddInstancesRequest(proto.Message):
    r"""

    Attributes:
        instances (Sequence[google.cloud.compute_v1.types.InstanceReference]):
            The list of instances to add to the instance
            group.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instances = proto.RepeatedField(
        proto.MESSAGE,
        number=29097598,
        message="InstanceReference",
    )


class InstanceGroupsListInstancesRequest(proto.Message):
    r"""

    Attributes:
        instance_state (str):
            A filter for the state of the instances in
            the instance group. Valid options are ALL or
            RUNNING. If you do not specify this parameter
            the list includes all instances regardless of
            their state. Check the InstanceState enum for
            the list of possible values.

            This field is a member of `oneof`_ ``_instance_state``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    class InstanceState(proto.Enum):
        r"""A filter for the state of the instances in the instance
        group. Valid options are ALL or RUNNING. If you do not specify
        this parameter the list includes all instances regardless of
        their state.
        """
        __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore
        UNDEFINED_INSTANCE_STATE = 0
        ALL = 64897
        RUNNING = 121282975

    instance_state = proto.Field(
        proto.STRING,
        number=92223591,
        optional=True,
    )


class InstanceGroupsRemoveInstancesRequest(proto.Message):
    r"""

    Attributes:
        instances (Sequence[google.cloud.compute_v1.types.InstanceReference]):
            The list of instances to remove from the
            instance group.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instances = proto.RepeatedField(
        proto.MESSAGE,
        number=29097598,
        message="InstanceReference",
    )


class InstanceGroupsSetNamedPortsRequest(proto.Message):
    r"""

    Attributes:
        fingerprint (str):
            The fingerprint of the named ports
            information for this instance group. Use this
            optional property to prevent conflicts when
            multiple users change the named ports settings
            concurrently. Obtain the fingerprint with the
            instanceGroups.get method. Then, include the
            fingerprint in your request to ensure that you
            do not overwrite changes that were applied from
            another concurrent request. A request with an
            incorrect fingerprint will fail with error 412
            conditionNotMet.

            This field is a member of `oneof`_ ``_fingerprint``.
        named_ports (Sequence[google.cloud.compute_v1.types.NamedPort]):
            The list of named ports to set for this
            instance group.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    fingerprint = proto.Field(
        proto.STRING,
        number=234678500,
        optional=True,
    )
    named_ports = proto.RepeatedField(
        proto.MESSAGE,
        number=427598732,
        message="NamedPort",
    )


class InstanceMoveRequest(proto.Message):
    r"""

    Attributes:
        destination_zone (str):
            The URL of the destination zone to move the
            instance. This can be a full or partial URL. For
            example, the following are all valid URLs to a
            zone: -
            https://www.googleapis.com/compute/v1/projects/project/zones/zone
            - projects/project/zones/zone - zones/zone

            This field is a member of `oneof`_ ``_destination_zone``.
        target_instance (str):
            The URL of the target instance to move. This
            can be a full or partial URL. For example, the
            following are all valid URLs to an instance: -
            https://www.googleapis.com/compute/v1/projects/project/zones/zone
            /instances/instance -
            projects/project/zones/zone/instances/instance -
            zones/zone/instances/instance

            This field is a member of `oneof`_ ``_target_instance``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    destination_zone = proto.Field(
        proto.STRING,
        number=131854653,
        optional=True,
    )
    target_instance = proto.Field(
        proto.STRING,
        number=289769347,
        optional=True,
    )


class InstancesAddResourcePoliciesRequest(proto.Message):
    r"""

    Attributes:
        resource_policies (Sequence[str]):
            Resource policies to be added to this
            instance.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    resource_policies = proto.RepeatedField(
        proto.STRING,
        number=22220385,
    )


class InstancesRemoveResourcePoliciesRequest(proto.Message):
    r"""

    Attributes:
        resource_policies (Sequence[str]):
            Resource policies to be removed from this
            instance.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    resource_policies = proto.RepeatedField(
        proto.STRING,
        number=22220385,
    )


class InstancesSetLabelsRequest(proto.Message):
    r"""

    Attributes:
        label_fingerprint (str):
            Fingerprint of the previous set of labels for
            this resource, used to prevent conflicts.
            Provide the latest fingerprint value when making
            a request to add or change labels.

            This field is a member of `oneof`_ ``_label_fingerprint``.
        labels (Mapping[str, str]):

    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    label_fingerprint = proto.Field(
        proto.STRING,
        number=178124825,
        optional=True,
    )
    labels = proto.MapField(
        proto.STRING,
        proto.STRING,
        number=500195327,
    )


class InstancesSetMachineResourcesRequest(proto.Message):
    r"""

    Attributes:
        guest_accelerators (Sequence[google.cloud.compute_v1.types.AcceleratorConfig]):
            A list of the type and count of accelerator
            cards attached to the instance.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    guest_accelerators = proto.RepeatedField(
        proto.MESSAGE,
        number=463595119,
        message="AcceleratorConfig",
    )


class InstancesSetMachineTypeRequest(proto.Message):
    r"""

    Attributes:
        machine_type (str):
            Full or partial URL of the machine type
            resource. See Machine Types for a full list of
            machine types. For example:
            zones/us-central1-f/machineTypes/n1-standard-1

            This field is a member of `oneof`_ ``_machine_type``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    machine_type = proto.Field(
        proto.STRING,
        number=227711026,
        optional=True,
    )


class InstancesSetMinCpuPlatformRequest(proto.Message):
    r"""

    Attributes:
        min_cpu_platform (str):
            Minimum cpu/platform this instance should be
            started at.

            This field is a member of `oneof`_ ``_min_cpu_platform``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    min_cpu_platform = proto.Field(
        proto.STRING,
        number=242912759,
        optional=True,
    )


class InstancesSetServiceAccountRequest(proto.Message):
    r"""

    Attributes:
        email (str):
            Email address of the service account.

            This field is a member of `oneof`_ ``_email``.
        scopes (Sequence[str]):
            The list of scopes to be made available for
            this service account.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    email = proto.Field(
        proto.STRING,
        number=96619420,
        optional=True,
    )
    scopes = proto.RepeatedField(
        proto.STRING,
        number=165973151,
    )


class InstancesStartWithEncryptionKeyRequest(proto.Message):
    r"""

    Attributes:
        disks (Sequence[google.cloud.compute_v1.types.CustomerEncryptionKeyProtectedDisk]):
            Array of disks associated with this instance
            that are protected with a customer-supplied
            encryption key. In order to start the instance,
            the disk url and its corresponding key must be
            provided. If the disk is not protected with a
            customer-supplied encryption key it should not
            be specified.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    disks = proto.RepeatedField(
        proto.MESSAGE,
        number=95594102,
        message="CustomerEncryptionKeyProtectedDisk",
    )


class InvalidateCacheUrlMapRequest(proto.Message):
    r"""A request message for UrlMaps.InvalidateCache. See the method
    description for details.

    Attributes:
        cache_invalidation_rule_resource (google.cloud.compute_v1.types.CacheInvalidationRule):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        url_map (str):
            Name of the UrlMap scoping this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    cache_invalidation_rule_resource = proto.Field(
        proto.MESSAGE,
        number=312795565,
        message="CacheInvalidationRule",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    url_map = proto.Field(
        proto.STRING,
        number=367020684,
    )


class ListAcceleratorTypesRequest(proto.Message):
    r"""A request message for AcceleratorTypes.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class ListAddressesRequest(proto.Message):
    r"""A request message for Addresses.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListAssociationsFirewallPolicyRequest(proto.Message):
    r"""A request message for FirewallPolicies.ListAssociations. See
    the method description for details.

    Attributes:
        target_resource (str):
            The target resource to list associations. It
            is an organization, or a folder.

            This field is a member of `oneof`_ ``_target_resource``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    target_resource = proto.Field(
        proto.STRING,
        number=467318524,
        optional=True,
    )


class ListAutoscalersRequest(proto.Message):
    r"""A request message for Autoscalers.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
        zone (str):
            Name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class ListAvailableFeaturesSslPoliciesRequest(proto.Message):
    r"""A request message for SslPolicies.ListAvailableFeatures. See
    the method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListBackendBucketsRequest(proto.Message):
    r"""A request message for BackendBuckets.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListBackendServicesRequest(proto.Message):
    r"""A request message for BackendServices.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListDiskTypesRequest(proto.Message):
    r"""A request message for DiskTypes.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class ListDisksRequest(proto.Message):
    r"""A request message for Disks.List. See the method description
    for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class ListErrorsInstanceGroupManagersRequest(proto.Message):
    r"""A request message for InstanceGroupManagers.ListErrors. See
    the method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        instance_group_manager (str):
            The name of the managed instance group. It must be a string
            that meets the requirements in RFC1035, or an unsigned long
            integer: must match regexp pattern:
            (?:`a-z <?:[-a-z0-9]{0,61}[a-z0-9]>`__?)|1-9{0,19}.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
        zone (str):
            The name of the zone where the managed
            instance group is located. It should conform to
            RFC1035.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    instance_group_manager = proto.Field(
        proto.STRING,
        number=249363395,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class ListErrorsRegionInstanceGroupManagersRequest(proto.Message):
    r"""A request message for RegionInstanceGroupManagers.ListErrors.
    See the method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        instance_group_manager (str):
            The name of the managed instance group. It must be a string
            that meets the requirements in RFC1035, or an unsigned long
            integer: must match regexp pattern:
            (?:`a-z <?:[-a-z0-9]{0,61}[a-z0-9]>`__?)|1-9{0,19}.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request. This
            should conform to RFC1035.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    instance_group_manager = proto.Field(
        proto.STRING,
        number=249363395,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListExternalVpnGatewaysRequest(proto.Message):
    r"""A request message for ExternalVpnGateways.List. See the
    method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListFirewallPoliciesRequest(proto.Message):
    r"""A request message for FirewallPolicies.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        parent_id (str):
            Parent ID for this request.

            This field is a member of `oneof`_ ``_parent_id``.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    parent_id = proto.Field(
        proto.STRING,
        number=459714768,
        optional=True,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListFirewallsRequest(proto.Message):
    r"""A request message for Firewalls.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListForwardingRulesRequest(proto.Message):
    r"""A request message for ForwardingRules.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListGlobalAddressesRequest(proto.Message):
    r"""A request message for GlobalAddresses.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListGlobalForwardingRulesRequest(proto.Message):
    r"""A request message for GlobalForwardingRules.List. See the
    method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListGlobalNetworkEndpointGroupsRequest(proto.Message):
    r"""A request message for GlobalNetworkEndpointGroups.List. See
    the method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListGlobalOperationsRequest(proto.Message):
    r"""A request message for GlobalOperations.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListGlobalOrganizationOperationsRequest(proto.Message):
    r"""A request message for GlobalOrganizationOperations.List. See
    the method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        parent_id (str):
            Parent ID for this request.

            This field is a member of `oneof`_ ``_parent_id``.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    parent_id = proto.Field(
        proto.STRING,
        number=459714768,
        optional=True,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListGlobalPublicDelegatedPrefixesRequest(proto.Message):
    r"""A request message for GlobalPublicDelegatedPrefixes.List. See
    the method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListHealthChecksRequest(proto.Message):
    r"""A request message for HealthChecks.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListImagesRequest(proto.Message):
    r"""A request message for Images.List. See the method description
    for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListInstanceGroupManagersRequest(proto.Message):
    r"""A request message for InstanceGroupManagers.List. See the
    method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
        zone (str):
            The name of the zone where the managed
            instance group is located.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class ListInstanceGroupsRequest(proto.Message):
    r"""A request message for InstanceGroups.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
        zone (str):
            The name of the zone where the instance group
            is located.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class ListInstanceTemplatesRequest(proto.Message):
    r"""A request message for InstanceTemplates.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListInstancesInstanceGroupsRequest(proto.Message):
    r"""A request message for InstanceGroups.ListInstances. See the
    method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        instance_group (str):
            The name of the instance group from which you
            want to generate a list of included instances.
        instance_groups_list_instances_request_resource (google.cloud.compute_v1.types.InstanceGroupsListInstancesRequest):
            The body resource for this request
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
        zone (str):
            The name of the zone where the instance group
            is located.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    instance_group = proto.Field(
        proto.STRING,
        number=81095253,
    )
    instance_groups_list_instances_request_resource = proto.Field(
        proto.MESSAGE,
        number=476255263,
        message="InstanceGroupsListInstancesRequest",
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class ListInstancesRegionInstanceGroupsRequest(proto.Message):
    r"""A request message for RegionInstanceGroups.ListInstances. See
    the method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        instance_group (str):
            Name of the regional instance group for which
            we want to list the instances.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        region_instance_groups_list_instances_request_resource (google.cloud.compute_v1.types.RegionInstanceGroupsListInstancesRequest):
            The body resource for this request
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    instance_group = proto.Field(
        proto.STRING,
        number=81095253,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    region_instance_groups_list_instances_request_resource = proto.Field(
        proto.MESSAGE,
        number=48239828,
        message="RegionInstanceGroupsListInstancesRequest",
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListInstancesRequest(proto.Message):
    r"""A request message for Instances.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class ListInterconnectAttachmentsRequest(proto.Message):
    r"""A request message for InterconnectAttachments.List. See the
    method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListInterconnectLocationsRequest(proto.Message):
    r"""A request message for InterconnectLocations.List. See the
    method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListInterconnectsRequest(proto.Message):
    r"""A request message for Interconnects.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListLicensesRequest(proto.Message):
    r"""A request message for Licenses.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListMachineImagesRequest(proto.Message):
    r"""A request message for MachineImages.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListMachineTypesRequest(proto.Message):
    r"""A request message for MachineTypes.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class ListManagedInstancesInstanceGroupManagersRequest(proto.Message):
    r"""A request message for
    InstanceGroupManagers.ListManagedInstances. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        instance_group_manager (str):
            The name of the managed instance group.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
        zone (str):
            The name of the zone where the managed
            instance group is located.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    instance_group_manager = proto.Field(
        proto.STRING,
        number=249363395,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class ListManagedInstancesRegionInstanceGroupManagersRequest(proto.Message):
    r"""A request message for
    RegionInstanceGroupManagers.ListManagedInstances. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        instance_group_manager (str):
            The name of the managed instance group.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    instance_group_manager = proto.Field(
        proto.STRING,
        number=249363395,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListNetworkEndpointGroupsRequest(proto.Message):
    r"""A request message for NetworkEndpointGroups.List. See the
    method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
        zone (str):
            The name of the zone where the network
            endpoint group is located. It should comply with
            RFC1035.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class ListNetworkEndpointsGlobalNetworkEndpointGroupsRequest(proto.Message):
    r"""A request message for
    GlobalNetworkEndpointGroups.ListNetworkEndpoints. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        network_endpoint_group (str):
            The name of the network endpoint group from
            which you want to generate a list of included
            network endpoints. It should comply with
            RFC1035.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    network_endpoint_group = proto.Field(
        proto.STRING,
        number=433907078,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListNetworkEndpointsNetworkEndpointGroupsRequest(proto.Message):
    r"""A request message for
    NetworkEndpointGroups.ListNetworkEndpoints. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        network_endpoint_group (str):
            The name of the network endpoint group from
            which you want to generate a list of included
            network endpoints. It should comply with
            RFC1035.
        network_endpoint_groups_list_endpoints_request_resource (google.cloud.compute_v1.types.NetworkEndpointGroupsListEndpointsRequest):
            The body resource for this request
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
        zone (str):
            The name of the zone where the network
            endpoint group is located. It should comply with
            RFC1035.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    network_endpoint_group = proto.Field(
        proto.STRING,
        number=433907078,
    )
    network_endpoint_groups_list_endpoints_request_resource = proto.Field(
        proto.MESSAGE,
        number=59493390,
        message="NetworkEndpointGroupsListEndpointsRequest",
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class ListNetworkFirewallPoliciesRequest(proto.Message):
    r"""A request message for NetworkFirewallPolicies.List. See the
    method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListNetworksRequest(proto.Message):
    r"""A request message for Networks.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListNodeGroupsRequest(proto.Message):
    r"""A request message for NodeGroups.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class ListNodeTemplatesRequest(proto.Message):
    r"""A request message for NodeTemplates.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        region (str):
            The name of the region for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListNodeTypesRequest(proto.Message):
    r"""A request message for NodeTypes.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class ListNodesNodeGroupsRequest(proto.Message):
    r"""A request message for NodeGroups.ListNodes. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        node_group (str):
            Name of the NodeGroup resource whose nodes
            you want to list.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    node_group = proto.Field(
        proto.STRING,
        number=469958146,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class ListPacketMirroringsRequest(proto.Message):
    r"""A request message for PacketMirrorings.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListPeeringRoutesNetworksRequest(proto.Message):
    r"""A request message for Networks.ListPeeringRoutes. See the
    method description for details.

    Attributes:
        direction (str):
            The direction of the exchanged routes.
            Check the Direction enum for the list of
            possible values.

            This field is a member of `oneof`_ ``_direction``.
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        network (str):
            Name of the network for this request.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        peering_name (str):
            The response will show routes exchanged over
            the given peering connection.

            This field is a member of `oneof`_ ``_peering_name``.
        project (str):
            Project ID for this request.
        region (str):
            The region of the request. The response will
            include all subnet routes, static routes and
            dynamic routes in the region.

            This field is a member of `oneof`_ ``_region``.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    class Direction(proto.Enum):
        r"""The direction of the exchanged routes."""
        __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore
        UNDEFINED_DIRECTION = 0
        INCOMING = 338552870
        OUTGOING = 307438444

    direction = proto.Field(
        proto.STRING,
        number=111150975,
        optional=True,
    )
    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    network = proto.Field(
        proto.STRING,
        number=232872494,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    peering_name = proto.Field(
        proto.STRING,
        number=249571370,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
        optional=True,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListPerInstanceConfigsInstanceGroupManagersRequest(proto.Message):
    r"""A request message for
    InstanceGroupManagers.ListPerInstanceConfigs. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        instance_group_manager (str):
            The name of the managed instance group. It
            should conform to RFC1035.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
        zone (str):
            The name of the zone where the managed
            instance group is located. It should conform to
            RFC1035.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    instance_group_manager = proto.Field(
        proto.STRING,
        number=249363395,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class ListPerInstanceConfigsRegionInstanceGroupManagersRequest(proto.Message):
    r"""A request message for
    RegionInstanceGroupManagers.ListPerInstanceConfigs. See the
    method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        instance_group_manager (str):
            The name of the managed instance group. It
            should conform to RFC1035.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request,
            should conform to RFC1035.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    instance_group_manager = proto.Field(
        proto.STRING,
        number=249363395,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListPreconfiguredExpressionSetsSecurityPoliciesRequest(proto.Message):
    r"""A request message for
    SecurityPolicies.ListPreconfiguredExpressionSets. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListPublicAdvertisedPrefixesRequest(proto.Message):
    r"""A request message for PublicAdvertisedPrefixes.List. See the
    method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListPublicDelegatedPrefixesRequest(proto.Message):
    r"""A request message for PublicDelegatedPrefixes.List. See the
    method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region of this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListReferrersInstancesRequest(proto.Message):
    r"""A request message for Instances.ListReferrers. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        instance (str):
            Name of the target instance scoping this
            request, or '-' if the request should span over
            all instances in the container.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    instance = proto.Field(
        proto.STRING,
        number=18257045,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class ListRegionAutoscalersRequest(proto.Message):
    r"""A request message for RegionAutoscalers.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListRegionBackendServicesRequest(proto.Message):
    r"""A request message for RegionBackendServices.List. See the
    method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListRegionCommitmentsRequest(proto.Message):
    r"""A request message for RegionCommitments.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListRegionDiskTypesRequest(proto.Message):
    r"""A request message for RegionDiskTypes.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        region (str):
            The name of the region for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListRegionDisksRequest(proto.Message):
    r"""A request message for RegionDisks.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListRegionHealthCheckServicesRequest(proto.Message):
    r"""A request message for RegionHealthCheckServices.List. See the
    method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListRegionHealthChecksRequest(proto.Message):
    r"""A request message for RegionHealthChecks.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListRegionInstanceGroupManagersRequest(proto.Message):
    r"""A request message for RegionInstanceGroupManagers.List. See
    the method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListRegionInstanceGroupsRequest(proto.Message):
    r"""A request message for RegionInstanceGroups.List. See the
    method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListRegionNetworkEndpointGroupsRequest(proto.Message):
    r"""A request message for RegionNetworkEndpointGroups.List. See
    the method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        region (str):
            The name of the region where the network
            endpoint group is located. It should comply with
            RFC1035.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListRegionNetworkFirewallPoliciesRequest(proto.Message):
    r"""A request message for RegionNetworkFirewallPolicies.List. See
    the method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListRegionNotificationEndpointsRequest(proto.Message):
    r"""A request message for RegionNotificationEndpoints.List. See
    the method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListRegionOperationsRequest(proto.Message):
    r"""A request message for RegionOperations.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListRegionSecurityPoliciesRequest(proto.Message):
    r"""A request message for RegionSecurityPolicies.List. See the
    method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListRegionSslCertificatesRequest(proto.Message):
    r"""A request message for RegionSslCertificates.List. See the
    method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListRegionTargetHttpProxiesRequest(proto.Message):
    r"""A request message for RegionTargetHttpProxies.List. See the
    method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListRegionTargetHttpsProxiesRequest(proto.Message):
    r"""A request message for RegionTargetHttpsProxies.List. See the
    method description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListRegionUrlMapsRequest(proto.Message):
    r"""A request message for RegionUrlMaps.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListRegionsRequest(proto.Message):
    r"""A request message for Regions.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListReservationsRequest(proto.Message):
    r"""A request message for Reservations.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
        zone (str):
            Name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class ListResourcePoliciesRequest(proto.Message):
    r"""A request message for ResourcePolicies.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListRoutersRequest(proto.Message):
    r"""A request message for Routers.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListRoutesRequest(proto.Message):
    r"""A request message for Routes.List. See the method description
    for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListSecurityPoliciesRequest(proto.Message):
    r"""A request message for SecurityPolicies.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListServiceAttachmentsRequest(proto.Message):
    r"""A request message for ServiceAttachments.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region of this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListSnapshotsRequest(proto.Message):
    r"""A request message for Snapshots.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListSslCertificatesRequest(proto.Message):
    r"""A request message for SslCertificates.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListSslPoliciesRequest(proto.Message):
    r"""A request message for SslPolicies.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListSubnetworksRequest(proto.Message):
    r"""A request message for Subnetworks.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListTargetGrpcProxiesRequest(proto.Message):
    r"""A request message for TargetGrpcProxies.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListTargetHttpProxiesRequest(proto.Message):
    r"""A request message for TargetHttpProxies.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListTargetHttpsProxiesRequest(proto.Message):
    r"""A request message for TargetHttpsProxies.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListTargetInstancesRequest(proto.Message):
    r"""A request message for TargetInstances.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
        zone (str):
            Name of the zone scoping this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class ListTargetPoolsRequest(proto.Message):
    r"""A request message for TargetPools.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListTargetSslProxiesRequest(proto.Message):
    r"""A request message for TargetSslProxies.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListTargetTcpProxiesRequest(proto.Message):
    r"""A request message for TargetTcpProxies.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListTargetVpnGatewaysRequest(proto.Message):
    r"""A request message for TargetVpnGateways.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListUrlMapsRequest(proto.Message):
    r"""A request message for UrlMaps.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListUsableSubnetworksRequest(proto.Message):
    r"""A request message for Subnetworks.ListUsable. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListVpnGatewaysRequest(proto.Message):
    r"""A request message for VpnGateways.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListVpnTunnelsRequest(proto.Message):
    r"""A request message for VpnTunnels.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListXpnHostsProjectsRequest(proto.Message):
    r"""A request message for Projects.ListXpnHosts. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        projects_list_xpn_hosts_request_resource (google.cloud.compute_v1.types.ProjectsListXpnHostsRequest):
            The body resource for this request
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    projects_list_xpn_hosts_request_resource = proto.Field(
        proto.MESSAGE,
        number=238266391,
        message="ProjectsListXpnHostsRequest",
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class ListZoneOperationsRequest(proto.Message):
    r"""A request message for ZoneOperations.List. See the method
    description for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
        zone (str):
            Name of the zone for request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class ListZonesRequest(proto.Message):
    r"""A request message for Zones.List. See the method description
    for details.

    Attributes:
        filter (str):
            A filter expression that filters resources listed in the
            response. Most Compute resources support two types of filter
            expressions: expressions that support regular expressions
            and expressions that follow API improvement proposal
            AIP-160. If you want to use AIP-160, your expression must
            specify the field name, an operator, and the value that you
            want to use for filtering. The value must be a string, a
            number, or a boolean. The operator must be either ``=``,
            ``!=``, ``>``, ``<``, ``<=``, ``>=`` or ``:``. For example,
            if you are filtering Compute Engine instances, you can
            exclude instances named ``example-instance`` by specifying
            ``name != example-instance``. The ``:`` operator can be used
            with string fields to match substrings. For non-string
            fields it is equivalent to the ``=`` operator. The ``:*``
            comparison can be used to test whether a key has been
            defined. For example, to find all objects with ``owner``
            label use: ``labels.owner:*`` You can also filter nested
            fields. For example, you could specify
            ``scheduling.automaticRestart = false`` to include instances
            only if they are not scheduled for automatic restarts. You
            can use filtering on nested fields to filter based on
            resource labels. To filter on multiple expressions, provide
            each separate expression within parentheses. For example:
            ``(scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")``
            By default, each expression is an ``AND`` expression.
            However, you can include ``AND`` and ``OR`` expressions
            explicitly. For example:
            ``(cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true)``
            If you want to use a regular expression, use the ``eq``
            (equal) or ``ne`` (not equal) operator against a single
            un-parenthesized expression with or without quotes or
            against multiple parenthesized expressions. Examples:
            ``fieldname eq unquoted literal``
            ``fieldname eq 'single quoted literal'``
            ``fieldname eq "double quoted literal"``
            ``(fieldname1 eq literal) (fieldname2 ne "literal")`` The
            literal value is interpreted as a regular expression using
            Google RE2 library syntax. The literal value must match the
            entire field. For example, to filter for instances that do
            not end with name "instance", you would use
            ``name ne .*instance``.

            This field is a member of `oneof`_ ``_filter``.
        max_results (int):
            The maximum number of results per page that should be
            returned. If the number of available results is larger than
            ``maxResults``, Compute Engine returns a ``nextPageToken``
            that can be used to get the next page of results in
            subsequent list requests. Acceptable values are ``0`` to
            ``500``, inclusive. (Default: ``500``)

            This field is a member of `oneof`_ ``_max_results``.
        order_by (str):
            Sorts list results by a certain order. By default, results
            are returned in alphanumerical order based on the resource
            name. You can also sort results in descending order based on
            the creation timestamp using
            ``orderBy="creationTimestamp desc"``. This sorts results
            based on the ``creationTimestamp`` field in reverse
            chronological order (newest result first). Use this to sort
            resources like operations so that the newest operation is
            returned first. Currently, only sorting by ``name`` or
            ``creationTimestamp desc`` is supported.

            This field is a member of `oneof`_ ``_order_by``.
        page_token (str):
            Specifies a page token to use. Set ``pageToken`` to the
            ``nextPageToken`` returned by a previous list request to get
            the next page of results.

            This field is a member of `oneof`_ ``_page_token``.
        project (str):
            Project ID for this request.
        return_partial_success (bool):
            Opt-in for partial success behavior which
            provides partial results in case of failure. The
            default value is false.

            This field is a member of `oneof`_ ``_return_partial_success``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    filter = proto.Field(
        proto.STRING,
        number=336120696,
        optional=True,
    )
    max_results = proto.Field(
        proto.UINT32,
        number=54715419,
        optional=True,
    )
    order_by = proto.Field(
        proto.STRING,
        number=160562920,
        optional=True,
    )
    page_token = proto.Field(
        proto.STRING,
        number=19994697,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    return_partial_success = proto.Field(
        proto.BOOL,
        number=517198390,
        optional=True,
    )


class MoveDiskProjectRequest(proto.Message):
    r"""A request message for Projects.MoveDisk. See the method
    description for details.

    Attributes:
        disk_move_request_resource (google.cloud.compute_v1.types.DiskMoveRequest):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    disk_move_request_resource = proto.Field(
        proto.MESSAGE,
        number=313008458,
        message="DiskMoveRequest",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class MoveFirewallPolicyRequest(proto.Message):
    r"""A request message for FirewallPolicies.Move. See the method
    description for details.

    Attributes:
        firewall_policy (str):
            Name of the firewall policy to update.
        parent_id (str):
            The new parent of the firewall policy.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    firewall_policy = proto.Field(
        proto.STRING,
        number=498173265,
    )
    parent_id = proto.Field(
        proto.STRING,
        number=459714768,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class MoveInstanceProjectRequest(proto.Message):
    r"""A request message for Projects.MoveInstance. See the method
    description for details.

    Attributes:
        instance_move_request_resource (google.cloud.compute_v1.types.InstanceMoveRequest):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_move_request_resource = proto.Field(
        proto.MESSAGE,
        number=311664194,
        message="InstanceMoveRequest",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class NetworkEndpointGroupsAttachEndpointsRequest(proto.Message):
    r"""

    Attributes:
        network_endpoints (Sequence[google.cloud.compute_v1.types.NetworkEndpoint]):
            The list of network endpoints to be attached.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    network_endpoints = proto.RepeatedField(
        proto.MESSAGE,
        number=149850285,
        message="NetworkEndpoint",
    )


class NetworkEndpointGroupsDetachEndpointsRequest(proto.Message):
    r"""

    Attributes:
        network_endpoints (Sequence[google.cloud.compute_v1.types.NetworkEndpoint]):
            The list of network endpoints to be detached.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    network_endpoints = proto.RepeatedField(
        proto.MESSAGE,
        number=149850285,
        message="NetworkEndpoint",
    )


class NetworkEndpointGroupsListEndpointsRequest(proto.Message):
    r"""

    Attributes:
        health_status (str):
            Optional query parameter for showing the
            health status of each network endpoint. Valid
            options are SKIP or SHOW. If you don't specify
            this parameter, the health status of network
            endpoints will not be provided. Check the
            HealthStatus enum for the list of possible
            values.

            This field is a member of `oneof`_ ``_health_status``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    class HealthStatus(proto.Enum):
        r"""Optional query parameter for showing the health status of
        each network endpoint. Valid options are SKIP or SHOW. If you
        don't specify this parameter, the health status of network
        endpoints will not be provided.
        """
        __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore
        UNDEFINED_HEALTH_STATUS = 0
        SHOW = 2544381
        SKIP = 2547071

    health_status = proto.Field(
        proto.STRING,
        number=380545845,
        optional=True,
    )


class NetworksAddPeeringRequest(proto.Message):
    r"""

    Attributes:
        auto_create_routes (bool):
            This field will be deprecated soon. Use
            exchange_subnet_routes in network_peering instead. Indicates
            whether full mesh connectivity is created and managed
            automatically between peered networks. Currently this field
            should always be true since Google Compute Engine will
            automatically create and manage subnetwork routes between
            two networks when peering state is ACTIVE.

            This field is a member of `oneof`_ ``_auto_create_routes``.
        name (str):
            Name of the peering, which should conform to
            RFC1035.

            This field is a member of `oneof`_ ``_name``.
        network_peering (google.cloud.compute_v1.types.NetworkPeering):
            Network peering parameters. In order to specify route
            policies for peering using import and export custom routes,
            you must specify all peering related parameters (name, peer
            network, exchange_subnet_routes) in the network_peering
            field. The corresponding fields in NetworksAddPeeringRequest
            will be deprecated soon.

            This field is a member of `oneof`_ ``_network_peering``.
        peer_network (str):
            URL of the peer network. It can be either
            full URL or partial URL. The peer network may
            belong to a different project. If the partial
            URL does not contain project, it is assumed that
            the peer network is in the same project as the
            current network.

            This field is a member of `oneof`_ ``_peer_network``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    auto_create_routes = proto.Field(
        proto.BOOL,
        number=57454941,
        optional=True,
    )
    name = proto.Field(
        proto.STRING,
        number=3373707,
        optional=True,
    )
    network_peering = proto.Field(
        proto.MESSAGE,
        number=328926767,
        optional=True,
        message="NetworkPeering",
    )
    peer_network = proto.Field(
        proto.STRING,
        number=500625489,
        optional=True,
    )


class NetworksRemovePeeringRequest(proto.Message):
    r"""

    Attributes:
        name (str):
            Name of the peering, which should conform to
            RFC1035.

            This field is a member of `oneof`_ ``_name``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    name = proto.Field(
        proto.STRING,
        number=3373707,
        optional=True,
    )


class NetworksUpdatePeeringRequest(proto.Message):
    r"""

    Attributes:
        network_peering (google.cloud.compute_v1.types.NetworkPeering):

            This field is a member of `oneof`_ ``_network_peering``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    network_peering = proto.Field(
        proto.MESSAGE,
        number=328926767,
        optional=True,
        message="NetworkPeering",
    )


class NodeGroupsAddNodesRequest(proto.Message):
    r"""

    Attributes:
        additional_node_count (int):
            Count of additional nodes to be added to the
            node group.

            This field is a member of `oneof`_ ``_additional_node_count``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    additional_node_count = proto.Field(
        proto.INT32,
        number=134997930,
        optional=True,
    )


class NodeGroupsDeleteNodesRequest(proto.Message):
    r"""

    Attributes:
        nodes (Sequence[str]):
            Names of the nodes to delete.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    nodes = proto.RepeatedField(
        proto.STRING,
        number=104993457,
    )


class NodeGroupsSetNodeTemplateRequest(proto.Message):
    r"""

    Attributes:
        node_template (str):
            Full or partial URL of the node template
            resource to be updated for this node group.

            This field is a member of `oneof`_ ``_node_template``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    node_template = proto.Field(
        proto.STRING,
        number=323154455,
        optional=True,
    )


class PatchAutoscalerRequest(proto.Message):
    r"""A request message for Autoscalers.Patch. See the method
    description for details.

    Attributes:
        autoscaler (str):
            Name of the autoscaler to patch.

            This field is a member of `oneof`_ ``_autoscaler``.
        autoscaler_resource (google.cloud.compute_v1.types.Autoscaler):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            Name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    autoscaler = proto.Field(
        proto.STRING,
        number=517258967,
        optional=True,
    )
    autoscaler_resource = proto.Field(
        proto.MESSAGE,
        number=207616118,
        message="Autoscaler",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class PatchBackendBucketRequest(proto.Message):
    r"""A request message for BackendBuckets.Patch. See the method
    description for details.

    Attributes:
        backend_bucket (str):
            Name of the BackendBucket resource to patch.
        backend_bucket_resource (google.cloud.compute_v1.types.BackendBucket):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    backend_bucket = proto.Field(
        proto.STRING,
        number=91714037,
    )
    backend_bucket_resource = proto.Field(
        proto.MESSAGE,
        number=380757784,
        message="BackendBucket",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class PatchBackendServiceRequest(proto.Message):
    r"""A request message for BackendServices.Patch. See the method
    description for details.

    Attributes:
        backend_service (str):
            Name of the BackendService resource to patch.
        backend_service_resource (google.cloud.compute_v1.types.BackendService):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    backend_service = proto.Field(
        proto.STRING,
        number=306946058,
    )
    backend_service_resource = proto.Field(
        proto.MESSAGE,
        number=347586723,
        message="BackendService",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class PatchFirewallPolicyRequest(proto.Message):
    r"""A request message for FirewallPolicies.Patch. See the method
    description for details.

    Attributes:
        firewall_policy (str):
            Name of the firewall policy to update.
        firewall_policy_resource (google.cloud.compute_v1.types.FirewallPolicy):
            The body resource for this request
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    firewall_policy = proto.Field(
        proto.STRING,
        number=498173265,
    )
    firewall_policy_resource = proto.Field(
        proto.MESSAGE,
        number=495049532,
        message="FirewallPolicy",
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class PatchFirewallRequest(proto.Message):
    r"""A request message for Firewalls.Patch. See the method
    description for details.

    Attributes:
        firewall (str):
            Name of the firewall rule to patch.
        firewall_resource (google.cloud.compute_v1.types.Firewall):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    firewall = proto.Field(
        proto.STRING,
        number=511016192,
    )
    firewall_resource = proto.Field(
        proto.MESSAGE,
        number=41425005,
        message="Firewall",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class PatchForwardingRuleRequest(proto.Message):
    r"""A request message for ForwardingRules.Patch. See the method
    description for details.

    Attributes:
        forwarding_rule (str):
            Name of the ForwardingRule resource to patch.
        forwarding_rule_resource (google.cloud.compute_v1.types.ForwardingRule):
            The body resource for this request
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    forwarding_rule = proto.Field(
        proto.STRING,
        number=269964030,
    )
    forwarding_rule_resource = proto.Field(
        proto.MESSAGE,
        number=301211695,
        message="ForwardingRule",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class PatchGlobalForwardingRuleRequest(proto.Message):
    r"""A request message for GlobalForwardingRules.Patch. See the
    method description for details.

    Attributes:
        forwarding_rule (str):
            Name of the ForwardingRule resource to patch.
        forwarding_rule_resource (google.cloud.compute_v1.types.ForwardingRule):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    forwarding_rule = proto.Field(
        proto.STRING,
        number=269964030,
    )
    forwarding_rule_resource = proto.Field(
        proto.MESSAGE,
        number=301211695,
        message="ForwardingRule",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class PatchGlobalPublicDelegatedPrefixeRequest(proto.Message):
    r"""A request message for GlobalPublicDelegatedPrefixes.Patch.
    See the method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        public_delegated_prefix (str):
            Name of the PublicDelegatedPrefix resource to
            patch.
        public_delegated_prefix_resource (google.cloud.compute_v1.types.PublicDelegatedPrefix):
            The body resource for this request
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    public_delegated_prefix = proto.Field(
        proto.STRING,
        number=204238440,
    )
    public_delegated_prefix_resource = proto.Field(
        proto.MESSAGE,
        number=47594501,
        message="PublicDelegatedPrefix",
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class PatchHealthCheckRequest(proto.Message):
    r"""A request message for HealthChecks.Patch. See the method
    description for details.

    Attributes:
        health_check (str):
            Name of the HealthCheck resource to patch.
        health_check_resource (google.cloud.compute_v1.types.HealthCheck):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    health_check = proto.Field(
        proto.STRING,
        number=308876645,
    )
    health_check_resource = proto.Field(
        proto.MESSAGE,
        number=201925032,
        message="HealthCheck",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class PatchImageRequest(proto.Message):
    r"""A request message for Images.Patch. See the method
    description for details.

    Attributes:
        image (str):
            Name of the image resource to patch.
        image_resource (google.cloud.compute_v1.types.Image):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    image = proto.Field(
        proto.STRING,
        number=100313435,
    )
    image_resource = proto.Field(
        proto.MESSAGE,
        number=371171954,
        message="Image",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class PatchInstanceGroupManagerRequest(proto.Message):
    r"""A request message for InstanceGroupManagers.Patch. See the
    method description for details.

    Attributes:
        instance_group_manager (str):
            The name of the instance group manager.
        instance_group_manager_resource (google.cloud.compute_v1.types.InstanceGroupManager):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone where you want to create
            the managed instance group.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_group_manager = proto.Field(
        proto.STRING,
        number=249363395,
    )
    instance_group_manager_resource = proto.Field(
        proto.MESSAGE,
        number=261063946,
        message="InstanceGroupManager",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class PatchInterconnectAttachmentRequest(proto.Message):
    r"""A request message for InterconnectAttachments.Patch. See the
    method description for details.

    Attributes:
        interconnect_attachment (str):
            Name of the interconnect attachment to patch.
        interconnect_attachment_resource (google.cloud.compute_v1.types.InterconnectAttachment):
            The body resource for this request
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    interconnect_attachment = proto.Field(
        proto.STRING,
        number=308135284,
    )
    interconnect_attachment_resource = proto.Field(
        proto.MESSAGE,
        number=212341369,
        message="InterconnectAttachment",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class PatchInterconnectRequest(proto.Message):
    r"""A request message for Interconnects.Patch. See the method
    description for details.

    Attributes:
        interconnect (str):
            Name of the interconnect to update.
        interconnect_resource (google.cloud.compute_v1.types.Interconnect):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    interconnect = proto.Field(
        proto.STRING,
        number=224601230,
    )
    interconnect_resource = proto.Field(
        proto.MESSAGE,
        number=397611167,
        message="Interconnect",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class PatchNetworkEdgeSecurityServiceRequest(proto.Message):
    r"""A request message for NetworkEdgeSecurityServices.Patch. See
    the method description for details.

    Attributes:
        network_edge_security_service (str):
            Name of the network edge security service to
            update.
        network_edge_security_service_resource (google.cloud.compute_v1.types.NetworkEdgeSecurityService):
            The body resource for this request
        paths (str):

            This field is a member of `oneof`_ ``_paths``.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        update_mask (str):
            Indicates fields to be updated as part of
            this request.

            This field is a member of `oneof`_ ``_update_mask``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    network_edge_security_service = proto.Field(
        proto.STRING,
        number=157011879,
    )
    network_edge_security_service_resource = proto.Field(
        proto.MESSAGE,
        number=477548966,
        message="NetworkEdgeSecurityService",
    )
    paths = proto.Field(
        proto.STRING,
        number=106438894,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    update_mask = proto.Field(
        proto.STRING,
        number=500079778,
        optional=True,
    )


class PatchNetworkFirewallPolicyRequest(proto.Message):
    r"""A request message for NetworkFirewallPolicies.Patch. See the
    method description for details.

    Attributes:
        firewall_policy (str):
            Name of the firewall policy to update.
        firewall_policy_resource (google.cloud.compute_v1.types.FirewallPolicy):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    firewall_policy = proto.Field(
        proto.STRING,
        number=498173265,
    )
    firewall_policy_resource = proto.Field(
        proto.MESSAGE,
        number=495049532,
        message="FirewallPolicy",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class PatchNetworkRequest(proto.Message):
    r"""A request message for Networks.Patch. See the method
    description for details.

    Attributes:
        network (str):
            Name of the network to update.
        network_resource (google.cloud.compute_v1.types.Network):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    network = proto.Field(
        proto.STRING,
        number=232872494,
    )
    network_resource = proto.Field(
        proto.MESSAGE,
        number=122105599,
        message="Network",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class PatchNodeGroupRequest(proto.Message):
    r"""A request message for NodeGroups.Patch. See the method
    description for details.

    Attributes:
        node_group (str):
            Name of the NodeGroup resource to update.
        node_group_resource (google.cloud.compute_v1.types.NodeGroup):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    node_group = proto.Field(
        proto.STRING,
        number=469958146,
    )
    node_group_resource = proto.Field(
        proto.MESSAGE,
        number=505321899,
        message="NodeGroup",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class PatchPacketMirroringRequest(proto.Message):
    r"""A request message for PacketMirrorings.Patch. See the method
    description for details.

    Attributes:
        packet_mirroring (str):
            Name of the PacketMirroring resource to
            patch.
        packet_mirroring_resource (google.cloud.compute_v1.types.PacketMirroring):
            The body resource for this request
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    packet_mirroring = proto.Field(
        proto.STRING,
        number=22305996,
    )
    packet_mirroring_resource = proto.Field(
        proto.MESSAGE,
        number=493501985,
        message="PacketMirroring",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class PatchPerInstanceConfigsInstanceGroupManagerRequest(proto.Message):
    r"""A request message for
    InstanceGroupManagers.PatchPerInstanceConfigs. See the method
    description for details.

    Attributes:
        instance_group_manager (str):
            The name of the managed instance group. It
            should conform to RFC1035.
        instance_group_managers_patch_per_instance_configs_req_resource (google.cloud.compute_v1.types.InstanceGroupManagersPatchPerInstanceConfigsReq):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone where the managed
            instance group is located. It should conform to
            RFC1035.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_group_manager = proto.Field(
        proto.STRING,
        number=249363395,
    )
    instance_group_managers_patch_per_instance_configs_req_resource = proto.Field(
        proto.MESSAGE,
        number=356650495,
        message="InstanceGroupManagersPatchPerInstanceConfigsReq",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class PatchPerInstanceConfigsRegionInstanceGroupManagerRequest(proto.Message):
    r"""A request message for
    RegionInstanceGroupManagers.PatchPerInstanceConfigs. See the
    method description for details.

    Attributes:
        instance_group_manager (str):
            The name of the managed instance group. It
            should conform to RFC1035.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request,
            should conform to RFC1035.
        region_instance_group_manager_patch_instance_config_req_resource (google.cloud.compute_v1.types.RegionInstanceGroupManagerPatchInstanceConfigReq):
            The body resource for this request
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_group_manager = proto.Field(
        proto.STRING,
        number=249363395,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    region_instance_group_manager_patch_instance_config_req_resource = proto.Field(
        proto.MESSAGE,
        number=197682890,
        message="RegionInstanceGroupManagerPatchInstanceConfigReq",
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class PatchPublicAdvertisedPrefixeRequest(proto.Message):
    r"""A request message for PublicAdvertisedPrefixes.Patch. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        public_advertised_prefix (str):
            Name of the PublicAdvertisedPrefix resource
            to patch.
        public_advertised_prefix_resource (google.cloud.compute_v1.types.PublicAdvertisedPrefix):
            The body resource for this request
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    public_advertised_prefix = proto.Field(
        proto.STRING,
        number=101874590,
    )
    public_advertised_prefix_resource = proto.Field(
        proto.MESSAGE,
        number=233614223,
        message="PublicAdvertisedPrefix",
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class PatchPublicDelegatedPrefixeRequest(proto.Message):
    r"""A request message for PublicDelegatedPrefixes.Patch. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        public_delegated_prefix (str):
            Name of the PublicDelegatedPrefix resource to
            patch.
        public_delegated_prefix_resource (google.cloud.compute_v1.types.PublicDelegatedPrefix):
            The body resource for this request
        region (str):
            Name of the region for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    public_delegated_prefix = proto.Field(
        proto.STRING,
        number=204238440,
    )
    public_delegated_prefix_resource = proto.Field(
        proto.MESSAGE,
        number=47594501,
        message="PublicDelegatedPrefix",
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class PatchRegionAutoscalerRequest(proto.Message):
    r"""A request message for RegionAutoscalers.Patch. See the method
    description for details.

    Attributes:
        autoscaler (str):
            Name of the autoscaler to patch.

            This field is a member of `oneof`_ ``_autoscaler``.
        autoscaler_resource (google.cloud.compute_v1.types.Autoscaler):
            The body resource for this request
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    autoscaler = proto.Field(
        proto.STRING,
        number=517258967,
        optional=True,
    )
    autoscaler_resource = proto.Field(
        proto.MESSAGE,
        number=207616118,
        message="Autoscaler",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class PatchRegionBackendServiceRequest(proto.Message):
    r"""A request message for RegionBackendServices.Patch. See the
    method description for details.

    Attributes:
        backend_service (str):
            Name of the BackendService resource to patch.
        backend_service_resource (google.cloud.compute_v1.types.BackendService):
            The body resource for this request
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    backend_service = proto.Field(
        proto.STRING,
        number=306946058,
    )
    backend_service_resource = proto.Field(
        proto.MESSAGE,
        number=347586723,
        message="BackendService",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class PatchRegionHealthCheckRequest(proto.Message):
    r"""A request message for RegionHealthChecks.Patch. See the
    method description for details.

    Attributes:
        health_check (str):
            Name of the HealthCheck resource to patch.
        health_check_resource (google.cloud.compute_v1.types.HealthCheck):
            The body resource for this request
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    health_check = proto.Field(
        proto.STRING,
        number=308876645,
    )
    health_check_resource = proto.Field(
        proto.MESSAGE,
        number=201925032,
        message="HealthCheck",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class PatchRegionHealthCheckServiceRequest(proto.Message):
    r"""A request message for RegionHealthCheckServices.Patch. See
    the method description for details.

    Attributes:
        health_check_service (str):
            Name of the HealthCheckService to update. The
            name must be 1-63 characters long, and comply
            with RFC1035.
        health_check_service_resource (google.cloud.compute_v1.types.HealthCheckService):
            The body resource for this request
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    health_check_service = proto.Field(
        proto.STRING,
        number=408374747,
    )
    health_check_service_resource = proto.Field(
        proto.MESSAGE,
        number=477367794,
        message="HealthCheckService",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class PatchRegionInstanceGroupManagerRequest(proto.Message):
    r"""A request message for RegionInstanceGroupManagers.Patch. See
    the method description for details.

    Attributes:
        instance_group_manager (str):
            The name of the instance group manager.
        instance_group_manager_resource (google.cloud.compute_v1.types.InstanceGroupManager):
            The body resource for this request
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_group_manager = proto.Field(
        proto.STRING,
        number=249363395,
    )
    instance_group_manager_resource = proto.Field(
        proto.MESSAGE,
        number=261063946,
        message="InstanceGroupManager",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class PatchRegionNetworkFirewallPolicyRequest(proto.Message):
    r"""A request message for RegionNetworkFirewallPolicies.Patch.
    See the method description for details.

    Attributes:
        firewall_policy (str):
            Name of the firewall policy to update.
        firewall_policy_resource (google.cloud.compute_v1.types.FirewallPolicy):
            The body resource for this request
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    firewall_policy = proto.Field(
        proto.STRING,
        number=498173265,
    )
    firewall_policy_resource = proto.Field(
        proto.MESSAGE,
        number=495049532,
        message="FirewallPolicy",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class PatchRegionSecurityPolicyRequest(proto.Message):
    r"""A request message for RegionSecurityPolicies.Patch. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        security_policy (str):
            Name of the security policy to update.
        security_policy_resource (google.cloud.compute_v1.types.SecurityPolicy):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    security_policy = proto.Field(
        proto.STRING,
        number=171082513,
    )
    security_policy_resource = proto.Field(
        proto.MESSAGE,
        number=216159612,
        message="SecurityPolicy",
    )


class PatchRegionTargetHttpsProxyRequest(proto.Message):
    r"""A request message for RegionTargetHttpsProxies.Patch. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_https_proxy (str):
            Name of the TargetHttpsProxy resource to
            patch.
        target_https_proxy_resource (google.cloud.compute_v1.types.TargetHttpsProxy):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_https_proxy = proto.Field(
        proto.STRING,
        number=52336748,
    )
    target_https_proxy_resource = proto.Field(
        proto.MESSAGE,
        number=433657473,
        message="TargetHttpsProxy",
    )


class PatchRegionUrlMapRequest(proto.Message):
    r"""A request message for RegionUrlMaps.Patch. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            begin_interface: MixerMutationRequestBuilder Request ID to
            support idempotency.

            This field is a member of `oneof`_ ``_request_id``.
        url_map (str):
            Name of the UrlMap resource to patch.
        url_map_resource (google.cloud.compute_v1.types.UrlMap):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    url_map = proto.Field(
        proto.STRING,
        number=367020684,
    )
    url_map_resource = proto.Field(
        proto.MESSAGE,
        number=168675425,
        message="UrlMap",
    )


class PatchRouterRequest(proto.Message):
    r"""A request message for Routers.Patch. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        router (str):
            Name of the Router resource to patch.
        router_resource (google.cloud.compute_v1.types.Router):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    router = proto.Field(
        proto.STRING,
        number=148608841,
    )
    router_resource = proto.Field(
        proto.MESSAGE,
        number=155222084,
        message="Router",
    )


class PatchRuleFirewallPolicyRequest(proto.Message):
    r"""A request message for FirewallPolicies.PatchRule. See the
    method description for details.

    Attributes:
        firewall_policy (str):
            Name of the firewall policy to update.
        firewall_policy_rule_resource (google.cloud.compute_v1.types.FirewallPolicyRule):
            The body resource for this request
        priority (int):
            The priority of the rule to patch.

            This field is a member of `oneof`_ ``_priority``.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    firewall_policy = proto.Field(
        proto.STRING,
        number=498173265,
    )
    firewall_policy_rule_resource = proto.Field(
        proto.MESSAGE,
        number=250523523,
        message="FirewallPolicyRule",
    )
    priority = proto.Field(
        proto.INT32,
        number=445151652,
        optional=True,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class PatchRuleNetworkFirewallPolicyRequest(proto.Message):
    r"""A request message for NetworkFirewallPolicies.PatchRule. See
    the method description for details.

    Attributes:
        firewall_policy (str):
            Name of the firewall policy to update.
        firewall_policy_rule_resource (google.cloud.compute_v1.types.FirewallPolicyRule):
            The body resource for this request
        priority (int):
            The priority of the rule to patch.

            This field is a member of `oneof`_ ``_priority``.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    firewall_policy = proto.Field(
        proto.STRING,
        number=498173265,
    )
    firewall_policy_rule_resource = proto.Field(
        proto.MESSAGE,
        number=250523523,
        message="FirewallPolicyRule",
    )
    priority = proto.Field(
        proto.INT32,
        number=445151652,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class PatchRuleRegionNetworkFirewallPolicyRequest(proto.Message):
    r"""A request message for
    RegionNetworkFirewallPolicies.PatchRule. See the method
    description for details.

    Attributes:
        firewall_policy (str):
            Name of the firewall policy to update.
        firewall_policy_rule_resource (google.cloud.compute_v1.types.FirewallPolicyRule):
            The body resource for this request
        priority (int):
            The priority of the rule to patch.

            This field is a member of `oneof`_ ``_priority``.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    firewall_policy = proto.Field(
        proto.STRING,
        number=498173265,
    )
    firewall_policy_rule_resource = proto.Field(
        proto.MESSAGE,
        number=250523523,
        message="FirewallPolicyRule",
    )
    priority = proto.Field(
        proto.INT32,
        number=445151652,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class PatchRuleSecurityPolicyRequest(proto.Message):
    r"""A request message for SecurityPolicies.PatchRule. See the
    method description for details.

    Attributes:
        priority (int):
            The priority of the rule to patch.

            This field is a member of `oneof`_ ``_priority``.
        project (str):
            Project ID for this request.
        security_policy (str):
            Name of the security policy to update.
        security_policy_rule_resource (google.cloud.compute_v1.types.SecurityPolicyRule):
            The body resource for this request
        validate_only (bool):
            If true, the request will not be committed.

            This field is a member of `oneof`_ ``_validate_only``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    priority = proto.Field(
        proto.INT32,
        number=445151652,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    security_policy = proto.Field(
        proto.STRING,
        number=171082513,
    )
    security_policy_rule_resource = proto.Field(
        proto.MESSAGE,
        number=402693443,
        message="SecurityPolicyRule",
    )
    validate_only = proto.Field(
        proto.BOOL,
        number=242744629,
        optional=True,
    )


class PatchSecurityPolicyRequest(proto.Message):
    r"""A request message for SecurityPolicies.Patch. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        security_policy (str):
            Name of the security policy to update.
        security_policy_resource (google.cloud.compute_v1.types.SecurityPolicy):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    security_policy = proto.Field(
        proto.STRING,
        number=171082513,
    )
    security_policy_resource = proto.Field(
        proto.MESSAGE,
        number=216159612,
        message="SecurityPolicy",
    )


class PatchServiceAttachmentRequest(proto.Message):
    r"""A request message for ServiceAttachments.Patch. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            The region scoping this request and should
            conform to RFC1035.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        service_attachment (str):
            The resource id of the ServiceAttachment to
            patch. It should conform to RFC1035 resource
            name or be a string form on an unsigned long
            number.
        service_attachment_resource (google.cloud.compute_v1.types.ServiceAttachment):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    service_attachment = proto.Field(
        proto.STRING,
        number=338957549,
    )
    service_attachment_resource = proto.Field(
        proto.MESSAGE,
        number=472980256,
        message="ServiceAttachment",
    )


class PatchSslPolicyRequest(proto.Message):
    r"""A request message for SslPolicies.Patch. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        ssl_policy (str):
            Name of the SSL policy to update. The name
            must be 1-63 characters long, and comply with
            RFC1035.
        ssl_policy_resource (google.cloud.compute_v1.types.SslPolicy):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    ssl_policy = proto.Field(
        proto.STRING,
        number=295190213,
    )
    ssl_policy_resource = proto.Field(
        proto.MESSAGE,
        number=274891848,
        message="SslPolicy",
    )


class PatchSubnetworkRequest(proto.Message):
    r"""A request message for Subnetworks.Patch. See the method
    description for details.

    Attributes:
        drain_timeout_seconds (int):
            The drain timeout specifies the upper bound in seconds on
            the amount of time allowed to drain connections from the
            current ACTIVE subnetwork to the current BACKUP subnetwork.
            The drain timeout is only applicable when the following
            conditions are true: - the subnetwork being patched has
            purpose = INTERNAL_HTTPS_LOAD_BALANCER - the subnetwork
            being patched has role = BACKUP - the patch request is
            setting the role to ACTIVE. Note that after this patch
            operation the roles of the ACTIVE and BACKUP subnetworks
            will be swapped.

            This field is a member of `oneof`_ ``_drain_timeout_seconds``.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        subnetwork (str):
            Name of the Subnetwork resource to patch.
        subnetwork_resource (google.cloud.compute_v1.types.Subnetwork):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    drain_timeout_seconds = proto.Field(
        proto.INT32,
        number=357707098,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    subnetwork = proto.Field(
        proto.STRING,
        number=307827694,
    )
    subnetwork_resource = proto.Field(
        proto.MESSAGE,
        number=42233151,
        message="Subnetwork",
    )


class PatchTargetGrpcProxyRequest(proto.Message):
    r"""A request message for TargetGrpcProxies.Patch. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_grpc_proxy (str):
            Name of the TargetGrpcProxy resource to
            patch.
        target_grpc_proxy_resource (google.cloud.compute_v1.types.TargetGrpcProxy):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_grpc_proxy = proto.Field(
        proto.STRING,
        number=5020283,
    )
    target_grpc_proxy_resource = proto.Field(
        proto.MESSAGE,
        number=328922450,
        message="TargetGrpcProxy",
    )


class PatchTargetHttpProxyRequest(proto.Message):
    r"""A request message for TargetHttpProxies.Patch. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_http_proxy (str):
            Name of the TargetHttpProxy resource to
            patch.
        target_http_proxy_resource (google.cloud.compute_v1.types.TargetHttpProxy):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_http_proxy = proto.Field(
        proto.STRING,
        number=206872421,
    )
    target_http_proxy_resource = proto.Field(
        proto.MESSAGE,
        number=24696744,
        message="TargetHttpProxy",
    )


class PatchTargetHttpsProxyRequest(proto.Message):
    r"""A request message for TargetHttpsProxies.Patch. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_https_proxy (str):
            Name of the TargetHttpsProxy resource to
            patch.
        target_https_proxy_resource (google.cloud.compute_v1.types.TargetHttpsProxy):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_https_proxy = proto.Field(
        proto.STRING,
        number=52336748,
    )
    target_https_proxy_resource = proto.Field(
        proto.MESSAGE,
        number=433657473,
        message="TargetHttpsProxy",
    )


class PatchUrlMapRequest(proto.Message):
    r"""A request message for UrlMaps.Patch. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        url_map (str):
            Name of the UrlMap resource to patch.
        url_map_resource (google.cloud.compute_v1.types.UrlMap):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    url_map = proto.Field(
        proto.STRING,
        number=367020684,
    )
    url_map_resource = proto.Field(
        proto.MESSAGE,
        number=168675425,
        message="UrlMap",
    )


class PreviewRouterRequest(proto.Message):
    r"""A request message for Routers.Preview. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        router (str):
            Name of the Router resource to query.
        router_resource (google.cloud.compute_v1.types.Router):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    router = proto.Field(
        proto.STRING,
        number=148608841,
    )
    router_resource = proto.Field(
        proto.MESSAGE,
        number=155222084,
        message="Router",
    )


class ProjectsDisableXpnResourceRequest(proto.Message):
    r"""

    Attributes:
        xpn_resource (google.cloud.compute_v1.types.XpnResourceId):
            Service resource (a.k.a service project) ID.

            This field is a member of `oneof`_ ``_xpn_resource``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    xpn_resource = proto.Field(
        proto.MESSAGE,
        number=133384631,
        optional=True,
        message="XpnResourceId",
    )


class ProjectsEnableXpnResourceRequest(proto.Message):
    r"""

    Attributes:
        xpn_resource (google.cloud.compute_v1.types.XpnResourceId):
            Service resource (a.k.a service project) ID.

            This field is a member of `oneof`_ ``_xpn_resource``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    xpn_resource = proto.Field(
        proto.MESSAGE,
        number=133384631,
        optional=True,
        message="XpnResourceId",
    )


class ProjectsListXpnHostsRequest(proto.Message):
    r"""

    Attributes:
        organization (str):
            Optional organization ID managed by Cloud
            Resource Manager, for which to list shared VPC
            host projects. If not specified, the
            organization will be inferred from the project.

            This field is a member of `oneof`_ ``_organization``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    organization = proto.Field(
        proto.STRING,
        number=105180467,
        optional=True,
    )


class ProjectsSetDefaultNetworkTierRequest(proto.Message):
    r"""

    Attributes:
        network_tier (str):
            Default network tier to be set.
            Check the NetworkTier enum for the list of
            possible values.

            This field is a member of `oneof`_ ``_network_tier``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    class NetworkTier(proto.Enum):
        r"""Default network tier to be set."""
        __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore
        UNDEFINED_NETWORK_TIER = 0
        FIXED_STANDARD = 310464328
        PREMIUM = 399530551
        STANDARD = 484642493
        STANDARD_OVERRIDES_FIXED_STANDARD = 465847234

    network_tier = proto.Field(
        proto.STRING,
        number=517397843,
        optional=True,
    )


class RecreateInstancesInstanceGroupManagerRequest(proto.Message):
    r"""A request message for
    InstanceGroupManagers.RecreateInstances. See the method
    description for details.

    Attributes:
        instance_group_manager (str):
            The name of the managed instance group.
        instance_group_managers_recreate_instances_request_resource (google.cloud.compute_v1.types.InstanceGroupManagersRecreateInstancesRequest):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone where the managed
            instance group is located.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_group_manager = proto.Field(
        proto.STRING,
        number=249363395,
    )
    instance_group_managers_recreate_instances_request_resource = proto.Field(
        proto.MESSAGE,
        number=21405952,
        message="InstanceGroupManagersRecreateInstancesRequest",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class RecreateInstancesRegionInstanceGroupManagerRequest(proto.Message):
    r"""A request message for
    RegionInstanceGroupManagers.RecreateInstances. See the method
    description for details.

    Attributes:
        instance_group_manager (str):
            Name of the managed instance group.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        region_instance_group_managers_recreate_request_resource (google.cloud.compute_v1.types.RegionInstanceGroupManagersRecreateRequest):
            The body resource for this request
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_group_manager = proto.Field(
        proto.STRING,
        number=249363395,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    region_instance_group_managers_recreate_request_resource = proto.Field(
        proto.MESSAGE,
        number=170999316,
        message="RegionInstanceGroupManagersRecreateRequest",
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class RegionDisksAddResourcePoliciesRequest(proto.Message):
    r"""

    Attributes:
        resource_policies (Sequence[str]):
            Resource policies to be added to this disk.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    resource_policies = proto.RepeatedField(
        proto.STRING,
        number=22220385,
    )


class RegionDisksRemoveResourcePoliciesRequest(proto.Message):
    r"""

    Attributes:
        resource_policies (Sequence[str]):
            Resource policies to be removed from this
            disk.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    resource_policies = proto.RepeatedField(
        proto.STRING,
        number=22220385,
    )


class RegionDisksResizeRequest(proto.Message):
    r"""

    Attributes:
        size_gb (int):
            The new size of the regional persistent disk,
            which is specified in GB.

            This field is a member of `oneof`_ ``_size_gb``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    size_gb = proto.Field(
        proto.INT64,
        number=494929369,
        optional=True,
    )


class RegionInstanceGroupManagersAbandonInstancesRequest(proto.Message):
    r"""

    Attributes:
        instances (Sequence[str]):
            The URLs of one or more instances to abandon. This can be a
            full URL or a partial URL, such as
            zones/[ZONE]/instances/[INSTANCE_NAME].
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instances = proto.RepeatedField(
        proto.STRING,
        number=29097598,
    )


class RegionInstanceGroupManagersApplyUpdatesRequest(proto.Message):
    r"""RegionInstanceGroupManagers.applyUpdatesToInstances

    Attributes:
        all_instances (bool):
            Flag to update all instances instead of
            specified list of ���instances���. If the flag
            is set to true then the instances may not be
            specified in the request.

            This field is a member of `oneof`_ ``_all_instances``.
        instances (Sequence[str]):
            The list of URLs of one or more instances for which you want
            to apply updates. Each URL can be a full URL or a partial
            URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].
        minimal_action (str):
            The minimal action that you want to perform
            on each instance during the update: - REPLACE:
            At minimum, delete the instance and create it
            again. - RESTART: Stop the instance and start it
            again. - REFRESH: Do not stop the instance. -
            NONE: Do not disrupt the instance at all. By
            default, the minimum action is NONE. If your
            update requires a more disruptive action than
            you set with this flag, the necessary action is
            performed to execute the update. Check the
            MinimalAction enum for the list of possible
            values.

            This field is a member of `oneof`_ ``_minimal_action``.
        most_disruptive_allowed_action (str):
            The most disruptive action that you want to
            perform on each instance during the update: -
            REPLACE: Delete the instance and create it
            again. - RESTART: Stop the instance and start it
            again. - REFRESH: Do not stop the instance. -
            NONE: Do not disrupt the instance at all. By
            default, the most disruptive allowed action is
            REPLACE. If your update requires a more
            disruptive action than you set with this flag,
            the update request will fail. Check the
            MostDisruptiveAllowedAction enum for the list of
            possible values.

            This field is a member of `oneof`_ ``_most_disruptive_allowed_action``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    class MinimalAction(proto.Enum):
        r"""The minimal action that you want to perform on each instance
        during the update: - REPLACE: At minimum, delete the instance
        and create it again. - RESTART: Stop the instance and start it
        again. - REFRESH: Do not stop the instance. - NONE: Do not
        disrupt the instance at all. By default, the minimum action is
        NONE. If your update requires a more disruptive action than you
        set with this flag, the necessary action is performed to execute
        the update. Additional supported values which may be not listed
        in the enum directly due to technical reasons: NONE
        REFRESH
        REPLACE
        RESTART
        """
        __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore
        UNDEFINED_MINIMAL_ACTION = 0

    class MostDisruptiveAllowedAction(proto.Enum):
        r"""The most disruptive action that you want to perform on each
        instance during the update: - REPLACE: Delete the instance and
        create it again. - RESTART: Stop the instance and start it
        again. - REFRESH: Do not stop the instance. - NONE: Do not
        disrupt the instance at all. By default, the most disruptive
        allowed action is REPLACE. If your update requires a more
        disruptive action than you set with this flag, the update
        request will fail. Additional supported values which may be not
        listed in the enum directly due to technical reasons: NONE
        REFRESH
        REPLACE
        RESTART
        """
        __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore
        UNDEFINED_MOST_DISRUPTIVE_ALLOWED_ACTION = 0

    all_instances = proto.Field(
        proto.BOOL,
        number=403676512,
        optional=True,
    )
    instances = proto.RepeatedField(
        proto.STRING,
        number=29097598,
    )
    minimal_action = proto.Field(
        proto.STRING,
        number=270567060,
        optional=True,
    )
    most_disruptive_allowed_action = proto.Field(
        proto.STRING,
        number=66103053,
        optional=True,
    )


class RegionInstanceGroupManagersCreateInstancesRequest(proto.Message):
    r"""RegionInstanceGroupManagers.createInstances

    Attributes:
        instances (Sequence[google.cloud.compute_v1.types.PerInstanceConfig]):
            [Required] List of specifications of per-instance configs.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instances = proto.RepeatedField(
        proto.MESSAGE,
        number=29097598,
        message="PerInstanceConfig",
    )


class RegionInstanceGroupManagersDeleteInstancesRequest(proto.Message):
    r"""

    Attributes:
        instances (Sequence[str]):
            The URLs of one or more instances to delete. This can be a
            full URL or a partial URL, such as
            zones/[ZONE]/instances/[INSTANCE_NAME].
        skip_instances_on_validation_error (bool):
            Specifies whether the request should proceed despite the
            inclusion of instances that are not members of the group or
            that are already in the process of being deleted or
            abandoned. If this field is set to ``false`` and such an
            instance is specified in the request, the operation fails.
            The operation always fails if the request contains a
            malformed instance URL or a reference to an instance that
            exists in a zone or region other than the group's zone or
            region.

            This field is a member of `oneof`_ ``_skip_instances_on_validation_error``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instances = proto.RepeatedField(
        proto.STRING,
        number=29097598,
    )
    skip_instances_on_validation_error = proto.Field(
        proto.BOOL,
        number=40631073,
        optional=True,
    )


class RegionInstanceGroupManagersRecreateRequest(proto.Message):
    r"""

    Attributes:
        instances (Sequence[str]):
            The URLs of one or more instances to recreate. This can be a
            full URL or a partial URL, such as
            zones/[ZONE]/instances/[INSTANCE_NAME].
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instances = proto.RepeatedField(
        proto.STRING,
        number=29097598,
    )


class RegionInstanceGroupManagersSetTargetPoolsRequest(proto.Message):
    r"""

    Attributes:
        fingerprint (str):
            Fingerprint of the target pools information,
            which is a hash of the contents. This field is
            used for optimistic locking when you update the
            target pool entries. This field is optional.

            This field is a member of `oneof`_ ``_fingerprint``.
        target_pools (Sequence[str]):
            The URL of all TargetPool resources to which
            instances in the instanceGroup field are added.
            The target pools automatically apply to all of
            the instances in the managed instance group.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    fingerprint = proto.Field(
        proto.STRING,
        number=234678500,
        optional=True,
    )
    target_pools = proto.RepeatedField(
        proto.STRING,
        number=336072617,
    )


class RegionInstanceGroupManagersSetTemplateRequest(proto.Message):
    r"""

    Attributes:
        instance_template (str):
            URL of the InstanceTemplate resource from
            which all new instances will be created.

            This field is a member of `oneof`_ ``_instance_template``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_template = proto.Field(
        proto.STRING,
        number=309248228,
        optional=True,
    )


class RegionInstanceGroupsListInstancesRequest(proto.Message):
    r"""

    Attributes:
        instance_state (str):
            Instances in which state should be returned.
            Valid options are: 'ALL', 'RUNNING'. By default,
            it lists all instances. Check the InstanceState
            enum for the list of possible values.

            This field is a member of `oneof`_ ``_instance_state``.
        port_name (str):
            Name of port user is interested in. It is
            optional. If it is set, only information about
            this ports will be returned. If it is not set,
            all the named ports will be returned. Always
            lists all instances.

            This field is a member of `oneof`_ ``_port_name``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    class InstanceState(proto.Enum):
        r"""Instances in which state should be returned. Valid options
        are: 'ALL', 'RUNNING'. By default, it lists all instances.
        """
        __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore
        UNDEFINED_INSTANCE_STATE = 0
        ALL = 64897
        RUNNING = 121282975

    instance_state = proto.Field(
        proto.STRING,
        number=92223591,
        optional=True,
    )
    port_name = proto.Field(
        proto.STRING,
        number=41534345,
        optional=True,
    )


class RegionInstanceGroupsSetNamedPortsRequest(proto.Message):
    r"""

    Attributes:
        fingerprint (str):
            The fingerprint of the named ports
            information for this instance group. Use this
            optional property to prevent conflicts when
            multiple users change the named ports settings
            concurrently. Obtain the fingerprint with the
            instanceGroups.get method. Then, include the
            fingerprint in your request to ensure that you
            do not overwrite changes that were applied from
            another concurrent request.

            This field is a member of `oneof`_ ``_fingerprint``.
        named_ports (Sequence[google.cloud.compute_v1.types.NamedPort]):
            The list of named ports to set for this
            instance group.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    fingerprint = proto.Field(
        proto.STRING,
        number=234678500,
        optional=True,
    )
    named_ports = proto.RepeatedField(
        proto.MESSAGE,
        number=427598732,
        message="NamedPort",
    )


class RegionSetLabelsRequest(proto.Message):
    r"""

    Attributes:
        label_fingerprint (str):
            The fingerprint of the previous set of labels
            for this resource, used to detect conflicts. The
            fingerprint is initially generated by Compute
            Engine and changes after every request to modify
            or update labels. You must always provide an
            up-to-date fingerprint hash in order to update
            or change labels. Make a get() request to the
            resource to get the latest fingerprint.

            This field is a member of `oneof`_ ``_label_fingerprint``.
        labels (Mapping[str, str]):
            The labels to set for this resource.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    label_fingerprint = proto.Field(
        proto.STRING,
        number=178124825,
        optional=True,
    )
    labels = proto.MapField(
        proto.STRING,
        proto.STRING,
        number=500195327,
    )


class RegionSetPolicyRequest(proto.Message):
    r"""

    Attributes:
        bindings (Sequence[google.cloud.compute_v1.types.Binding]):
            Flatten Policy to create a backwacd
            compatible wire-format. Deprecated. Use 'policy'
            to specify bindings.
        etag (str):
            Flatten Policy to create a backward
            compatible wire-format. Deprecated. Use 'policy'
            to specify the etag.

            This field is a member of `oneof`_ ``_etag``.
        policy (google.cloud.compute_v1.types.Policy):
            REQUIRED: The complete policy to be applied
            to the 'resource'. The size of the policy is
            limited to a few 10s of KB. An empty policy is
            in general a valid policy but certain services
            (like Projects) might reject them.

            This field is a member of `oneof`_ ``_policy``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    bindings = proto.RepeatedField(
        proto.MESSAGE,
        number=403251854,
        message="Binding",
    )
    etag = proto.Field(
        proto.STRING,
        number=3123477,
        optional=True,
    )
    policy = proto.Field(
        proto.MESSAGE,
        number=91071794,
        optional=True,
        message="Policy",
    )


class RegionTargetHttpsProxiesSetSslCertificatesRequest(proto.Message):
    r"""

    Attributes:
        ssl_certificates (Sequence[str]):
            New set of SslCertificate resources to
            associate with this TargetHttpsProxy resource.
            Currently exactly one SslCertificate resource
            must be specified.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    ssl_certificates = proto.RepeatedField(
        proto.STRING,
        number=366006543,
    )


class RegionUrlMapsValidateRequest(proto.Message):
    r"""

    Attributes:
        resource (google.cloud.compute_v1.types.UrlMap):
            Content of the UrlMap to be validated.

            This field is a member of `oneof`_ ``_resource``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    resource = proto.Field(
        proto.MESSAGE,
        number=195806222,
        optional=True,
        message="UrlMap",
    )


class RemoveAssociationFirewallPolicyRequest(proto.Message):
    r"""A request message for FirewallPolicies.RemoveAssociation. See
    the method description for details.

    Attributes:
        firewall_policy (str):
            Name of the firewall policy to update.
        name (str):
            Name for the attachment that will be removed.

            This field is a member of `oneof`_ ``_name``.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    firewall_policy = proto.Field(
        proto.STRING,
        number=498173265,
    )
    name = proto.Field(
        proto.STRING,
        number=3373707,
        optional=True,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class RemoveAssociationNetworkFirewallPolicyRequest(proto.Message):
    r"""A request message for
    NetworkFirewallPolicies.RemoveAssociation. See the method
    description for details.

    Attributes:
        firewall_policy (str):
            Name of the firewall policy to update.
        name (str):
            Name for the attachment that will be removed.

            This field is a member of `oneof`_ ``_name``.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    firewall_policy = proto.Field(
        proto.STRING,
        number=498173265,
    )
    name = proto.Field(
        proto.STRING,
        number=3373707,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class RemoveAssociationRegionNetworkFirewallPolicyRequest(proto.Message):
    r"""A request message for
    RegionNetworkFirewallPolicies.RemoveAssociation. See the method
    description for details.

    Attributes:
        firewall_policy (str):
            Name of the firewall policy to update.
        name (str):
            Name for the association that will be
            removed.

            This field is a member of `oneof`_ ``_name``.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    firewall_policy = proto.Field(
        proto.STRING,
        number=498173265,
    )
    name = proto.Field(
        proto.STRING,
        number=3373707,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class RemoveHealthCheckTargetPoolRequest(proto.Message):
    r"""A request message for TargetPools.RemoveHealthCheck. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_pool (str):
            Name of the target pool to remove health
            checks from.
        target_pools_remove_health_check_request_resource (google.cloud.compute_v1.types.TargetPoolsRemoveHealthCheckRequest):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_pool = proto.Field(
        proto.STRING,
        number=62796298,
    )
    target_pools_remove_health_check_request_resource = proto.Field(
        proto.MESSAGE,
        number=304985011,
        message="TargetPoolsRemoveHealthCheckRequest",
    )


class RemoveInstanceTargetPoolRequest(proto.Message):
    r"""A request message for TargetPools.RemoveInstance. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_pool (str):
            Name of the TargetPool resource to remove
            instances from.
        target_pools_remove_instance_request_resource (google.cloud.compute_v1.types.TargetPoolsRemoveInstanceRequest):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_pool = proto.Field(
        proto.STRING,
        number=62796298,
    )
    target_pools_remove_instance_request_resource = proto.Field(
        proto.MESSAGE,
        number=29548547,
        message="TargetPoolsRemoveInstanceRequest",
    )


class RemoveInstancesInstanceGroupRequest(proto.Message):
    r"""A request message for InstanceGroups.RemoveInstances. See the
    method description for details.

    Attributes:
        instance_group (str):
            The name of the instance group where the
            specified instances will be removed.
        instance_groups_remove_instances_request_resource (google.cloud.compute_v1.types.InstanceGroupsRemoveInstancesRequest):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone where the instance group
            is located.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_group = proto.Field(
        proto.STRING,
        number=81095253,
    )
    instance_groups_remove_instances_request_resource = proto.Field(
        proto.MESSAGE,
        number=390981817,
        message="InstanceGroupsRemoveInstancesRequest",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class RemovePeeringNetworkRequest(proto.Message):
    r"""A request message for Networks.RemovePeering. See the method
    description for details.

    Attributes:
        network (str):
            Name of the network resource to remove
            peering from.
        networks_remove_peering_request_resource (google.cloud.compute_v1.types.NetworksRemovePeeringRequest):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    network = proto.Field(
        proto.STRING,
        number=232872494,
    )
    networks_remove_peering_request_resource = proto.Field(
        proto.MESSAGE,
        number=421162494,
        message="NetworksRemovePeeringRequest",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class RemoveResourcePoliciesDiskRequest(proto.Message):
    r"""A request message for Disks.RemoveResourcePolicies. See the
    method description for details.

    Attributes:
        disk (str):
            The disk name for this request.
        disks_remove_resource_policies_request_resource (google.cloud.compute_v1.types.DisksRemoveResourcePoliciesRequest):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    disk = proto.Field(
        proto.STRING,
        number=3083677,
    )
    disks_remove_resource_policies_request_resource = proto.Field(
        proto.MESSAGE,
        number=436756718,
        message="DisksRemoveResourcePoliciesRequest",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class RemoveResourcePoliciesInstanceRequest(proto.Message):
    r"""A request message for Instances.RemoveResourcePolicies. See
    the method description for details.

    Attributes:
        instance (str):
            The instance name for this request.
        instances_remove_resource_policies_request_resource (google.cloud.compute_v1.types.InstancesRemoveResourcePoliciesRequest):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance = proto.Field(
        proto.STRING,
        number=18257045,
    )
    instances_remove_resource_policies_request_resource = proto.Field(
        proto.MESSAGE,
        number=49229558,
        message="InstancesRemoveResourcePoliciesRequest",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class RemoveResourcePoliciesRegionDiskRequest(proto.Message):
    r"""A request message for RegionDisks.RemoveResourcePolicies. See
    the method description for details.

    Attributes:
        disk (str):
            The disk name for this request.
        project (str):
            Project ID for this request.
        region (str):
            The name of the region for this request.
        region_disks_remove_resource_policies_request_resource (google.cloud.compute_v1.types.RegionDisksRemoveResourcePoliciesRequest):
            The body resource for this request
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    disk = proto.Field(
        proto.STRING,
        number=3083677,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    region_disks_remove_resource_policies_request_resource = proto.Field(
        proto.MESSAGE,
        number=8741283,
        message="RegionDisksRemoveResourcePoliciesRequest",
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class RemoveRuleFirewallPolicyRequest(proto.Message):
    r"""A request message for FirewallPolicies.RemoveRule. See the
    method description for details.

    Attributes:
        firewall_policy (str):
            Name of the firewall policy to update.
        priority (int):
            The priority of the rule to remove from the
            firewall policy.

            This field is a member of `oneof`_ ``_priority``.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    firewall_policy = proto.Field(
        proto.STRING,
        number=498173265,
    )
    priority = proto.Field(
        proto.INT32,
        number=445151652,
        optional=True,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class RemoveRuleNetworkFirewallPolicyRequest(proto.Message):
    r"""A request message for NetworkFirewallPolicies.RemoveRule. See
    the method description for details.

    Attributes:
        firewall_policy (str):
            Name of the firewall policy to update.
        priority (int):
            The priority of the rule to remove from the
            firewall policy.

            This field is a member of `oneof`_ ``_priority``.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    firewall_policy = proto.Field(
        proto.STRING,
        number=498173265,
    )
    priority = proto.Field(
        proto.INT32,
        number=445151652,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class RemoveRuleRegionNetworkFirewallPolicyRequest(proto.Message):
    r"""A request message for
    RegionNetworkFirewallPolicies.RemoveRule. See the method
    description for details.

    Attributes:
        firewall_policy (str):
            Name of the firewall policy to update.
        priority (int):
            The priority of the rule to remove from the
            firewall policy.

            This field is a member of `oneof`_ ``_priority``.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    firewall_policy = proto.Field(
        proto.STRING,
        number=498173265,
    )
    priority = proto.Field(
        proto.INT32,
        number=445151652,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class RemoveRuleSecurityPolicyRequest(proto.Message):
    r"""A request message for SecurityPolicies.RemoveRule. See the
    method description for details.

    Attributes:
        priority (int):
            The priority of the rule to remove from the
            security policy.

            This field is a member of `oneof`_ ``_priority``.
        project (str):
            Project ID for this request.
        security_policy (str):
            Name of the security policy to update.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    priority = proto.Field(
        proto.INT32,
        number=445151652,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    security_policy = proto.Field(
        proto.STRING,
        number=171082513,
    )


class ReservationsResizeRequest(proto.Message):
    r"""

    Attributes:
        specific_sku_count (int):
            Number of allocated resources can be resized
            with minimum = 1 and maximum = 1000.

            This field is a member of `oneof`_ ``_specific_sku_count``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    specific_sku_count = proto.Field(
        proto.INT64,
        number=13890720,
        optional=True,
    )


class ResetInstanceRequest(proto.Message):
    r"""A request message for Instances.Reset. See the method
    description for details.

    Attributes:
        instance (str):
            Name of the instance scoping this request.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance = proto.Field(
        proto.STRING,
        number=18257045,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class ResizeDiskRequest(proto.Message):
    r"""A request message for Disks.Resize. See the method
    description for details.

    Attributes:
        disk (str):
            The name of the persistent disk.
        disks_resize_request_resource (google.cloud.compute_v1.types.DisksResizeRequest):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    disk = proto.Field(
        proto.STRING,
        number=3083677,
    )
    disks_resize_request_resource = proto.Field(
        proto.MESSAGE,
        number=78307616,
        message="DisksResizeRequest",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class ResizeInstanceGroupManagerRequest(proto.Message):
    r"""A request message for InstanceGroupManagers.Resize. See the
    method description for details.

    Attributes:
        instance_group_manager (str):
            The name of the managed instance group.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        size (int):
            The number of running instances that the
            managed instance group should maintain at any
            given time. The group automatically adds or
            removes instances to maintain the number of
            instances specified by this parameter.
        zone (str):
            The name of the zone where the managed
            instance group is located.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_group_manager = proto.Field(
        proto.STRING,
        number=249363395,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    size = proto.Field(
        proto.INT32,
        number=3530753,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class ResizeRegionDiskRequest(proto.Message):
    r"""A request message for RegionDisks.Resize. See the method
    description for details.

    Attributes:
        disk (str):
            Name of the regional persistent disk.
        project (str):
            The project ID for this request.
        region (str):
            Name of the region for this request.
        region_disks_resize_request_resource (google.cloud.compute_v1.types.RegionDisksResizeRequest):
            The body resource for this request
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    disk = proto.Field(
        proto.STRING,
        number=3083677,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    region_disks_resize_request_resource = proto.Field(
        proto.MESSAGE,
        number=446633237,
        message="RegionDisksResizeRequest",
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class ResizeRegionInstanceGroupManagerRequest(proto.Message):
    r"""A request message for RegionInstanceGroupManagers.Resize. See
    the method description for details.

    Attributes:
        instance_group_manager (str):
            Name of the managed instance group.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        size (int):
            Number of instances that should exist in this
            instance group manager.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_group_manager = proto.Field(
        proto.STRING,
        number=249363395,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    size = proto.Field(
        proto.INT32,
        number=3530753,
    )


class ResizeReservationRequest(proto.Message):
    r"""A request message for Reservations.Resize. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        reservation (str):
            Name of the reservation to update.
        reservations_resize_request_resource (google.cloud.compute_v1.types.ReservationsResizeRequest):
            The body resource for this request
        zone (str):
            Name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    reservation = proto.Field(
        proto.STRING,
        number=47530956,
    )
    reservations_resize_request_resource = proto.Field(
        proto.MESSAGE,
        number=389262801,
        message="ReservationsResizeRequest",
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class ResumeInstanceRequest(proto.Message):
    r"""A request message for Instances.Resume. See the method
    description for details.

    Attributes:
        instance (str):
            Name of the instance resource to resume.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance = proto.Field(
        proto.STRING,
        number=18257045,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class SendDiagnosticInterruptInstanceRequest(proto.Message):
    r"""A request message for Instances.SendDiagnosticInterrupt. See
    the method description for details.

    Attributes:
        instance (str):
            Name of the instance scoping this request.
        project (str):
            Project ID for this request.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance = proto.Field(
        proto.STRING,
        number=18257045,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class SetBackendServiceTargetSslProxyRequest(proto.Message):
    r"""A request message for TargetSslProxies.SetBackendService. See
    the method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_ssl_proxies_set_backend_service_request_resource (google.cloud.compute_v1.types.TargetSslProxiesSetBackendServiceRequest):
            The body resource for this request
        target_ssl_proxy (str):
            Name of the TargetSslProxy resource whose
            BackendService resource is to be set.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_ssl_proxies_set_backend_service_request_resource = proto.Field(
        proto.MESSAGE,
        number=139080868,
        message="TargetSslProxiesSetBackendServiceRequest",
    )
    target_ssl_proxy = proto.Field(
        proto.STRING,
        number=338795853,
    )


class SetBackendServiceTargetTcpProxyRequest(proto.Message):
    r"""A request message for TargetTcpProxies.SetBackendService. See
    the method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_tcp_proxies_set_backend_service_request_resource (google.cloud.compute_v1.types.TargetTcpProxiesSetBackendServiceRequest):
            The body resource for this request
        target_tcp_proxy (str):
            Name of the TargetTcpProxy resource whose
            BackendService resource is to be set.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_tcp_proxies_set_backend_service_request_resource = proto.Field(
        proto.MESSAGE,
        number=273721583,
        message="TargetTcpProxiesSetBackendServiceRequest",
    )
    target_tcp_proxy = proto.Field(
        proto.STRING,
        number=503065442,
    )


class SetBackupTargetPoolRequest(proto.Message):
    r"""A request message for TargetPools.SetBackup. See the method
    description for details.

    Attributes:
        failover_ratio (float):
            New failoverRatio value for the target pool.

            This field is a member of `oneof`_ ``_failover_ratio``.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_pool (str):
            Name of the TargetPool resource to set a
            backup pool for.
        target_reference_resource (google.cloud.compute_v1.types.TargetReference):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    failover_ratio = proto.Field(
        proto.FLOAT,
        number=212667006,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_pool = proto.Field(
        proto.STRING,
        number=62796298,
    )
    target_reference_resource = proto.Field(
        proto.MESSAGE,
        number=523721712,
        message="TargetReference",
    )


class SetCertificateMapTargetHttpsProxyRequest(proto.Message):
    r"""A request message for TargetHttpsProxies.SetCertificateMap.
    See the method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_https_proxies_set_certificate_map_request_resource (google.cloud.compute_v1.types.TargetHttpsProxiesSetCertificateMapRequest):
            The body resource for this request
        target_https_proxy (str):
            Name of the TargetHttpsProxy resource whose
            CertificateMap is to be set. The name must be
            1-63 characters long, and comply with RFC1035.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_https_proxies_set_certificate_map_request_resource = proto.Field(
        proto.MESSAGE,
        number=467639099,
        message="TargetHttpsProxiesSetCertificateMapRequest",
    )
    target_https_proxy = proto.Field(
        proto.STRING,
        number=52336748,
    )


class SetCertificateMapTargetSslProxyRequest(proto.Message):
    r"""A request message for TargetSslProxies.SetCertificateMap. See
    the method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_ssl_proxies_set_certificate_map_request_resource (google.cloud.compute_v1.types.TargetSslProxiesSetCertificateMapRequest):
            The body resource for this request
        target_ssl_proxy (str):
            Name of the TargetSslProxy resource whose
            CertificateMap is to be set. The name must be
            1-63 characters long, and comply with RFC1035.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_ssl_proxies_set_certificate_map_request_resource = proto.Field(
        proto.MESSAGE,
        number=343984954,
        message="TargetSslProxiesSetCertificateMapRequest",
    )
    target_ssl_proxy = proto.Field(
        proto.STRING,
        number=338795853,
    )


class SetCommonInstanceMetadataProjectRequest(proto.Message):
    r"""A request message for Projects.SetCommonInstanceMetadata. See
    the method description for details.

    Attributes:
        metadata_resource (google.cloud.compute_v1.types.Metadata):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    metadata_resource = proto.Field(
        proto.MESSAGE,
        number=291086110,
        message="Metadata",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class SetDefaultNetworkTierProjectRequest(proto.Message):
    r"""A request message for Projects.SetDefaultNetworkTier. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        projects_set_default_network_tier_request_resource (google.cloud.compute_v1.types.ProjectsSetDefaultNetworkTierRequest):
            The body resource for this request
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    projects_set_default_network_tier_request_resource = proto.Field(
        proto.MESSAGE,
        number=126410762,
        message="ProjectsSetDefaultNetworkTierRequest",
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class SetDeletionProtectionInstanceRequest(proto.Message):
    r"""A request message for Instances.SetDeletionProtection. See
    the method description for details.

    Attributes:
        deletion_protection (bool):
            Whether the resource should be protected
            against deletion.

            This field is a member of `oneof`_ ``_deletion_protection``.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        resource (str):
            Name or id of the resource for this request.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    deletion_protection = proto.Field(
        proto.BOOL,
        number=458014698,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class SetDiskAutoDeleteInstanceRequest(proto.Message):
    r"""A request message for Instances.SetDiskAutoDelete. See the
    method description for details.

    Attributes:
        auto_delete (bool):
            Whether to auto-delete the disk when the
            instance is deleted.
        device_name (str):
            The device name of the disk to modify. Make a
            get() request on the instance to view currently
            attached disks and device names.
        instance (str):
            The instance name for this request.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    auto_delete = proto.Field(
        proto.BOOL,
        number=464761403,
    )
    device_name = proto.Field(
        proto.STRING,
        number=67541716,
    )
    instance = proto.Field(
        proto.STRING,
        number=18257045,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class SetEdgeSecurityPolicyBackendBucketRequest(proto.Message):
    r"""A request message for BackendBuckets.SetEdgeSecurityPolicy.
    See the method description for details.

    Attributes:
        backend_bucket (str):
            Name of the BackendService resource to which
            the security policy should be set. The name
            should conform to RFC1035.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        security_policy_reference_resource (google.cloud.compute_v1.types.SecurityPolicyReference):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    backend_bucket = proto.Field(
        proto.STRING,
        number=91714037,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    security_policy_reference_resource = proto.Field(
        proto.MESSAGE,
        number=204135024,
        message="SecurityPolicyReference",
    )


class SetEdgeSecurityPolicyBackendServiceRequest(proto.Message):
    r"""A request message for BackendServices.SetEdgeSecurityPolicy.
    See the method description for details.

    Attributes:
        backend_service (str):
            Name of the BackendService resource to which
            the edge security policy should be set. The name
            should conform to RFC1035.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        security_policy_reference_resource (google.cloud.compute_v1.types.SecurityPolicyReference):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    backend_service = proto.Field(
        proto.STRING,
        number=306946058,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    security_policy_reference_resource = proto.Field(
        proto.MESSAGE,
        number=204135024,
        message="SecurityPolicyReference",
    )


class SetIamPolicyDiskRequest(proto.Message):
    r"""A request message for Disks.SetIamPolicy. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        resource (str):
            Name or id of the resource for this request.
        zone (str):
            The name of the zone for this request.
        zone_set_policy_request_resource (google.cloud.compute_v1.types.ZoneSetPolicyRequest):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )
    zone_set_policy_request_resource = proto.Field(
        proto.MESSAGE,
        number=382082107,
        message="ZoneSetPolicyRequest",
    )


class SetIamPolicyFirewallPolicyRequest(proto.Message):
    r"""A request message for FirewallPolicies.SetIamPolicy. See the
    method description for details.

    Attributes:
        global_organization_set_policy_request_resource (google.cloud.compute_v1.types.GlobalOrganizationSetPolicyRequest):
            The body resource for this request
        resource (str):
            Name or id of the resource for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    global_organization_set_policy_request_resource = proto.Field(
        proto.MESSAGE,
        number=177408606,
        message="GlobalOrganizationSetPolicyRequest",
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )


class SetIamPolicyImageRequest(proto.Message):
    r"""A request message for Images.SetIamPolicy. See the method
    description for details.

    Attributes:
        global_set_policy_request_resource (google.cloud.compute_v1.types.GlobalSetPolicyRequest):
            The body resource for this request
        project (str):
            Project ID for this request.
        resource (str):
            Name or id of the resource for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    global_set_policy_request_resource = proto.Field(
        proto.MESSAGE,
        number=337048498,
        message="GlobalSetPolicyRequest",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )


class SetIamPolicyInstanceRequest(proto.Message):
    r"""A request message for Instances.SetIamPolicy. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        resource (str):
            Name or id of the resource for this request.
        zone (str):
            The name of the zone for this request.
        zone_set_policy_request_resource (google.cloud.compute_v1.types.ZoneSetPolicyRequest):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )
    zone_set_policy_request_resource = proto.Field(
        proto.MESSAGE,
        number=382082107,
        message="ZoneSetPolicyRequest",
    )


class SetIamPolicyInstanceTemplateRequest(proto.Message):
    r"""A request message for InstanceTemplates.SetIamPolicy. See the
    method description for details.

    Attributes:
        global_set_policy_request_resource (google.cloud.compute_v1.types.GlobalSetPolicyRequest):
            The body resource for this request
        project (str):
            Project ID for this request.
        resource (str):
            Name or id of the resource for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    global_set_policy_request_resource = proto.Field(
        proto.MESSAGE,
        number=337048498,
        message="GlobalSetPolicyRequest",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )


class SetIamPolicyLicenseRequest(proto.Message):
    r"""A request message for Licenses.SetIamPolicy. See the method
    description for details.

    Attributes:
        global_set_policy_request_resource (google.cloud.compute_v1.types.GlobalSetPolicyRequest):
            The body resource for this request
        project (str):
            Project ID for this request.
        resource (str):
            Name or id of the resource for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    global_set_policy_request_resource = proto.Field(
        proto.MESSAGE,
        number=337048498,
        message="GlobalSetPolicyRequest",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )


class SetIamPolicyMachineImageRequest(proto.Message):
    r"""A request message for MachineImages.SetIamPolicy. See the
    method description for details.

    Attributes:
        global_set_policy_request_resource (google.cloud.compute_v1.types.GlobalSetPolicyRequest):
            The body resource for this request
        project (str):
            Project ID for this request.
        resource (str):
            Name or id of the resource for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    global_set_policy_request_resource = proto.Field(
        proto.MESSAGE,
        number=337048498,
        message="GlobalSetPolicyRequest",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )


class SetIamPolicyNetworkFirewallPolicyRequest(proto.Message):
    r"""A request message for NetworkFirewallPolicies.SetIamPolicy.
    See the method description for details.

    Attributes:
        global_set_policy_request_resource (google.cloud.compute_v1.types.GlobalSetPolicyRequest):
            The body resource for this request
        project (str):
            Project ID for this request.
        resource (str):
            Name or id of the resource for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    global_set_policy_request_resource = proto.Field(
        proto.MESSAGE,
        number=337048498,
        message="GlobalSetPolicyRequest",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )


class SetIamPolicyNodeGroupRequest(proto.Message):
    r"""A request message for NodeGroups.SetIamPolicy. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        resource (str):
            Name or id of the resource for this request.
        zone (str):
            The name of the zone for this request.
        zone_set_policy_request_resource (google.cloud.compute_v1.types.ZoneSetPolicyRequest):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )
    zone_set_policy_request_resource = proto.Field(
        proto.MESSAGE,
        number=382082107,
        message="ZoneSetPolicyRequest",
    )


class SetIamPolicyNodeTemplateRequest(proto.Message):
    r"""A request message for NodeTemplates.SetIamPolicy. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            The name of the region for this request.
        region_set_policy_request_resource (google.cloud.compute_v1.types.RegionSetPolicyRequest):
            The body resource for this request
        resource (str):
            Name or id of the resource for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    region_set_policy_request_resource = proto.Field(
        proto.MESSAGE,
        number=276489091,
        message="RegionSetPolicyRequest",
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )


class SetIamPolicyRegionDiskRequest(proto.Message):
    r"""A request message for RegionDisks.SetIamPolicy. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            The name of the region for this request.
        region_set_policy_request_resource (google.cloud.compute_v1.types.RegionSetPolicyRequest):
            The body resource for this request
        resource (str):
            Name or id of the resource for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    region_set_policy_request_resource = proto.Field(
        proto.MESSAGE,
        number=276489091,
        message="RegionSetPolicyRequest",
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )


class SetIamPolicyRegionNetworkFirewallPolicyRequest(proto.Message):
    r"""A request message for
    RegionNetworkFirewallPolicies.SetIamPolicy. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            The name of the region for this request.
        region_set_policy_request_resource (google.cloud.compute_v1.types.RegionSetPolicyRequest):
            The body resource for this request
        resource (str):
            Name or id of the resource for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    region_set_policy_request_resource = proto.Field(
        proto.MESSAGE,
        number=276489091,
        message="RegionSetPolicyRequest",
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )


class SetIamPolicyReservationRequest(proto.Message):
    r"""A request message for Reservations.SetIamPolicy. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        resource (str):
            Name or id of the resource for this request.
        zone (str):
            The name of the zone for this request.
        zone_set_policy_request_resource (google.cloud.compute_v1.types.ZoneSetPolicyRequest):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )
    zone_set_policy_request_resource = proto.Field(
        proto.MESSAGE,
        number=382082107,
        message="ZoneSetPolicyRequest",
    )


class SetIamPolicyResourcePolicyRequest(proto.Message):
    r"""A request message for ResourcePolicies.SetIamPolicy. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            The name of the region for this request.
        region_set_policy_request_resource (google.cloud.compute_v1.types.RegionSetPolicyRequest):
            The body resource for this request
        resource (str):
            Name or id of the resource for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    region_set_policy_request_resource = proto.Field(
        proto.MESSAGE,
        number=276489091,
        message="RegionSetPolicyRequest",
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )


class SetIamPolicyServiceAttachmentRequest(proto.Message):
    r"""A request message for ServiceAttachments.SetIamPolicy. See
    the method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            The name of the region for this request.
        region_set_policy_request_resource (google.cloud.compute_v1.types.RegionSetPolicyRequest):
            The body resource for this request
        resource (str):
            Name or id of the resource for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    region_set_policy_request_resource = proto.Field(
        proto.MESSAGE,
        number=276489091,
        message="RegionSetPolicyRequest",
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )


class SetIamPolicySnapshotRequest(proto.Message):
    r"""A request message for Snapshots.SetIamPolicy. See the method
    description for details.

    Attributes:
        global_set_policy_request_resource (google.cloud.compute_v1.types.GlobalSetPolicyRequest):
            The body resource for this request
        project (str):
            Project ID for this request.
        resource (str):
            Name or id of the resource for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    global_set_policy_request_resource = proto.Field(
        proto.MESSAGE,
        number=337048498,
        message="GlobalSetPolicyRequest",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )


class SetIamPolicySubnetworkRequest(proto.Message):
    r"""A request message for Subnetworks.SetIamPolicy. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            The name of the region for this request.
        region_set_policy_request_resource (google.cloud.compute_v1.types.RegionSetPolicyRequest):
            The body resource for this request
        resource (str):
            Name or id of the resource for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    region_set_policy_request_resource = proto.Field(
        proto.MESSAGE,
        number=276489091,
        message="RegionSetPolicyRequest",
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )


class SetInstanceTemplateInstanceGroupManagerRequest(proto.Message):
    r"""A request message for
    InstanceGroupManagers.SetInstanceTemplate. See the method
    description for details.

    Attributes:
        instance_group_manager (str):
            The name of the managed instance group.
        instance_group_managers_set_instance_template_request_resource (google.cloud.compute_v1.types.InstanceGroupManagersSetInstanceTemplateRequest):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone where the managed
            instance group is located.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_group_manager = proto.Field(
        proto.STRING,
        number=249363395,
    )
    instance_group_managers_set_instance_template_request_resource = proto.Field(
        proto.MESSAGE,
        number=9809093,
        message="InstanceGroupManagersSetInstanceTemplateRequest",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class SetInstanceTemplateRegionInstanceGroupManagerRequest(proto.Message):
    r"""A request message for
    RegionInstanceGroupManagers.SetInstanceTemplate. See the method
    description for details.

    Attributes:
        instance_group_manager (str):
            The name of the managed instance group.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        region_instance_group_managers_set_template_request_resource (google.cloud.compute_v1.types.RegionInstanceGroupManagersSetTemplateRequest):
            The body resource for this request
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_group_manager = proto.Field(
        proto.STRING,
        number=249363395,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    region_instance_group_managers_set_template_request_resource = proto.Field(
        proto.MESSAGE,
        number=187310412,
        message="RegionInstanceGroupManagersSetTemplateRequest",
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class SetLabelsDiskRequest(proto.Message):
    r"""A request message for Disks.SetLabels. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        resource (str):
            Name or id of the resource for this request.
        zone (str):
            The name of the zone for this request.
        zone_set_labels_request_resource (google.cloud.compute_v1.types.ZoneSetLabelsRequest):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )
    zone_set_labels_request_resource = proto.Field(
        proto.MESSAGE,
        number=364950798,
        message="ZoneSetLabelsRequest",
    )


class SetLabelsExternalVpnGatewayRequest(proto.Message):
    r"""A request message for ExternalVpnGateways.SetLabels. See the
    method description for details.

    Attributes:
        global_set_labels_request_resource (google.cloud.compute_v1.types.GlobalSetLabelsRequest):
            The body resource for this request
        project (str):
            Project ID for this request.
        resource (str):
            Name or id of the resource for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    global_set_labels_request_resource = proto.Field(
        proto.MESSAGE,
        number=319917189,
        message="GlobalSetLabelsRequest",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )


class SetLabelsForwardingRuleRequest(proto.Message):
    r"""A request message for ForwardingRules.SetLabels. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            The region for this request.
        region_set_labels_request_resource (google.cloud.compute_v1.types.RegionSetLabelsRequest):
            The body resource for this request
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        resource (str):
            Name or id of the resource for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    region_set_labels_request_resource = proto.Field(
        proto.MESSAGE,
        number=259357782,
        message="RegionSetLabelsRequest",
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )


class SetLabelsGlobalForwardingRuleRequest(proto.Message):
    r"""A request message for GlobalForwardingRules.SetLabels. See
    the method description for details.

    Attributes:
        global_set_labels_request_resource (google.cloud.compute_v1.types.GlobalSetLabelsRequest):
            The body resource for this request
        project (str):
            Project ID for this request.
        resource (str):
            Name or id of the resource for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    global_set_labels_request_resource = proto.Field(
        proto.MESSAGE,
        number=319917189,
        message="GlobalSetLabelsRequest",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )


class SetLabelsImageRequest(proto.Message):
    r"""A request message for Images.SetLabels. See the method
    description for details.

    Attributes:
        global_set_labels_request_resource (google.cloud.compute_v1.types.GlobalSetLabelsRequest):
            The body resource for this request
        project (str):
            Project ID for this request.
        resource (str):
            Name or id of the resource for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    global_set_labels_request_resource = proto.Field(
        proto.MESSAGE,
        number=319917189,
        message="GlobalSetLabelsRequest",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )


class SetLabelsInstanceRequest(proto.Message):
    r"""A request message for Instances.SetLabels. See the method
    description for details.

    Attributes:
        instance (str):
            Name of the instance scoping this request.
        instances_set_labels_request_resource (google.cloud.compute_v1.types.InstancesSetLabelsRequest):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance = proto.Field(
        proto.STRING,
        number=18257045,
    )
    instances_set_labels_request_resource = proto.Field(
        proto.MESSAGE,
        number=207749344,
        message="InstancesSetLabelsRequest",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class SetLabelsRegionDiskRequest(proto.Message):
    r"""A request message for RegionDisks.SetLabels. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            The region for this request.
        region_set_labels_request_resource (google.cloud.compute_v1.types.RegionSetLabelsRequest):
            The body resource for this request
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        resource (str):
            Name or id of the resource for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    region_set_labels_request_resource = proto.Field(
        proto.MESSAGE,
        number=259357782,
        message="RegionSetLabelsRequest",
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )


class SetLabelsSnapshotRequest(proto.Message):
    r"""A request message for Snapshots.SetLabels. See the method
    description for details.

    Attributes:
        global_set_labels_request_resource (google.cloud.compute_v1.types.GlobalSetLabelsRequest):
            The body resource for this request
        project (str):
            Project ID for this request.
        resource (str):
            Name or id of the resource for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    global_set_labels_request_resource = proto.Field(
        proto.MESSAGE,
        number=319917189,
        message="GlobalSetLabelsRequest",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )


class SetLabelsVpnGatewayRequest(proto.Message):
    r"""A request message for VpnGateways.SetLabels. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            The region for this request.
        region_set_labels_request_resource (google.cloud.compute_v1.types.RegionSetLabelsRequest):
            The body resource for this request
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        resource (str):
            Name or id of the resource for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    region_set_labels_request_resource = proto.Field(
        proto.MESSAGE,
        number=259357782,
        message="RegionSetLabelsRequest",
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )


class SetMachineResourcesInstanceRequest(proto.Message):
    r"""A request message for Instances.SetMachineResources. See the
    method description for details.

    Attributes:
        instance (str):
            Name of the instance scoping this request.
        instances_set_machine_resources_request_resource (google.cloud.compute_v1.types.InstancesSetMachineResourcesRequest):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance = proto.Field(
        proto.STRING,
        number=18257045,
    )
    instances_set_machine_resources_request_resource = proto.Field(
        proto.MESSAGE,
        number=196286318,
        message="InstancesSetMachineResourcesRequest",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class SetMachineTypeInstanceRequest(proto.Message):
    r"""A request message for Instances.SetMachineType. See the
    method description for details.

    Attributes:
        instance (str):
            Name of the instance scoping this request.
        instances_set_machine_type_request_resource (google.cloud.compute_v1.types.InstancesSetMachineTypeRequest):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance = proto.Field(
        proto.STRING,
        number=18257045,
    )
    instances_set_machine_type_request_resource = proto.Field(
        proto.MESSAGE,
        number=254157709,
        message="InstancesSetMachineTypeRequest",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class SetMetadataInstanceRequest(proto.Message):
    r"""A request message for Instances.SetMetadata. See the method
    description for details.

    Attributes:
        instance (str):
            Name of the instance scoping this request.
        metadata_resource (google.cloud.compute_v1.types.Metadata):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance = proto.Field(
        proto.STRING,
        number=18257045,
    )
    metadata_resource = proto.Field(
        proto.MESSAGE,
        number=291086110,
        message="Metadata",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class SetMinCpuPlatformInstanceRequest(proto.Message):
    r"""A request message for Instances.SetMinCpuPlatform. See the
    method description for details.

    Attributes:
        instance (str):
            Name of the instance scoping this request.
        instances_set_min_cpu_platform_request_resource (google.cloud.compute_v1.types.InstancesSetMinCpuPlatformRequest):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance = proto.Field(
        proto.STRING,
        number=18257045,
    )
    instances_set_min_cpu_platform_request_resource = proto.Field(
        proto.MESSAGE,
        number=148459368,
        message="InstancesSetMinCpuPlatformRequest",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class SetNamedPortsInstanceGroupRequest(proto.Message):
    r"""A request message for InstanceGroups.SetNamedPorts. See the
    method description for details.

    Attributes:
        instance_group (str):
            The name of the instance group where the
            named ports are updated.
        instance_groups_set_named_ports_request_resource (google.cloud.compute_v1.types.InstanceGroupsSetNamedPortsRequest):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone where the instance group
            is located.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_group = proto.Field(
        proto.STRING,
        number=81095253,
    )
    instance_groups_set_named_ports_request_resource = proto.Field(
        proto.MESSAGE,
        number=385151535,
        message="InstanceGroupsSetNamedPortsRequest",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class SetNamedPortsRegionInstanceGroupRequest(proto.Message):
    r"""A request message for RegionInstanceGroups.SetNamedPorts. See
    the method description for details.

    Attributes:
        instance_group (str):
            The name of the regional instance group where
            the named ports are updated.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        region_instance_groups_set_named_ports_request_resource (google.cloud.compute_v1.types.RegionInstanceGroupsSetNamedPortsRequest):
            The body resource for this request
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_group = proto.Field(
        proto.STRING,
        number=81095253,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    region_instance_groups_set_named_ports_request_resource = proto.Field(
        proto.MESSAGE,
        number=1574938,
        message="RegionInstanceGroupsSetNamedPortsRequest",
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class SetNodeTemplateNodeGroupRequest(proto.Message):
    r"""A request message for NodeGroups.SetNodeTemplate. See the
    method description for details.

    Attributes:
        node_group (str):
            Name of the NodeGroup resource to update.
        node_groups_set_node_template_request_resource (google.cloud.compute_v1.types.NodeGroupsSetNodeTemplateRequest):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    node_group = proto.Field(
        proto.STRING,
        number=469958146,
    )
    node_groups_set_node_template_request_resource = proto.Field(
        proto.MESSAGE,
        number=117382321,
        message="NodeGroupsSetNodeTemplateRequest",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class SetPrivateIpGoogleAccessSubnetworkRequest(proto.Message):
    r"""A request message for Subnetworks.SetPrivateIpGoogleAccess.
    See the method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        subnetwork (str):
            Name of the Subnetwork resource.
        subnetworks_set_private_ip_google_access_request_resource (google.cloud.compute_v1.types.SubnetworksSetPrivateIpGoogleAccessRequest):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    subnetwork = proto.Field(
        proto.STRING,
        number=307827694,
    )
    subnetworks_set_private_ip_google_access_request_resource = proto.Field(
        proto.MESSAGE,
        number=268920696,
        message="SubnetworksSetPrivateIpGoogleAccessRequest",
    )


class SetProxyHeaderTargetSslProxyRequest(proto.Message):
    r"""A request message for TargetSslProxies.SetProxyHeader. See
    the method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_ssl_proxies_set_proxy_header_request_resource (google.cloud.compute_v1.types.TargetSslProxiesSetProxyHeaderRequest):
            The body resource for this request
        target_ssl_proxy (str):
            Name of the TargetSslProxy resource whose
            ProxyHeader is to be set.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_ssl_proxies_set_proxy_header_request_resource = proto.Field(
        proto.MESSAGE,
        number=205284526,
        message="TargetSslProxiesSetProxyHeaderRequest",
    )
    target_ssl_proxy = proto.Field(
        proto.STRING,
        number=338795853,
    )


class SetProxyHeaderTargetTcpProxyRequest(proto.Message):
    r"""A request message for TargetTcpProxies.SetProxyHeader. See
    the method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_tcp_proxies_set_proxy_header_request_resource (google.cloud.compute_v1.types.TargetTcpProxiesSetProxyHeaderRequest):
            The body resource for this request
        target_tcp_proxy (str):
            Name of the TargetTcpProxy resource whose
            ProxyHeader is to be set.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_tcp_proxies_set_proxy_header_request_resource = proto.Field(
        proto.MESSAGE,
        number=219958339,
        message="TargetTcpProxiesSetProxyHeaderRequest",
    )
    target_tcp_proxy = proto.Field(
        proto.STRING,
        number=503065442,
    )


class SetQuicOverrideTargetHttpsProxyRequest(proto.Message):
    r"""A request message for TargetHttpsProxies.SetQuicOverride. See
    the method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_https_proxies_set_quic_override_request_resource (google.cloud.compute_v1.types.TargetHttpsProxiesSetQuicOverrideRequest):
            The body resource for this request
        target_https_proxy (str):
            Name of the TargetHttpsProxy resource to set
            the QUIC override policy for. The name should
            conform to RFC1035.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_https_proxies_set_quic_override_request_resource = proto.Field(
        proto.MESSAGE,
        number=72940258,
        message="TargetHttpsProxiesSetQuicOverrideRequest",
    )
    target_https_proxy = proto.Field(
        proto.STRING,
        number=52336748,
    )


class SetSchedulingInstanceRequest(proto.Message):
    r"""A request message for Instances.SetScheduling. See the method
    description for details.

    Attributes:
        instance (str):
            Instance name for this request.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        scheduling_resource (google.cloud.compute_v1.types.Scheduling):
            The body resource for this request
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance = proto.Field(
        proto.STRING,
        number=18257045,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    scheduling_resource = proto.Field(
        proto.MESSAGE,
        number=463181401,
        message="Scheduling",
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class SetSecurityPolicyBackendServiceRequest(proto.Message):
    r"""A request message for BackendServices.SetSecurityPolicy. See
    the method description for details.

    Attributes:
        backend_service (str):
            Name of the BackendService resource to which
            the security policy should be set. The name
            should conform to RFC1035.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        security_policy_reference_resource (google.cloud.compute_v1.types.SecurityPolicyReference):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    backend_service = proto.Field(
        proto.STRING,
        number=306946058,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    security_policy_reference_resource = proto.Field(
        proto.MESSAGE,
        number=204135024,
        message="SecurityPolicyReference",
    )


class SetServiceAccountInstanceRequest(proto.Message):
    r"""A request message for Instances.SetServiceAccount. See the
    method description for details.

    Attributes:
        instance (str):
            Name of the instance resource to start.
        instances_set_service_account_request_resource (google.cloud.compute_v1.types.InstancesSetServiceAccountRequest):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance = proto.Field(
        proto.STRING,
        number=18257045,
    )
    instances_set_service_account_request_resource = proto.Field(
        proto.MESSAGE,
        number=275550008,
        message="InstancesSetServiceAccountRequest",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class SetShieldedInstanceIntegrityPolicyInstanceRequest(proto.Message):
    r"""A request message for
    Instances.SetShieldedInstanceIntegrityPolicy. See the method
    description for details.

    Attributes:
        instance (str):
            Name or id of the instance scoping this
            request.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        shielded_instance_integrity_policy_resource (google.cloud.compute_v1.types.ShieldedInstanceIntegrityPolicy):
            The body resource for this request
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance = proto.Field(
        proto.STRING,
        number=18257045,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    shielded_instance_integrity_policy_resource = proto.Field(
        proto.MESSAGE,
        number=409169462,
        message="ShieldedInstanceIntegrityPolicy",
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class SetSslCertificatesRegionTargetHttpsProxyRequest(proto.Message):
    r"""A request message for
    RegionTargetHttpsProxies.SetSslCertificates. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        region_target_https_proxies_set_ssl_certificates_request_resource (google.cloud.compute_v1.types.RegionTargetHttpsProxiesSetSslCertificatesRequest):
            The body resource for this request
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_https_proxy (str):
            Name of the TargetHttpsProxy resource to set
            an SslCertificates resource for.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    region_target_https_proxies_set_ssl_certificates_request_resource = proto.Field(
        proto.MESSAGE,
        number=390693383,
        message="RegionTargetHttpsProxiesSetSslCertificatesRequest",
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_https_proxy = proto.Field(
        proto.STRING,
        number=52336748,
    )


class SetSslCertificatesTargetHttpsProxyRequest(proto.Message):
    r"""A request message for TargetHttpsProxies.SetSslCertificates.
    See the method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_https_proxies_set_ssl_certificates_request_resource (google.cloud.compute_v1.types.TargetHttpsProxiesSetSslCertificatesRequest):
            The body resource for this request
        target_https_proxy (str):
            Name of the TargetHttpsProxy resource to set
            an SslCertificates resource for.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_https_proxies_set_ssl_certificates_request_resource = proto.Field(
        proto.MESSAGE,
        number=223122908,
        message="TargetHttpsProxiesSetSslCertificatesRequest",
    )
    target_https_proxy = proto.Field(
        proto.STRING,
        number=52336748,
    )


class SetSslCertificatesTargetSslProxyRequest(proto.Message):
    r"""A request message for TargetSslProxies.SetSslCertificates.
    See the method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_ssl_proxies_set_ssl_certificates_request_resource (google.cloud.compute_v1.types.TargetSslProxiesSetSslCertificatesRequest):
            The body resource for this request
        target_ssl_proxy (str):
            Name of the TargetSslProxy resource whose
            SslCertificate resource is to be set.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_ssl_proxies_set_ssl_certificates_request_resource = proto.Field(
        proto.MESSAGE,
        number=147940797,
        message="TargetSslProxiesSetSslCertificatesRequest",
    )
    target_ssl_proxy = proto.Field(
        proto.STRING,
        number=338795853,
    )


class SetSslPolicyTargetHttpsProxyRequest(proto.Message):
    r"""A request message for TargetHttpsProxies.SetSslPolicy. See
    the method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        ssl_policy_reference_resource (google.cloud.compute_v1.types.SslPolicyReference):
            The body resource for this request
        target_https_proxy (str):
            Name of the TargetHttpsProxy resource whose
            SSL policy is to be set. The name must be 1-63
            characters long, and comply with RFC1035.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    ssl_policy_reference_resource = proto.Field(
        proto.MESSAGE,
        number=235403836,
        message="SslPolicyReference",
    )
    target_https_proxy = proto.Field(
        proto.STRING,
        number=52336748,
    )


class SetSslPolicyTargetSslProxyRequest(proto.Message):
    r"""A request message for TargetSslProxies.SetSslPolicy. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        ssl_policy_reference_resource (google.cloud.compute_v1.types.SslPolicyReference):
            The body resource for this request
        target_ssl_proxy (str):
            Name of the TargetSslProxy resource whose SSL
            policy is to be set. The name must be 1-63
            characters long, and comply with RFC1035.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    ssl_policy_reference_resource = proto.Field(
        proto.MESSAGE,
        number=235403836,
        message="SslPolicyReference",
    )
    target_ssl_proxy = proto.Field(
        proto.STRING,
        number=338795853,
    )


class SetTagsInstanceRequest(proto.Message):
    r"""A request message for Instances.SetTags. See the method
    description for details.

    Attributes:
        instance (str):
            Name of the instance scoping this request.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        tags_resource (google.cloud.compute_v1.types.Tags):
            The body resource for this request
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance = proto.Field(
        proto.STRING,
        number=18257045,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    tags_resource = proto.Field(
        proto.MESSAGE,
        number=331435380,
        message="Tags",
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class SetTargetForwardingRuleRequest(proto.Message):
    r"""A request message for ForwardingRules.SetTarget. See the
    method description for details.

    Attributes:
        forwarding_rule (str):
            Name of the ForwardingRule resource in which
            target is to be set.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_reference_resource (google.cloud.compute_v1.types.TargetReference):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    forwarding_rule = proto.Field(
        proto.STRING,
        number=269964030,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_reference_resource = proto.Field(
        proto.MESSAGE,
        number=523721712,
        message="TargetReference",
    )


class SetTargetGlobalForwardingRuleRequest(proto.Message):
    r"""A request message for GlobalForwardingRules.SetTarget. See
    the method description for details.

    Attributes:
        forwarding_rule (str):
            Name of the ForwardingRule resource in which
            target is to be set.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_reference_resource (google.cloud.compute_v1.types.TargetReference):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    forwarding_rule = proto.Field(
        proto.STRING,
        number=269964030,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_reference_resource = proto.Field(
        proto.MESSAGE,
        number=523721712,
        message="TargetReference",
    )


class SetTargetPoolsInstanceGroupManagerRequest(proto.Message):
    r"""A request message for InstanceGroupManagers.SetTargetPools.
    See the method description for details.

    Attributes:
        instance_group_manager (str):
            The name of the managed instance group.
        instance_group_managers_set_target_pools_request_resource (google.cloud.compute_v1.types.InstanceGroupManagersSetTargetPoolsRequest):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone where the managed
            instance group is located.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_group_manager = proto.Field(
        proto.STRING,
        number=249363395,
    )
    instance_group_managers_set_target_pools_request_resource = proto.Field(
        proto.MESSAGE,
        number=281150216,
        message="InstanceGroupManagersSetTargetPoolsRequest",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class SetTargetPoolsRegionInstanceGroupManagerRequest(proto.Message):
    r"""A request message for
    RegionInstanceGroupManagers.SetTargetPools. See the method
    description for details.

    Attributes:
        instance_group_manager (str):
            Name of the managed instance group.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        region_instance_group_managers_set_target_pools_request_resource (google.cloud.compute_v1.types.RegionInstanceGroupManagersSetTargetPoolsRequest):
            The body resource for this request
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_group_manager = proto.Field(
        proto.STRING,
        number=249363395,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    region_instance_group_managers_set_target_pools_request_resource = proto.Field(
        proto.MESSAGE,
        number=78734717,
        message="RegionInstanceGroupManagersSetTargetPoolsRequest",
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class SetUrlMapRegionTargetHttpProxyRequest(proto.Message):
    r"""A request message for RegionTargetHttpProxies.SetUrlMap. See
    the method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_http_proxy (str):
            Name of the TargetHttpProxy to set a URL map
            for.
        url_map_reference_resource (google.cloud.compute_v1.types.UrlMapReference):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_http_proxy = proto.Field(
        proto.STRING,
        number=206872421,
    )
    url_map_reference_resource = proto.Field(
        proto.MESSAGE,
        number=398701333,
        message="UrlMapReference",
    )


class SetUrlMapRegionTargetHttpsProxyRequest(proto.Message):
    r"""A request message for RegionTargetHttpsProxies.SetUrlMap. See
    the method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_https_proxy (str):
            Name of the TargetHttpsProxy to set a URL map
            for.
        url_map_reference_resource (google.cloud.compute_v1.types.UrlMapReference):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_https_proxy = proto.Field(
        proto.STRING,
        number=52336748,
    )
    url_map_reference_resource = proto.Field(
        proto.MESSAGE,
        number=398701333,
        message="UrlMapReference",
    )


class SetUrlMapTargetHttpProxyRequest(proto.Message):
    r"""A request message for TargetHttpProxies.SetUrlMap. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_http_proxy (str):
            Name of the TargetHttpProxy to set a URL map
            for.
        url_map_reference_resource (google.cloud.compute_v1.types.UrlMapReference):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_http_proxy = proto.Field(
        proto.STRING,
        number=206872421,
    )
    url_map_reference_resource = proto.Field(
        proto.MESSAGE,
        number=398701333,
        message="UrlMapReference",
    )


class SetUrlMapTargetHttpsProxyRequest(proto.Message):
    r"""A request message for TargetHttpsProxies.SetUrlMap. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        target_https_proxy (str):
            Name of the TargetHttpsProxy resource whose
            URL map is to be set.
        url_map_reference_resource (google.cloud.compute_v1.types.UrlMapReference):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    target_https_proxy = proto.Field(
        proto.STRING,
        number=52336748,
    )
    url_map_reference_resource = proto.Field(
        proto.MESSAGE,
        number=398701333,
        message="UrlMapReference",
    )


class SetUsageExportBucketProjectRequest(proto.Message):
    r"""A request message for Projects.SetUsageExportBucket. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        usage_export_location_resource (google.cloud.compute_v1.types.UsageExportLocation):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    usage_export_location_resource = proto.Field(
        proto.MESSAGE,
        number=20260459,
        message="UsageExportLocation",
    )


class SimulateMaintenanceEventInstanceRequest(proto.Message):
    r"""A request message for Instances.SimulateMaintenanceEvent. See
    the method description for details.

    Attributes:
        instance (str):
            Name of the instance scoping this request.
        project (str):
            Project ID for this request.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance = proto.Field(
        proto.STRING,
        number=18257045,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class StartInstanceRequest(proto.Message):
    r"""A request message for Instances.Start. See the method
    description for details.

    Attributes:
        instance (str):
            Name of the instance resource to start.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance = proto.Field(
        proto.STRING,
        number=18257045,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class StartWithEncryptionKeyInstanceRequest(proto.Message):
    r"""A request message for Instances.StartWithEncryptionKey. See
    the method description for details.

    Attributes:
        instance (str):
            Name of the instance resource to start.
        instances_start_with_encryption_key_request_resource (google.cloud.compute_v1.types.InstancesStartWithEncryptionKeyRequest):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance = proto.Field(
        proto.STRING,
        number=18257045,
    )
    instances_start_with_encryption_key_request_resource = proto.Field(
        proto.MESSAGE,
        number=441712511,
        message="InstancesStartWithEncryptionKeyRequest",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class StopInstanceRequest(proto.Message):
    r"""A request message for Instances.Stop. See the method
    description for details.

    Attributes:
        instance (str):
            Name of the instance resource to stop.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance = proto.Field(
        proto.STRING,
        number=18257045,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class SubnetworksExpandIpCidrRangeRequest(proto.Message):
    r"""

    Attributes:
        ip_cidr_range (str):
            The IP (in CIDR format or netmask) of
            internal addresses that are legal on this
            Subnetwork. This range should be disjoint from
            other subnetworks within this network. This
            range can only be larger than (i.e. a superset
            of) the range previously defined before the
            update.

            This field is a member of `oneof`_ ``_ip_cidr_range``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    ip_cidr_range = proto.Field(
        proto.STRING,
        number=98117322,
        optional=True,
    )


class SubnetworksSetPrivateIpGoogleAccessRequest(proto.Message):
    r"""

    Attributes:
        private_ip_google_access (bool):

            This field is a member of `oneof`_ ``_private_ip_google_access``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    private_ip_google_access = proto.Field(
        proto.BOOL,
        number=421491790,
        optional=True,
    )


class SuspendInstanceRequest(proto.Message):
    r"""A request message for Instances.Suspend. See the method
    description for details.

    Attributes:
        instance (str):
            Name of the instance resource to suspend.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance = proto.Field(
        proto.STRING,
        number=18257045,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class SwitchToCustomModeNetworkRequest(proto.Message):
    r"""A request message for Networks.SwitchToCustomMode. See the
    method description for details.

    Attributes:
        network (str):
            Name of the network to be updated.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    network = proto.Field(
        proto.STRING,
        number=232872494,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class TargetHttpsProxiesSetCertificateMapRequest(proto.Message):
    r"""

    Attributes:
        certificate_map (str):
            URL of the Certificate Map to associate with
            this TargetHttpsProxy.

            This field is a member of `oneof`_ ``_certificate_map``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    certificate_map = proto.Field(
        proto.STRING,
        number=156463796,
        optional=True,
    )


class TargetHttpsProxiesSetQuicOverrideRequest(proto.Message):
    r"""

    Attributes:
        quic_override (str):
            QUIC policy for the TargetHttpsProxy
            resource. Check the QuicOverride enum for the
            list of possible values.

            This field is a member of `oneof`_ ``_quic_override``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    class QuicOverride(proto.Enum):
        r"""QUIC policy for the TargetHttpsProxy resource."""
        __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore
        UNDEFINED_QUIC_OVERRIDE = 0
        DISABLE = 241807048
        ENABLE = 438835587
        NONE = 2402104

    quic_override = proto.Field(
        proto.STRING,
        number=456577197,
        optional=True,
    )


class TargetHttpsProxiesSetSslCertificatesRequest(proto.Message):
    r"""

    Attributes:
        ssl_certificates (Sequence[str]):
            New set of SslCertificate resources to
            associate with this TargetHttpsProxy resource.
            At least one SSL certificate must be specified.
            Currently, you may specify up to 15 SSL
            certificates.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    ssl_certificates = proto.RepeatedField(
        proto.STRING,
        number=366006543,
    )


class TargetPoolsAddHealthCheckRequest(proto.Message):
    r"""

    Attributes:
        health_checks (Sequence[google.cloud.compute_v1.types.HealthCheckReference]):
            The HttpHealthCheck to add to the target
            pool.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    health_checks = proto.RepeatedField(
        proto.MESSAGE,
        number=448370606,
        message="HealthCheckReference",
    )


class TargetPoolsAddInstanceRequest(proto.Message):
    r"""

    Attributes:
        instances (Sequence[google.cloud.compute_v1.types.InstanceReference]):
            A full or partial URL to an instance to add
            to this target pool. This can be a full or
            partial URL. For example, the following are
            valid URLs: -
            https://www.googleapis.com/compute/v1/projects/project-id/zones/zone
            /instances/instance-name -
            projects/project-id/zones/zone/instances/instance-name
            - zones/zone/instances/instance-name
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instances = proto.RepeatedField(
        proto.MESSAGE,
        number=29097598,
        message="InstanceReference",
    )


class TargetPoolsRemoveHealthCheckRequest(proto.Message):
    r"""

    Attributes:
        health_checks (Sequence[google.cloud.compute_v1.types.HealthCheckReference]):
            Health check URL to be removed. This can be a
            full or valid partial URL. For example, the
            following are valid URLs: -
            https://www.googleapis.com/compute/beta/projects/project
            /global/httpHealthChecks/health-check -
            projects/project/global/httpHealthChecks/health-check
            - global/httpHealthChecks/health-check
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    health_checks = proto.RepeatedField(
        proto.MESSAGE,
        number=448370606,
        message="HealthCheckReference",
    )


class TargetPoolsRemoveInstanceRequest(proto.Message):
    r"""

    Attributes:
        instances (Sequence[google.cloud.compute_v1.types.InstanceReference]):
            URLs of the instances to be removed from
            target pool.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instances = proto.RepeatedField(
        proto.MESSAGE,
        number=29097598,
        message="InstanceReference",
    )


class TargetSslProxiesSetBackendServiceRequest(proto.Message):
    r"""

    Attributes:
        service (str):
            The URL of the new BackendService resource
            for the targetSslProxy.

            This field is a member of `oneof`_ ``_service``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    service = proto.Field(
        proto.STRING,
        number=373540533,
        optional=True,
    )


class TargetSslProxiesSetCertificateMapRequest(proto.Message):
    r"""

    Attributes:
        certificate_map (str):
            URL of the Certificate Map to associate with
            this TargetSslProxy.

            This field is a member of `oneof`_ ``_certificate_map``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    certificate_map = proto.Field(
        proto.STRING,
        number=156463796,
        optional=True,
    )


class TargetSslProxiesSetProxyHeaderRequest(proto.Message):
    r"""

    Attributes:
        proxy_header (str):
            The new type of proxy header to append before sending data
            to the backend. NONE or PROXY_V1 are allowed. Check the
            ProxyHeader enum for the list of possible values.

            This field is a member of `oneof`_ ``_proxy_header``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    class ProxyHeader(proto.Enum):
        r"""The new type of proxy header to append before sending data to the
        backend. NONE or PROXY_V1 are allowed.
        """
        __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore
        UNDEFINED_PROXY_HEADER = 0
        NONE = 2402104
        PROXY_V1 = 334352940

    proxy_header = proto.Field(
        proto.STRING,
        number=160374142,
        optional=True,
    )


class TargetSslProxiesSetSslCertificatesRequest(proto.Message):
    r"""

    Attributes:
        ssl_certificates (Sequence[str]):
            New set of URLs to SslCertificate resources
            to associate with this TargetSslProxy. At least
            one SSL certificate must be specified.
            Currently, you may specify up to 15 SSL
            certificates.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    ssl_certificates = proto.RepeatedField(
        proto.STRING,
        number=366006543,
    )


class TargetTcpProxiesSetBackendServiceRequest(proto.Message):
    r"""

    Attributes:
        service (str):
            The URL of the new BackendService resource
            for the targetTcpProxy.

            This field is a member of `oneof`_ ``_service``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    service = proto.Field(
        proto.STRING,
        number=373540533,
        optional=True,
    )


class TargetTcpProxiesSetProxyHeaderRequest(proto.Message):
    r"""

    Attributes:
        proxy_header (str):
            The new type of proxy header to append before sending data
            to the backend. NONE or PROXY_V1 are allowed. Check the
            ProxyHeader enum for the list of possible values.

            This field is a member of `oneof`_ ``_proxy_header``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    class ProxyHeader(proto.Enum):
        r"""The new type of proxy header to append before sending data to the
        backend. NONE or PROXY_V1 are allowed.
        """
        __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore
        UNDEFINED_PROXY_HEADER = 0
        NONE = 2402104
        PROXY_V1 = 334352940

    proxy_header = proto.Field(
        proto.STRING,
        number=160374142,
        optional=True,
    )


class TestIamPermissionsDiskRequest(proto.Message):
    r"""A request message for Disks.TestIamPermissions. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        resource (str):
            Name or id of the resource for this request.
        test_permissions_request_resource (google.cloud.compute_v1.types.TestPermissionsRequest):
            The body resource for this request
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )
    test_permissions_request_resource = proto.Field(
        proto.MESSAGE,
        number=439214758,
        message="TestPermissionsRequest",
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class TestIamPermissionsExternalVpnGatewayRequest(proto.Message):
    r"""A request message for ExternalVpnGateways.TestIamPermissions.
    See the method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        resource (str):
            Name or id of the resource for this request.
        test_permissions_request_resource (google.cloud.compute_v1.types.TestPermissionsRequest):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )
    test_permissions_request_resource = proto.Field(
        proto.MESSAGE,
        number=439214758,
        message="TestPermissionsRequest",
    )


class TestIamPermissionsFirewallPolicyRequest(proto.Message):
    r"""A request message for FirewallPolicies.TestIamPermissions.
    See the method description for details.

    Attributes:
        resource (str):
            Name or id of the resource for this request.
        test_permissions_request_resource (google.cloud.compute_v1.types.TestPermissionsRequest):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )
    test_permissions_request_resource = proto.Field(
        proto.MESSAGE,
        number=439214758,
        message="TestPermissionsRequest",
    )


class TestIamPermissionsImageRequest(proto.Message):
    r"""A request message for Images.TestIamPermissions. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        resource (str):
            Name or id of the resource for this request.
        test_permissions_request_resource (google.cloud.compute_v1.types.TestPermissionsRequest):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )
    test_permissions_request_resource = proto.Field(
        proto.MESSAGE,
        number=439214758,
        message="TestPermissionsRequest",
    )


class TestIamPermissionsInstanceRequest(proto.Message):
    r"""A request message for Instances.TestIamPermissions. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        resource (str):
            Name or id of the resource for this request.
        test_permissions_request_resource (google.cloud.compute_v1.types.TestPermissionsRequest):
            The body resource for this request
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )
    test_permissions_request_resource = proto.Field(
        proto.MESSAGE,
        number=439214758,
        message="TestPermissionsRequest",
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class TestIamPermissionsInstanceTemplateRequest(proto.Message):
    r"""A request message for InstanceTemplates.TestIamPermissions.
    See the method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        resource (str):
            Name or id of the resource for this request.
        test_permissions_request_resource (google.cloud.compute_v1.types.TestPermissionsRequest):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )
    test_permissions_request_resource = proto.Field(
        proto.MESSAGE,
        number=439214758,
        message="TestPermissionsRequest",
    )


class TestIamPermissionsLicenseCodeRequest(proto.Message):
    r"""A request message for LicenseCodes.TestIamPermissions. See
    the method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        resource (str):
            Name or id of the resource for this request.
        test_permissions_request_resource (google.cloud.compute_v1.types.TestPermissionsRequest):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )
    test_permissions_request_resource = proto.Field(
        proto.MESSAGE,
        number=439214758,
        message="TestPermissionsRequest",
    )


class TestIamPermissionsLicenseRequest(proto.Message):
    r"""A request message for Licenses.TestIamPermissions. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        resource (str):
            Name or id of the resource for this request.
        test_permissions_request_resource (google.cloud.compute_v1.types.TestPermissionsRequest):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )
    test_permissions_request_resource = proto.Field(
        proto.MESSAGE,
        number=439214758,
        message="TestPermissionsRequest",
    )


class TestIamPermissionsMachineImageRequest(proto.Message):
    r"""A request message for MachineImages.TestIamPermissions. See
    the method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        resource (str):
            Name or id of the resource for this request.
        test_permissions_request_resource (google.cloud.compute_v1.types.TestPermissionsRequest):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )
    test_permissions_request_resource = proto.Field(
        proto.MESSAGE,
        number=439214758,
        message="TestPermissionsRequest",
    )


class TestIamPermissionsNetworkEndpointGroupRequest(proto.Message):
    r"""A request message for
    NetworkEndpointGroups.TestIamPermissions. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        resource (str):
            Name or id of the resource for this request.
        test_permissions_request_resource (google.cloud.compute_v1.types.TestPermissionsRequest):
            The body resource for this request
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )
    test_permissions_request_resource = proto.Field(
        proto.MESSAGE,
        number=439214758,
        message="TestPermissionsRequest",
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class TestIamPermissionsNetworkFirewallPolicyRequest(proto.Message):
    r"""A request message for
    NetworkFirewallPolicies.TestIamPermissions. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        resource (str):
            Name or id of the resource for this request.
        test_permissions_request_resource (google.cloud.compute_v1.types.TestPermissionsRequest):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )
    test_permissions_request_resource = proto.Field(
        proto.MESSAGE,
        number=439214758,
        message="TestPermissionsRequest",
    )


class TestIamPermissionsNodeGroupRequest(proto.Message):
    r"""A request message for NodeGroups.TestIamPermissions. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        resource (str):
            Name or id of the resource for this request.
        test_permissions_request_resource (google.cloud.compute_v1.types.TestPermissionsRequest):
            The body resource for this request
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )
    test_permissions_request_resource = proto.Field(
        proto.MESSAGE,
        number=439214758,
        message="TestPermissionsRequest",
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class TestIamPermissionsNodeTemplateRequest(proto.Message):
    r"""A request message for NodeTemplates.TestIamPermissions. See
    the method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            The name of the region for this request.
        resource (str):
            Name or id of the resource for this request.
        test_permissions_request_resource (google.cloud.compute_v1.types.TestPermissionsRequest):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )
    test_permissions_request_resource = proto.Field(
        proto.MESSAGE,
        number=439214758,
        message="TestPermissionsRequest",
    )


class TestIamPermissionsPacketMirroringRequest(proto.Message):
    r"""A request message for PacketMirrorings.TestIamPermissions.
    See the method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            The name of the region for this request.
        resource (str):
            Name or id of the resource for this request.
        test_permissions_request_resource (google.cloud.compute_v1.types.TestPermissionsRequest):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )
    test_permissions_request_resource = proto.Field(
        proto.MESSAGE,
        number=439214758,
        message="TestPermissionsRequest",
    )


class TestIamPermissionsRegionDiskRequest(proto.Message):
    r"""A request message for RegionDisks.TestIamPermissions. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            The name of the region for this request.
        resource (str):
            Name or id of the resource for this request.
        test_permissions_request_resource (google.cloud.compute_v1.types.TestPermissionsRequest):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )
    test_permissions_request_resource = proto.Field(
        proto.MESSAGE,
        number=439214758,
        message="TestPermissionsRequest",
    )


class TestIamPermissionsRegionNetworkFirewallPolicyRequest(proto.Message):
    r"""A request message for
    RegionNetworkFirewallPolicies.TestIamPermissions. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            The name of the region for this request.
        resource (str):
            Name or id of the resource for this request.
        test_permissions_request_resource (google.cloud.compute_v1.types.TestPermissionsRequest):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )
    test_permissions_request_resource = proto.Field(
        proto.MESSAGE,
        number=439214758,
        message="TestPermissionsRequest",
    )


class TestIamPermissionsReservationRequest(proto.Message):
    r"""A request message for Reservations.TestIamPermissions. See
    the method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        resource (str):
            Name or id of the resource for this request.
        test_permissions_request_resource (google.cloud.compute_v1.types.TestPermissionsRequest):
            The body resource for this request
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )
    test_permissions_request_resource = proto.Field(
        proto.MESSAGE,
        number=439214758,
        message="TestPermissionsRequest",
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class TestIamPermissionsResourcePolicyRequest(proto.Message):
    r"""A request message for ResourcePolicies.TestIamPermissions.
    See the method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            The name of the region for this request.
        resource (str):
            Name or id of the resource for this request.
        test_permissions_request_resource (google.cloud.compute_v1.types.TestPermissionsRequest):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )
    test_permissions_request_resource = proto.Field(
        proto.MESSAGE,
        number=439214758,
        message="TestPermissionsRequest",
    )


class TestIamPermissionsServiceAttachmentRequest(proto.Message):
    r"""A request message for ServiceAttachments.TestIamPermissions.
    See the method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            The name of the region for this request.
        resource (str):
            Name or id of the resource for this request.
        test_permissions_request_resource (google.cloud.compute_v1.types.TestPermissionsRequest):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )
    test_permissions_request_resource = proto.Field(
        proto.MESSAGE,
        number=439214758,
        message="TestPermissionsRequest",
    )


class TestIamPermissionsSnapshotRequest(proto.Message):
    r"""A request message for Snapshots.TestIamPermissions. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        resource (str):
            Name or id of the resource for this request.
        test_permissions_request_resource (google.cloud.compute_v1.types.TestPermissionsRequest):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )
    test_permissions_request_resource = proto.Field(
        proto.MESSAGE,
        number=439214758,
        message="TestPermissionsRequest",
    )


class TestIamPermissionsSubnetworkRequest(proto.Message):
    r"""A request message for Subnetworks.TestIamPermissions. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            The name of the region for this request.
        resource (str):
            Name or id of the resource for this request.
        test_permissions_request_resource (google.cloud.compute_v1.types.TestPermissionsRequest):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )
    test_permissions_request_resource = proto.Field(
        proto.MESSAGE,
        number=439214758,
        message="TestPermissionsRequest",
    )


class TestIamPermissionsVpnGatewayRequest(proto.Message):
    r"""A request message for VpnGateways.TestIamPermissions. See the
    method description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            The name of the region for this request.
        resource (str):
            Name or id of the resource for this request.
        test_permissions_request_resource (google.cloud.compute_v1.types.TestPermissionsRequest):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    resource = proto.Field(
        proto.STRING,
        number=195806222,
    )
    test_permissions_request_resource = proto.Field(
        proto.MESSAGE,
        number=439214758,
        message="TestPermissionsRequest",
    )


class TestPermissionsRequest(proto.Message):
    r"""

    Attributes:
        permissions (Sequence[str]):
            The set of permissions to check for the 'resource'.
            Permissions with wildcards (such as '*' or 'storage.*') are
            not allowed.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    permissions = proto.RepeatedField(
        proto.STRING,
        number=59962500,
    )


class UpdateAccessConfigInstanceRequest(proto.Message):
    r"""A request message for Instances.UpdateAccessConfig. See the
    method description for details.

    Attributes:
        access_config_resource (google.cloud.compute_v1.types.AccessConfig):
            The body resource for this request
        instance (str):
            The instance name for this request.
        network_interface (str):
            The name of the network interface where the
            access config is attached.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    access_config_resource = proto.Field(
        proto.MESSAGE,
        number=387825552,
        message="AccessConfig",
    )
    instance = proto.Field(
        proto.STRING,
        number=18257045,
    )
    network_interface = proto.Field(
        proto.STRING,
        number=365387880,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class UpdateAutoscalerRequest(proto.Message):
    r"""A request message for Autoscalers.Update. See the method
    description for details.

    Attributes:
        autoscaler (str):
            Name of the autoscaler to update.

            This field is a member of `oneof`_ ``_autoscaler``.
        autoscaler_resource (google.cloud.compute_v1.types.Autoscaler):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            Name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    autoscaler = proto.Field(
        proto.STRING,
        number=517258967,
        optional=True,
    )
    autoscaler_resource = proto.Field(
        proto.MESSAGE,
        number=207616118,
        message="Autoscaler",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class UpdateBackendBucketRequest(proto.Message):
    r"""A request message for BackendBuckets.Update. See the method
    description for details.

    Attributes:
        backend_bucket (str):
            Name of the BackendBucket resource to update.
        backend_bucket_resource (google.cloud.compute_v1.types.BackendBucket):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    backend_bucket = proto.Field(
        proto.STRING,
        number=91714037,
    )
    backend_bucket_resource = proto.Field(
        proto.MESSAGE,
        number=380757784,
        message="BackendBucket",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class UpdateBackendServiceRequest(proto.Message):
    r"""A request message for BackendServices.Update. See the method
    description for details.

    Attributes:
        backend_service (str):
            Name of the BackendService resource to
            update.
        backend_service_resource (google.cloud.compute_v1.types.BackendService):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    backend_service = proto.Field(
        proto.STRING,
        number=306946058,
    )
    backend_service_resource = proto.Field(
        proto.MESSAGE,
        number=347586723,
        message="BackendService",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class UpdateDisplayDeviceInstanceRequest(proto.Message):
    r"""A request message for Instances.UpdateDisplayDevice. See the
    method description for details.

    Attributes:
        display_device_resource (google.cloud.compute_v1.types.DisplayDevice):
            The body resource for this request
        instance (str):
            Name of the instance scoping this request.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    display_device_resource = proto.Field(
        proto.MESSAGE,
        number=289686106,
        message="DisplayDevice",
    )
    instance = proto.Field(
        proto.STRING,
        number=18257045,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class UpdateFirewallRequest(proto.Message):
    r"""A request message for Firewalls.Update. See the method
    description for details.

    Attributes:
        firewall (str):
            Name of the firewall rule to update.
        firewall_resource (google.cloud.compute_v1.types.Firewall):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    firewall = proto.Field(
        proto.STRING,
        number=511016192,
    )
    firewall_resource = proto.Field(
        proto.MESSAGE,
        number=41425005,
        message="Firewall",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class UpdateHealthCheckRequest(proto.Message):
    r"""A request message for HealthChecks.Update. See the method
    description for details.

    Attributes:
        health_check (str):
            Name of the HealthCheck resource to update.
        health_check_resource (google.cloud.compute_v1.types.HealthCheck):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    health_check = proto.Field(
        proto.STRING,
        number=308876645,
    )
    health_check_resource = proto.Field(
        proto.MESSAGE,
        number=201925032,
        message="HealthCheck",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class UpdateInstanceRequest(proto.Message):
    r"""A request message for Instances.Update. See the method
    description for details.

    Attributes:
        instance (str):
            Name of the instance resource to update.
        instance_resource (google.cloud.compute_v1.types.Instance):
            The body resource for this request
        minimal_action (str):
            Specifies the action to take when updating an
            instance even if the updated properties do not
            require it. If not specified, then Compute
            Engine acts based on the minimum action that the
            updated properties require. Check the
            MinimalAction enum for the list of possible
            values.

            This field is a member of `oneof`_ ``_minimal_action``.
        most_disruptive_allowed_action (str):
            Specifies the most disruptive action that can be taken on
            the instance as part of the update. Compute Engine returns
            an error if the instance properties require a more
            disruptive action as part of the instance update. Valid
            options from lowest to highest are NO_EFFECT, REFRESH, and
            RESTART. Check the MostDisruptiveAllowedAction enum for the
            list of possible values.

            This field is a member of `oneof`_ ``_most_disruptive_allowed_action``.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    class MinimalAction(proto.Enum):
        r"""Specifies the action to take when updating an instance even if the
        updated properties do not require it. If not specified, then Compute
        Engine acts based on the minimum action that the updated properties
        require. Additional supported values which may be not listed in the
        enum directly due to technical reasons: INVALID NO_EFFECT REFRESH
        RESTART
        """
        __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore
        UNDEFINED_MINIMAL_ACTION = 0

    class MostDisruptiveAllowedAction(proto.Enum):
        r"""Specifies the most disruptive action that can be taken on the
        instance as part of the update. Compute Engine returns an error if
        the instance properties require a more disruptive action as part of
        the instance update. Valid options from lowest to highest are
        NO_EFFECT, REFRESH, and RESTART. Additional supported values which
        may be not listed in the enum directly due to technical reasons:
        INVALID NO_EFFECT REFRESH RESTART
        """
        __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore
        UNDEFINED_MOST_DISRUPTIVE_ALLOWED_ACTION = 0

    instance = proto.Field(
        proto.STRING,
        number=18257045,
    )
    instance_resource = proto.Field(
        proto.MESSAGE,
        number=215988344,
        message="Instance",
    )
    minimal_action = proto.Field(
        proto.STRING,
        number=270567060,
        optional=True,
    )
    most_disruptive_allowed_action = proto.Field(
        proto.STRING,
        number=66103053,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class UpdateNetworkInterfaceInstanceRequest(proto.Message):
    r"""A request message for Instances.UpdateNetworkInterface. See
    the method description for details.

    Attributes:
        instance (str):
            The instance name for this request.
        network_interface (str):
            The name of the network interface to update.
        network_interface_resource (google.cloud.compute_v1.types.NetworkInterface):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance = proto.Field(
        proto.STRING,
        number=18257045,
    )
    network_interface = proto.Field(
        proto.STRING,
        number=365387880,
    )
    network_interface_resource = proto.Field(
        proto.MESSAGE,
        number=325814789,
        message="NetworkInterface",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class UpdatePeeringNetworkRequest(proto.Message):
    r"""A request message for Networks.UpdatePeering. See the method
    description for details.

    Attributes:
        network (str):
            Name of the network resource which the
            updated peering is belonging to.
        networks_update_peering_request_resource (google.cloud.compute_v1.types.NetworksUpdatePeeringRequest):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    network = proto.Field(
        proto.STRING,
        number=232872494,
    )
    networks_update_peering_request_resource = proto.Field(
        proto.MESSAGE,
        number=224433497,
        message="NetworksUpdatePeeringRequest",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class UpdatePerInstanceConfigsInstanceGroupManagerRequest(proto.Message):
    r"""A request message for
    InstanceGroupManagers.UpdatePerInstanceConfigs. See the method
    description for details.

    Attributes:
        instance_group_manager (str):
            The name of the managed instance group. It
            should conform to RFC1035.
        instance_group_managers_update_per_instance_configs_req_resource (google.cloud.compute_v1.types.InstanceGroupManagersUpdatePerInstanceConfigsReq):
            The body resource for this request
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        zone (str):
            The name of the zone where the managed
            instance group is located. It should conform to
            RFC1035.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_group_manager = proto.Field(
        proto.STRING,
        number=249363395,
    )
    instance_group_managers_update_per_instance_configs_req_resource = proto.Field(
        proto.MESSAGE,
        number=141402302,
        message="InstanceGroupManagersUpdatePerInstanceConfigsReq",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class UpdatePerInstanceConfigsRegionInstanceGroupManagerRequest(proto.Message):
    r"""A request message for
    RegionInstanceGroupManagers.UpdatePerInstanceConfigs. See the
    method description for details.

    Attributes:
        instance_group_manager (str):
            The name of the managed instance group. It
            should conform to RFC1035.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request,
            should conform to RFC1035.
        region_instance_group_manager_update_instance_config_req_resource (google.cloud.compute_v1.types.RegionInstanceGroupManagerUpdateInstanceConfigReq):
            The body resource for this request
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance_group_manager = proto.Field(
        proto.STRING,
        number=249363395,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    region_instance_group_manager_update_instance_config_req_resource = proto.Field(
        proto.MESSAGE,
        number=89036583,
        message="RegionInstanceGroupManagerUpdateInstanceConfigReq",
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class UpdateRegionAutoscalerRequest(proto.Message):
    r"""A request message for RegionAutoscalers.Update. See the
    method description for details.

    Attributes:
        autoscaler (str):
            Name of the autoscaler to update.

            This field is a member of `oneof`_ ``_autoscaler``.
        autoscaler_resource (google.cloud.compute_v1.types.Autoscaler):
            The body resource for this request
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    autoscaler = proto.Field(
        proto.STRING,
        number=517258967,
        optional=True,
    )
    autoscaler_resource = proto.Field(
        proto.MESSAGE,
        number=207616118,
        message="Autoscaler",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class UpdateRegionBackendServiceRequest(proto.Message):
    r"""A request message for RegionBackendServices.Update. See the
    method description for details.

    Attributes:
        backend_service (str):
            Name of the BackendService resource to
            update.
        backend_service_resource (google.cloud.compute_v1.types.BackendService):
            The body resource for this request
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    backend_service = proto.Field(
        proto.STRING,
        number=306946058,
    )
    backend_service_resource = proto.Field(
        proto.MESSAGE,
        number=347586723,
        message="BackendService",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class UpdateRegionCommitmentRequest(proto.Message):
    r"""A request message for RegionCommitments.Update. See the
    method description for details.

    Attributes:
        commitment (str):
            Name of the commitment for which auto renew
            is being updated.
        commitment_resource (google.cloud.compute_v1.types.Commitment):
            The body resource for this request
        paths (str):

            This field is a member of `oneof`_ ``_paths``.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        update_mask (str):
            update_mask indicates fields to be updated as part of this
            request.

            This field is a member of `oneof`_ ``_update_mask``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    commitment = proto.Field(
        proto.STRING,
        number=482134805,
    )
    commitment_resource = proto.Field(
        proto.MESSAGE,
        number=244240888,
        message="Commitment",
    )
    paths = proto.Field(
        proto.STRING,
        number=106438894,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    update_mask = proto.Field(
        proto.STRING,
        number=500079778,
        optional=True,
    )


class UpdateRegionHealthCheckRequest(proto.Message):
    r"""A request message for RegionHealthChecks.Update. See the
    method description for details.

    Attributes:
        health_check (str):
            Name of the HealthCheck resource to update.
        health_check_resource (google.cloud.compute_v1.types.HealthCheck):
            The body resource for this request
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    health_check = proto.Field(
        proto.STRING,
        number=308876645,
    )
    health_check_resource = proto.Field(
        proto.MESSAGE,
        number=201925032,
        message="HealthCheck",
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )


class UpdateRegionUrlMapRequest(proto.Message):
    r"""A request message for RegionUrlMaps.Update. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        request_id (str):
            begin_interface: MixerMutationRequestBuilder Request ID to
            support idempotency.

            This field is a member of `oneof`_ ``_request_id``.
        url_map (str):
            Name of the UrlMap resource to update.
        url_map_resource (google.cloud.compute_v1.types.UrlMap):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    url_map = proto.Field(
        proto.STRING,
        number=367020684,
    )
    url_map_resource = proto.Field(
        proto.MESSAGE,
        number=168675425,
        message="UrlMap",
    )


class UpdateReservationRequest(proto.Message):
    r"""A request message for Reservations.Update. See the method
    description for details.

    Attributes:
        paths (str):

            This field is a member of `oneof`_ ``_paths``.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        reservation (str):
            Name of the reservation to update.
        reservation_resource (google.cloud.compute_v1.types.Reservation):
            The body resource for this request
        update_mask (str):
            Update_mask indicates fields to be updated as part of this
            request.

            This field is a member of `oneof`_ ``_update_mask``.
        zone (str):
            Name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    paths = proto.Field(
        proto.STRING,
        number=106438894,
        optional=True,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    reservation = proto.Field(
        proto.STRING,
        number=47530956,
    )
    reservation_resource = proto.Field(
        proto.MESSAGE,
        number=285030177,
        message="Reservation",
    )
    update_mask = proto.Field(
        proto.STRING,
        number=500079778,
        optional=True,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class UpdateRouterRequest(proto.Message):
    r"""A request message for Routers.Update. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        router (str):
            Name of the Router resource to update.
        router_resource (google.cloud.compute_v1.types.Router):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    router = proto.Field(
        proto.STRING,
        number=148608841,
    )
    router_resource = proto.Field(
        proto.MESSAGE,
        number=155222084,
        message="Router",
    )


class UpdateShieldedInstanceConfigInstanceRequest(proto.Message):
    r"""A request message for Instances.UpdateShieldedInstanceConfig.
    See the method description for details.

    Attributes:
        instance (str):
            Name or id of the instance scoping this
            request.
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        shielded_instance_config_resource (google.cloud.compute_v1.types.ShieldedInstanceConfig):
            The body resource for this request
        zone (str):
            The name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    instance = proto.Field(
        proto.STRING,
        number=18257045,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    shielded_instance_config_resource = proto.Field(
        proto.MESSAGE,
        number=272059224,
        message="ShieldedInstanceConfig",
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class UpdateUrlMapRequest(proto.Message):
    r"""A request message for UrlMaps.Update. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        request_id (str):
            An optional request ID to identify requests.
            Specify a unique request ID so that if you must
            retry your request, the server will know to
            ignore the request if it has already been
            completed. For example, consider a situation
            where you make an initial request and the
            request times out. If you make the request again
            with the same request ID, the server can check
            if original operation with the same request ID
            was received, and if so, will ignore the second
            request. This prevents clients from accidentally
            creating duplicate commitments. The request ID
            must be a valid UUID with the exception that
            zero UUID is not supported (
            00000000-0000-0000-0000-000000000000).

            This field is a member of `oneof`_ ``_request_id``.
        url_map (str):
            Name of the UrlMap resource to update.
        url_map_resource (google.cloud.compute_v1.types.UrlMap):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    request_id = proto.Field(
        proto.STRING,
        number=37109963,
        optional=True,
    )
    url_map = proto.Field(
        proto.STRING,
        number=367020684,
    )
    url_map_resource = proto.Field(
        proto.MESSAGE,
        number=168675425,
        message="UrlMap",
    )


class UrlMapsValidateRequest(proto.Message):
    r"""

    Attributes:
        load_balancing_schemes (Sequence[str]):
            Specifies the load balancer type(s) this validation request
            is for. Use EXTERNAL_MANAGED for HTTP/HTTPS External Global
            Load Balancer with Advanced Traffic Management. Use EXTERNAL
            for Classic HTTP/HTTPS External Global Load Balancer. Other
            load balancer types are not supported. For more information,
            refer to Choosing a load balancer. If unspecified, the load
            balancing scheme will be inferred from the backend service
            resources this URL map references. If that can not be
            inferred (for example, this URL map only references backend
            buckets, or this Url map is for rewrites and redirects only
            and doesn't reference any backends), EXTERNAL will be used
            as the default type. If specified, the scheme(s) must not
            conflict with the load balancing scheme of the backend
            service resources this Url map references. Check the
            LoadBalancingSchemes enum for the list of possible values.
        resource (google.cloud.compute_v1.types.UrlMap):
            Content of the UrlMap to be validated.

            This field is a member of `oneof`_ ``_resource``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    class LoadBalancingSchemes(proto.Enum):
        r""""""
        __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore
        UNDEFINED_LOAD_BALANCING_SCHEMES = 0
        EXTERNAL = 35607499
        EXTERNAL_MANAGED = 512006923
        LOAD_BALANCING_SCHEME_UNSPECIFIED = 526507452

    load_balancing_schemes = proto.RepeatedField(
        proto.STRING,
        number=6308527,
    )
    resource = proto.Field(
        proto.MESSAGE,
        number=195806222,
        optional=True,
        message="UrlMap",
    )


class ValidateRegionUrlMapRequest(proto.Message):
    r"""A request message for RegionUrlMaps.Validate. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        region (str):
            Name of the region scoping this request.
        region_url_maps_validate_request_resource (google.cloud.compute_v1.types.RegionUrlMapsValidateRequest):
            The body resource for this request
        url_map (str):
            Name of the UrlMap resource to be validated
            as.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )
    region_url_maps_validate_request_resource = proto.Field(
        proto.MESSAGE,
        number=56632858,
        message="RegionUrlMapsValidateRequest",
    )
    url_map = proto.Field(
        proto.STRING,
        number=367020684,
    )


class ValidateUrlMapRequest(proto.Message):
    r"""A request message for UrlMaps.Validate. See the method
    description for details.

    Attributes:
        project (str):
            Project ID for this request.
        url_map (str):
            Name of the UrlMap resource to be validated
            as.
        url_maps_validate_request_resource (google.cloud.compute_v1.types.UrlMapsValidateRequest):
            The body resource for this request
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    url_map = proto.Field(
        proto.STRING,
        number=367020684,
    )
    url_maps_validate_request_resource = proto.Field(
        proto.MESSAGE,
        number=395913455,
        message="UrlMapsValidateRequest",
    )


class WaitGlobalOperationRequest(proto.Message):
    r"""A request message for GlobalOperations.Wait. See the method
    description for details.

    Attributes:
        operation (str):
            Name of the Operations resource to return.
        project (str):
            Project ID for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    operation = proto.Field(
        proto.STRING,
        number=52090215,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )


class WaitRegionOperationRequest(proto.Message):
    r"""A request message for RegionOperations.Wait. See the method
    description for details.

    Attributes:
        operation (str):
            Name of the Operations resource to return.
        project (str):
            Project ID for this request.
        region (str):
            Name of the region for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    operation = proto.Field(
        proto.STRING,
        number=52090215,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    region = proto.Field(
        proto.STRING,
        number=138946292,
    )


class WaitZoneOperationRequest(proto.Message):
    r"""A request message for ZoneOperations.Wait. See the method
    description for details.

    Attributes:
        operation (str):
            Name of the Operations resource to return.
        project (str):
            Project ID for this request.
        zone (str):
            Name of the zone for this request.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    operation = proto.Field(
        proto.STRING,
        number=52090215,
    )
    project = proto.Field(
        proto.STRING,
        number=227560217,
    )
    zone = proto.Field(
        proto.STRING,
        number=3744684,
    )


class ZoneSetLabelsRequest(proto.Message):
    r"""

    Attributes:
        label_fingerprint (str):
            The fingerprint of the previous set of labels
            for this resource, used to detect conflicts. The
            fingerprint is initially generated by Compute
            Engine and changes after every request to modify
            or update labels. You must always provide an
            up-to-date fingerprint hash in order to update
            or change labels. Make a get() request to the
            resource to get the latest fingerprint.

            This field is a member of `oneof`_ ``_label_fingerprint``.
        labels (Mapping[str, str]):
            The labels to set for this resource.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    label_fingerprint = proto.Field(
        proto.STRING,
        number=178124825,
        optional=True,
    )
    labels = proto.MapField(
        proto.STRING,
        proto.STRING,
        number=500195327,
    )


class ZoneSetPolicyRequest(proto.Message):
    r"""

    Attributes:
        bindings (Sequence[google.cloud.compute_v1.types.Binding]):
            Flatten Policy to create a backwacd
            compatible wire-format. Deprecated. Use 'policy'
            to specify bindings.
        etag (str):
            Flatten Policy to create a backward
            compatible wire-format. Deprecated. Use 'policy'
            to specify the etag.

            This field is a member of `oneof`_ ``_etag``.
        policy (google.cloud.compute_v1.types.Policy):
            REQUIRED: The complete policy to be applied
            to the 'resource'. The size of the policy is
            limited to a few 10s of KB. An empty policy is
            in general a valid policy but certain services
            (like Projects) might reject them.

            This field is a member of `oneof`_ ``_policy``.
    """
    __module__ = __module__.rsplit(".", maxsplit=1)[0]  # type: ignore

    bindings = proto.RepeatedField(
        proto.MESSAGE,
        number=403251854,
        message="Binding",
    )
    etag = proto.Field(
        proto.STRING,
        number=3123477,
        optional=True,
    )
    policy = proto.Field(
        proto.MESSAGE,
        number=91071794,
        optional=True,
        message="Policy",
    )


__all__ = tuple(sorted(__manifest__))
